/******************************************************************************/
/*                                                                            */
/* Project N°  :  RB0505                                                      */
/*                                                                            */
/*----------------------------------------------------------------------------*/
/*                                                                            */
/* Filename  : HMI_LoupeAlarm.hpp 		  					   	          	  	  	*/
/*                              	                                             */
/*----------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------*/


/******************************************************************************/
/*%C                     Functionnal description :                            */
/*%C																		  							*/
/*%C Classe declaration for HMI_LoupeAlarm.cpp 						  		      	*/
/*%C			                                                                  */
/******************************************************************************/

#ifndef LoupeAlarmH
#define LoupeAlarmH


/******************************************************************************/
/*                           	INCLUDE                    	      			  	*/
/******************************************************************************/

#include "typedef.h"
#include "HMI_Loupe.hpp"

/******************************************************************************/
/*                           CONSTANT DECLARATION                    	      */
/******************************************************************************/

class LoupeAlarm: public Loupe
{
private:
   
   /* Parametres */
   
   /* Methodes */

protected:

   /* Parametres */

   /* Methodes */

public:

   /* Parametres */

   /* Methodes */

   LoupeAlarm();
   
   virtual void Format(DataType Type);

};

#endif
