// v_2.45.2, Mon Mar 30 17:41:51 2020
#line 1 "..\\..\\SRC\\HMI\\HMI_Message2.cpp"
#line 28 "..\\..\\SRC\\DATABASE\\DB_AlarmStatus.h"
enum e_DB_ALARMS {
Mark_Begin_Alarm,
ALARM_DISCONNECTION_U16,
ALARM_HIGH_PRESSURE_U16,
ALARM_APNEA_U16,
ALARM_HIGH_VTI_U16,
ALARM_LOW_VTI_U16,
ALARM_LOW_VTE_U16,
ALARM_HIGH_RATE_U16,
ALARM_AC_POWER_FAIL_U16,
ALARM_DC_POWER_FAIL_U16,
ALARM_CHECK_SUPPLY_U16,
ALARM_LOW_BATTERY_U16,
ALARM_END_OF_BATTERY_U16,
ALARM_CHECK_BATTERY_U16,
ALARM_NO_BATTERY_U16,
ALARM_CHECK_BUZZER_U16,
ALARM_BUZZER_BATTERY_LOW_U16,
ALARM_BUZZER_BATTERY_CHARGE_FAILURE_U16,
ALARM_RESERVED_18,
ALARM_TECHNICAL_PROBLEM_U16,
ALARM_CHECK_SETTINGS_U16,
ALARM_CHECK_PRESSURE_U16,
ALARM_CHECK_PROXIMAL_U16,
ALARM_PROXI_DISCONNECTION_U16,
ALARM_NO_PROXIMAL_U16,
ALARM_CHECK_VALVE_U16,
ALARM_CHECK_VOLUME_U16,
ALARM_VALVE_LEAKAGE_U16,
ALARM_CHECK_REMOTE_ALARM_U16,
ALARM_UNKNOWN_BATTERY_U16,
ALARM_CHECK_BATTERY_CHARGE_U16,
ALARM_HIGH_VTE_U16,
ALARM_CALIBRATION_FAIL_U16,
ALARM_KEYBOARD_DEFAULT_U16,
ALARM_AMBIENT_TEMP_U16,
ALARM_BAT_TEMP_U16,
ALARM_FAILURE_24V_U16,
ALARM_COOLING_FAN_U16,
ALARM_SUPPLY_MEASURE_U16,
ALARM_TURBINE_OVERHEAT_U16,
ALARM_RESERVED_40,
ALARM_CONTROLLED_CYCLES_U16,
ALARM_OCCLUSION_U16,
ALARM_CPU_REFERENCE_U16,
ALARM_BREATH_TIME_CYCLED_U16,
ALARM_INSP_FLOW_FAILURE_U16,
ALARM_CHECK_VALVE_PRESSURE_U16,
ALARM_UTILISER_VALVE_CHANGER_PE_PI_1_U16,
ALARM_UTILISER_VALVE_CHANGER_PE_PI_2_U16,
ALARM_ENLEVER_VALVE_CHANGER_PE_PI_1_U16,
ALARM_ENLEVER_VALVE_CHANGER_PE_PI_2_U16,
ALARM_UTILISER_VALVE_1_U16,
ALARM_UTILISER_VALVE_2_U16,
ALARM_ENLEVER_VALVE_1_U16,
ALARM_ENLEVER_VALVE_2_U16,
ALARM_LEAKAGE_U16,
ALARM_CHECK_FIO2_U16,
ALARM_LOW_FIO2_U16,
ALARM_HIGH_FIO2_U16,
ALARM_NO_FIO2_SENSOR_U16,
ALARM_CALIB_FIO2_U16,
ALARM_CHECK_O2_SUPPLY_U16,
ALARM_MISSING_O2_SUPPLY_U16,
ALARM_CHECK_O2_U16,
ALARM_O2_LEAKAGE_U16,
ALARM_HIGH_SPO2_U16,
ALARM_LOW_SPO2_U16,
ALARM_SPO2_SENSOR_DISCONNECTED_U16,
ALARM_100_PER_CENT_O2_U16,
ALARM_DELAYED_MESSAGE_U16,
ALARM_LEAK_OCCLUSION_U16,
ALARM_VOLUNTARY_STOP_U16,
ALARM_NEEDED_FIO2_CALIB_U16,
ALARM_APNEA_FLAG_U16,
Mark_Displayed_Alarm,
Mark_Begin_Technical_Alarm,
TECH_ALARM_RESERVED_1,
TECH_ALARM_INSP_FLOW_OFFSET_DEFAULT_U16,
TECH_ALARM_EXHAL_FLOW_OFFSET_DEFAULT_U16,
TECH_ALARM_VALVE_PRESS_OFFSET_DEFAULT_U16,
TECH_ALARM_INTERNAL_PRESSURE_OFFSET_DEFAULT_U16,
TECH_ALARM_SPEED_DEFAULT_U16,
TECH_ALARM_CLOCK_DEFAULT_U16,
TECH_ALARM_PROXIMAL_PRESSURE_OFFSET_DEFAULT_U16,
TECH_ALARM_VERY_LOW_PROXIMAL_PRESS_U16,
TECH_ALARM_VERY_LOW_INTERNAL_PRESS_U16,
TECH_ALARM_VERY_LOW_VALVE_PRESS_U16,
TECH_ALARM_LOOSE_FLASH_POINTER,
TECH_ALARM_FIO2_OFFSET_DEFAULT,
TECH_ALARM_OFFSET_O2_FLOW,
TECH_ALARM_O2_PRESSURE_OFFSET_DEFAULT,
TECH_ALARM_RESERVED_16,
TECH_ALARM_RESERVED_17,
TECH_ALARM_RESERVED_18,
TECH_ALARM_RESERVED_19,
TECH_ALARM_RESERVED_20,
end_of_alarms_table,
NO_ALARM};
#line 32 "..\\..\\SRC\\DATABASE\\DB_Event.h"
enum e_EVENT_ENUM {

NO_EVENT,
EVENT_START,
EVENT_VENTIL,
EVENT_VOLUNTARY_STOP_VENTIL,
EVENT_MODIF_PEEP,
EVENT_MODIF_BACKUP_R,
EVENT_RESET_PATIENT_COUNTER,
EVENT_MODIF_CONTROL_R,
RESERVED_8,
EVENT_MODIF_VOL_CONTROL,
EVENT_MODIF_RAMP,
EVENT_MODIF_IE,
RESERVED_12,
EVENT_MODIF_STOP_DEVICE,
EVENT_MODIF_INSP_SENS,
EVENT_MODIF_MODE,
EVENT_MODIF_RISE_TIME,
EVENT_MODIF_P_SUPPORT,
EVENT_MODIF_VTC,
EVENT_MODIF_PIMAX,
EVENT_MODIF_IT,
RESERVED_21,
EVENT_MODIF_EXH_SENS,
EVENT_MODIF_APNEA_TIME,
EVENT_MODIF_LOW_PIP,
EVENT_MODIF_HIGH_PIP,
EVENT_MODIF_HIGH_R,
EVENT_MODIF_LOW_VTE,
RESERVED_28,
RESERVED_29,
EVENT_MODIF_LOW_VTI,
EVENT_MODIF_HIGH_VTI,
RESERVED_32,
RESERVED_33,
RESERVED_34,
RESERVED_35,
EVENT_UNVOLUNTARY_STOP_VENTIL,
RESERVED_37,
RESERVED_38,
RESERVED_39,
EVENT_EXH_FLOW_CALIB,
RESERVED_41,
EVENT_MODIF_FIO2,
EVENT_FIO2_CALIB,
EVENT_MODIF_MAX_LEAK,
EVENT_INSP_FLOW_CALIB,
EVENT_O2_FLOW_CALIB,
EVENT_PATIENT_PRESS_CALIB,
RESERVED_48,
EVENT_MODIF_SPO2_MAXI,
EVENT_MODIF_SPO2_MINI,
EVENT_MODIF_TI_MAXI,
EVENT_MODIF_TI_MINI,
EVENT_VALVE_PRESS_CALIB,
EVENT_AC_RETURN,
EVENT_O2_PRESS_CALIB,
EVENT_ALARM_INHIBITION,
EVENT_DC_RETURN,
EVENT_CIRCUIT_CHECK_MENU_ACCESS,
EVENT_MAINTENANCE_MENU_ACCESS,
EVENT_ALARM_CANCELLATION,
EVENT_MODIF_P_CONTROL,
EVENT_MODIF_TI_CONTROL,
RESERVED_63,
RESERVED_64,
EVENT_MODIF_HIGH_VTE,
EVENT_MODIF_TIME,
EVENT_MODIF_DATE,
EVENT_USB_TOO_MANY_KEYS_CONNECTED,
EVENT_USB_KEY_DISCONNECTED_DURING_OPERATION,
EVENT_USB_TRANSFER_ERROR,
EVENT_USB_ERASE_KEY_ERROR,
EVENT_USB_SETTINGS_INCOMPATIBLES,
EVENT_USB_SETTINGS_FILE_ERROR,
EVENT_USB_KEY_FULL,
EVENT_USB_SETTINGS_TRANSFER_FROM_KEY,
EVENT_MODIF_FIO2_MAXI,
EVENT_MODIF_FIO2_MINI,
EVENT_MODIF_DISCONNECTION_DELAY,
EVENT_MODIF_SIGHT_COUNT,
EVENT_MODIF_SIGHT_COEF,
EVENT_FLASH_CHECKSUM_POST_ERROR,
EVENT_RAM_CHECKSUM_POST_ERROR,
EVENT_VOLT_REFERENCE_POST_ERROR,
EVENT_EEPROM_POST_ERROR,
EVENT_POST_VERSION_ERROR,
EVENT_USB_CONTINUOUS_TRANSFER_START,
EVENT_USB_CONTINUOUS_TRANSFER_STOP,
RESERVED_88,
Start_Alarm,
EVENT_AL_HIGH_PRESS,
EVENT_AL_DISCONNECTION,
EVENT_AL_HIGH_RATE,
EVENT_AL_LOW_VTI,
EVENT_AL_HIGH_VTI,
EVENT_AL_LOW_VTE,
EVENT_AL_VALVE_LEAKAGE,
EVENT_AL_APNEA,
EVENT_AL_LOW_FIO2,
EVENT_AL_HIGH_FIO2,
EVENT_AL_CHECK_PRESSURE,
EVENT_AL_CHECK_VALVE,
EVENT_AL_AC_POWER_FAIL,
EVENT_AL_DC_POWER_FAIL,
EVENT_AL_LOW_BATTERY,
EVENT_AL_END_OF_BATTERY,
EVENT_AL_CHECK_BATTERY,
EVENT_AL_HIGH_SPO2,
EVENT_AL_NO_FIO2_SENSOR,
EVENT_AL_LEAKAGE,
EVENT_AL_LEAK_OCCLUSION,
EVENT_AL_LOW_SPO2,
EVENT_AL_NO_BATTERY,
EVENT_AL_NO_PROXI,
EVENT_AL_O2_LEAKAGE,
EVENT_AL_CHECK_VOLUME,
EVENT_AL_CHECK_BUZZER,
EVENT_AL_CHECK_FIO2,
EVENT_AL_CHECK_O2,
EVENT_AL_CHECK_O2_SUPPLY,
EVENT_AL_CHECK_PROXIMAL,
EVENT_AL_CHECK_REMOTE_ALARM,
EVENT_AL_CHECK_SUPPLY,
RESERVED_123,
EVENT_AL_CONNECT_VALVE,
EVENT_AL_CONNECT_VALVE_CHANGE_PI_PE,
EVENT_AL_DISCONNECT_VALVE,
EVENT_AL_DISCONNECT_VALVE_CHANGE_PI_PE,
EVENT_AL_PROXIMAL_DISCONNECTION,
EVENT_AL_TECHNICAL_PROBLEM,
EVENT_AL_CHECK_VALVE_PRESSURE,
EVENT_AL_SPO2_SENSOR_DISCONNECTED,
EVENT_AL_MISSING_O2_SUPPLY,
EVENT_AL_CONTROLLED_CYCLES,
RESERVED_134,
EVENT_AL_100_PER_CENT_O2,
EVENT_AL_UNKNOWN_BATTERY,
EVENT_AL_CHECK_BATTERY_CHARGE,
RESERVED_138,
RESERVED_139,
RESERVED_140,
RESERVED_141,
EVENT_AL_NEW_VERSION,
EVENT_AL_EEPROM_OUT_OF_RANGE,
EVENT_AL_EEPROM_LOOSING_PARAM,
RESERVED_145,
EVENT_AL_HIGH_VTE,
EVENT_AL_KEYBOARD,
EVENT_AL_CALIBRATION,
EVENT_AL_COOLING_FAN,
EVENT_AL_AMBIENT_TEMP,
EVENT_AL_BAT_TEMP,
EVENT_AL_SUPPLY_MEASURE,
EVENT_AL_FAILURE_24V,
EVENT_AL_TURBINE_OVERHEAT,
EVENT_AL_OCCLUSION,
EVENT_AL_CPU_REFERENCE,
RESERVED_157,
EVENT_AL_BREATH_TIME_CYCLED,
EVENT_AL_INSP_FLOW_FAILURE,
EVENT_AL_LOW_BUZZER_BATTERY,
RESERVED_161,
EVENT_AL_BUZZER_BATTERY_CHARGE_FAILURE,
EVENT_AL_NEEDED_FIO2_CALIB,
EVENT_AL_VOLUNTARY_STOP,
RESERVED_165,
RESERVED_166,
RESERVED_167,
End_Event_Alarm,
Start_End_Of_Alarm,
EVENT_AL_END_OF_APNEA,
EVENT_AL_END_OF_CHECK_BATTERY,
EVENT_AL_END_OF_DISCONNECTION,
EVENT_AL_END_OF_CHECK_FIO2,
EVENT_AL_END_OF_CHECK_O2,
EVENT_AL_END_OF_CHECK_O2_SUPPLY,
EVENT_AL_END_OF_CHECK_PRESSURE,
EVENT_AL_END_OF_CHECK_PROXIMAL,
RESERVED_178,
RESERVED_179,
EVENT_AL_END_OF_CHECK_SUPPLY,
EVENT_AL_END_OF_CHECK_VALVE,
EVENT_AL_END_OF_LEAK_OCCLUSION,
EVENT_AL_END_OF_CHECK_VOLUME,
EVENT_AL_END_OF_CONNECT_VALVE,
EVENT_AL_END_OF_CONNECT_VALVE_CHANGE_PI_PE,
EVENT_AL_END_OF_DISCONNECT_VALVE,
EVENT_AL_END_OF_DISCONNECT_VALVE_CHANGE_PI_PE,
EVENT_AL_END_OF_HIGH_FIO2,
EVENT_AL_END_OF_HIGH_PRESSURE,
EVENT_AL_END_OF_HIGH_RATE,
EVENT_AL_END_OF_HIGH_SPO2,
EVENT_AL_END_OF_HIGH_VTI,
EVENT_AL_END_OF_LEAKAGE,
EVENT_AL_END_OF_LOW_FIO2,
EVENT_AL_END_OF_LOW_SPO2,
EVENT_AL_END_OF_LOW_VTE,
EVENT_AL_END_OF_LOW_VTI,
EVENT_AL_END_OF_NO_BATTERY,
EVENT_AL_END_OF_NO_FIO2_SENSOR,
EVENT_AL_END_OF_NO_PROXI,
EVENT_AL_END_OF_O2_LEAKAGE,
EVENT_AL_END_OF_PROXI_DISCONNECTION,
EVENT_AL_END_OF_TECHNICAL_PROBLEM,
EVENT_AL_END_OF_VALVE_LEAKAGE,
EVENT_AL_END_OF_HIGH_VTE,
EVENT_AL_END_KEYBOARD,
EVENT_AL_END_CHECK_VALVE_PRESSURE,
EVENT_AL_END_SPO2_SENSOR_DISCONNECTED,
EVENT_AL_END_MISSING_O2_SUPPLY,
EVENT_AL_END_CONTROLLED_CYCLES,
RESERVED_211,
EVENT_AL_END_OF_100_PER_CENT_O2,
EVENT_AL_END_OF_UNKNOWN_BATTERY,
EVENT_AL_END_OF_CHECK_BATTERY_CHARGE,
RESERVED_215,
RESERVED_216,
RESERVED_217,
RESERVED_218,
EVENT_AL_END_COOLING_FAN,
EVENT_AL_END_AMBIENT_TEMP,
EVENT_AL_END_BAT_TEMP,
EVENT_AL_END_SUPPLY_MEASURE,
EVENT_AL_END_FAILURE_24V,
RESERVED_224,
EVENT_AL_END_OCCLUSION,
EVENT_AL_END_CPU_REFERENCE,
RESERVED_227,
EVENT_AL_END_BREATH_TIME_CYCLED,
EVENT_AL_END_OF_INSP_FLOW_FAILURE,
EVENT_AL_END_LOW_BUZZER_BATTERY,
RESERVED_231,
EVENT_AL_END_BUZZER_BATTERY_CHARGE_FAILURE,
EVENT_AL_END_OF_VOLUNTARY_STOP,
RESERVED_234,
RESERVED_235,
End_Alarm,
Start_Anomalies,
RESERVED_238,
EVENT_ALT_INSP_FLOW_OFFSET,
EVENT_ALT_EXH_FLOW_OFFSET,
EVENT_ALT_VALVE_PRESSURE_OFFSET,
EVENT_ALT_INT_PRESS_OFSSET,
EVENT_ALT_SPEED,
EVENT_ALT_CLOCK,
EVENT_ALT_PROXI_PRESS_OFSSET,
EVENT_ALT_VERY_LOW_PROXI_PRESS,
EVENT_ALT_VERY_LOW_INT_PRESS,
EVENT_ALT_VERY_LOW_VALVE_PRESS,
EVENT_ALT_LOOSE_FLASH_POINTER,
EVENT_ALT_FIO2_OFFSET,
EVENT_ALT_O2_FLOW_OFFSET,
EVENT_ALT_O2_PRESSURE_OFFSET,
RESERVED_253,
RESERVED_254,
End_Anomalie};
#line 34 "..\\..\\SRC\\DATABASE\\DB_Control.h"
enum e_DB_CONTROL {
VENTIL_AUTHORIZATION_U16,
CURRENT_MODE_U16,
CHANGE_MODE_U16,
VENTIL_STATE_U16,
SIMV_CYCLES_U16,
CALIB_PATIENT_PRESS_REQ_U16,
CALIB_FLOW_INSP_REQ_U16,
CALIB_FLOW_EXH_REQ_U16,
CALIB_VALVE_PRESS_REQ_U16,
CALIB_FAS_VALVE_REQ_U16,
INHIBITED_BUZZER_U16,
INHIBITION_AUTHORIZATION_U16,
CANCELLED_ALARM_U16,
BUZZER_CMD_U16,
CALIB_ADJUST_CMD_U16,
SETUP_CONTROL_SET_POINT_U16,
SETUP_CONTROL_TYPE_U16,
SUPPLY_AC_DC_BAT_U16,
DISPLAY_BATTERY_U16,
CURRENT_PATIENT_COUNTER_HOUR_U16,
CURRENT_PATIENT_COUNTER_MIN_U16,
CURRENT_MACHINE_COUNTER_HOUR_U16,
CURRENT_MACHINE_COUNTER_MIN_U16,
CONTROL_BUZZER_U16,
VALVE_DETECTED_U16,
AC_SELECTED_U16,
DC_SELECTED_U16,
REMOTE_STATE_U16,
PROXI_DETECTED_U16,
ALARM_DETECTED_U16,
NEW_ALARM_HP_DETECTED_U16,
Start_Limit_Setting,
LIMIT_LOW_PIP_U16,
LIMIT_HIGH_PIP_U16,
LIMIT_PEEP_U16,
LIMIT_VOL_CONTROL_U16,
LIMIT_TI_CONTROL_U16,
LIMIT_CONTROL_R_U16,
LIMIT_PI_U16,
LIMIT_LOW_VTI_U16,
LIMIT_HIGH_VTI_U16,
LIMIT_LOW_VTE_U16,
LIMIT_HIGH_VTE_U16,
LIMIT_P_SUPPORT_U16,
LIMIT_TI_MIN_U16,
LIMIT_TI_MAX_U16,
LIMIT_SPO2_MINI_U16,
LIMIT_SPO2_MAXI_U16,
LIMIT_INSP_SENS_U16,
LIMIT_SIGH_U16,
LIMIT_TARGET_VT_U16,
LIMIT_APNEA_U16,
LIMIT_HIGH_FIO2,
LIMIT_LOW_FIO2,
LIMIT_SPO2,
LIMIT_BACKUP_R_U16,
LIMIT_PMAX_U16,
End_Limit_Setting,
UNCANCEL_CMD_U16,
SUPPLY_BUS_FAILURE_U16,
KEYBOARD_ANOMALIE_U16,
VALIDATION_BIP_U16,
BIP_RUNNING_U16,
MAINTENANCE_MODE_U16,
CALIBRATION_MODE_U16,
TEST_BUZ_CARD_U16,
TEST_BUZ_SEC_U16,
TEST_VOLUME_U16,
CANCEL_ALARM_ASKED,
KEY_EVENT_U16,
BACKLIGHT_OFF_U16,
HIGH_PRESSURE_LED_REMINDER_U16,
RECORD_SETTINGS_USB_U16,
APPLY_SETTINGS_USB_U16,
ERASE_KEY_USB_U16,
RECORD_TIME_TENDANCE_U16,
ERROR_SPO2_SENSOR_DETECTED,
DETECTED_FIO2_SENSOR,
CALIBRATED_FIO2_SENSOR,
CALIB_ADJUST_VANNE_FIO2_CMD,
CALIB_FIO2_REQ_U16,
CALIB_FLOW_O2_REQ_U16,
MEMO_CMD_VANNE_FIO2_TO_CALIB,
CALIB_PRESS_O2_REQ_U16,
FLOW_SAT_FLAG_U16,
HIGH_PRESSURE_DETECTED_U16,
HIGH_PRESSURE_EXHALATION_DETECTED_U16,
HIGH_PRESSURE_FILTER_WINDOW_U16,
FIO2_100_ACTIVE,
LOAD_USB_SETTINGS_U16,
COM_READY_U16,
START_MONITORING_U16,
SIMV_PSV_CYCLE_U16,
BLOC_EXPI_DETECTED_U16,
ADJUSTMENT_IN_PROGRESS_U16,
VALVE_DETECT_IN_PROGRESS_U16,
EXHAL_FLOW_USE_U16,
FLAT_INT_U16,
FLAT_PROXI_U16,
VALVE_O2_CMD_U16,
CPAP_TRIG_I_U16,
CPAP_TRIG_E_U16,
CONTROLER_TYPE_U16,
VTI_DISPLAY_DELAY_U16,
VOLUNTARY_STOP_U16,
SIMV_CONTROLLED_INSP_U16,
END_OF_OPERATION_U16,
CIRCUIT_CHECK_MODE_U16,
end_of_db_control_table};
#line 37 "..\\..\\SRC\\GENERAL\\Enum.h"
enum e_SYMBOL {
LOGO_LEGENDAIR,
KEY_WHITE,
BAT,
BLACK_SQUARES,
FREE_SQUARE,
KEY,
LOS,
BLACK_LOS,
LESS_OR_MORE,
RAMPE1,
RAMPE2,
RISETIME1,
RISETIME2,
RISETIME3,
RISETIME4,
TRIGGER,
TRIGGERINV,
VENTIL,
LOCKS,
PAUSE,
VALVE_BLACK,
VALVE_WHITE,
CADRE_WHITE_BG,
CADRE_WHITE_HD,
CADRE_BLACK_BG,
CADRE_BLACK_HD,
TRIANGLE_BLACK,
TRIANGLE_WHITE,
FLECHE_GRAPH_HAUT,
FLECHE_GRAPH_DROITE,
CADRE_WHITE_HG,
CADRE_WHITE_BD,
CADRE_BLACK_HG,
CADRE_BLACK_BD,
BAT_INV,
CADRE_BLACK_BGw,
CADRE_BLACK_BDw,
CADRE_BLACK_HGw,
CADRE_BLACK_HDw,
CADRE_WHITE_HGw,
CADRE_WHITE_HDw,
CADRE_WHITE_BDw,
CADRE_WHITE_BGw,
BELL_BLACK,
ALARM_TRIANGLE_BLACK,
EQUAL,
HEART,
CADRE_WHITE_ALARM_HGw,
CADRE_WHITE_ALARM_HDw,
CADRE_WHITE_ALARM_BDw,
CADRE_WHITE_ALARM_BGw,
HEART_INVERSE_VIDEO,
ALARM_TRIANGLE_BLACK_DOT,
RAMPE3,
LOGO_M2,
LOGO_XL2,
LOGO_S2,
LOGO_XL2_US,


CHART_VERSION,
TRADEMARK,
COMPANY,
WHITE_SQUARE,
WHITE_LOCK,
NO};
#line 112
enum e_HMI_LANG {
HMI_LANG_CHINESE,
HMI_LANG_DANISH,
HMI_LANG_GERMAN,
HMI_LANG_ENGLISH,
HMI_LANG_ENGLISH_US,
HMI_LANG_SPANISH,
HMI_LANG_FRENCH,
HMI_LANG_GREEK,
HMI_LANG_ITALIAN,
HMI_LANG_JAPANESE,
HMI_LANG_KOREAN,
HMI_LANG_DUTCH,
HMI_LANG_NORWISH,
HMI_LANG_POLISH,
HMI_LANG_PORTUGUESE,
HMI_LANG_RUSSIAN,
HMI_LANG_FINNISH,
HMI_LANG_SWEDISH,
HMI_LANG_TURKISH};
#line 137
enum e_TI {
TIMIN,
TIMAX,
end_of_e_TI};



enum e_ActiveModeState {
ACTIVATED,

EXHALATION,
INSPIRATION,

PSV_EXHALATION,
PSV_INSPIRATION,
CC_EXHALATION,
CC_INSPIRATION,

SIMV_VSIMV_EXHALATION,
SIMV_CAV_INSPIRATION,
SIMV_PSV_INSPIRATION,
SIMV_CV_EXHALATION,
SIMV_CV_INSPIRATION,
SIMV_VSIMV_EXHALATION_APNEA,
SIMV_CV_INSPIRATION_APNEA,

SIMV_PSIMV_EXHALATION,
SIMV_CAP_INSPIRATION,
SIMV_CP_EXHALATION,
SIMV_CP_INSPIRATION,
SIMV_PSIMV_EXHALATION_APNEA,
SIMV_CP_INSPIRATION_APNEA,

CPAP_EXHALATION,
CPAP_INSPIRATION};




enum e_DB_ALARM_LEVEL_PRIORITY {



TEC,



WP,



VLP,



LP,



MPR,



HP,



VHP,



UA,



IA};




enum e_ALARM_ERROR {
NO_ERR_AL,
ERR_AL_DISCONNECTION,
ERR_AL_HIGH_PRESSURE,
ERR_AL_APNEA,
ERR_AL_HIGH_VTI,
ERR_AL_LOW_VTI,
ERR_AL_LOW_VTE,
ERR_AL_HIGH_VTE,
ERR_AL_HIGH_VM,
ERR_AL_LOW_VM,
ERR_AL_LOW_RATE,
ERR_AL_HIGH_RATE,
ERR_AL_POWER_SUPPLY_LOSS,
ERR_AL_AC_POWER_FAIL,
ERR_AL_DC_POWER_FAIL,
ERR_AL_CHECK_SUPPLY,
ERR_AL_PERIODICAL_SIGNAL,
ERR_AL_LOW_BATTERY,
ERR_AL_END_OF_BATTERY,
ERR_AL_CHECK_BATTERY,
ERR_AL_NO_BATTERY,
ERR_AL_CHECK_BUZZER,
ERR_AL_BUZZER_BATTERY_LOW,
ERR_AL_BUZZER_BATTERY_FAILURE,
ERR_AL_BUZZER_BATTERY_CHARGE_FAILURE,
ERR_AL_TECHNICAL_PROBLEM,
ERR_AL_EEPROM_OUT_OF_RANGE,
ERR_AL_EEPROM_LOOSING_PARAM,
ERR_AL_NEW_VERSION,
ERR_AL_ERROR_VERSION,
ERR_AL_REVERSED_IE,
ERR_AL_CHECK_PRESSURE,
ERR_AL_CHECK_PROXIMAL,
ERR_AL_PROXI_DISCONNECTION,
ERR_AL_NO_PROXIMAL,
ERR_AL_NO_VALVE_DETECTION,
ERR_AL_CHECK_VALVE,
ERR_AL_CHECK_VOLUME,
ERR_AL_VALVE_LEAKAGE,
ERR_AL_CHECK_REMOTE_ALARM,
ERR_AL_UNKNOW_BATTERY,
ERR_AL_CHECK_BATTERY_CHARGE,
ERR_AL_COOLING_FAN,
ERR_AL_AMBIENT_TEMP,
ERR_AL_BAT_TEMP,
ERR_AL_FAILURE_24V,
ERR_AL_SUPPLY_MEASURE,
ERR_AL_TURBINE_OVERHEAT,
ERR_AL_OCCLUSION,
ERR_AL_CPU_REFERENCE,
ERR_AL_CONTROLLED_CYCLES,
ERR_AL_CHECK_VALVE_PRESSURE,
ERR_AL_CHECK_PIPE,
ERR_AL_LEAKAGE,
ERR_AL_CHECK_FIO2,
ERR_AL_LOW_FIO2,
ERR_AL_HIGH_FIO2,
ERR_AL_NO_FIO2_SENSOR,
ERR_AL_CHECK_O2_SUPPLY,
ERR_AL_MISSING_O2_SUPPLY,
ERR_AL_CHECK_O2,
ERR_AL_O2_LEAKAGE,
ERR_AL_BREATH_TIME_CYCLED,
ERR_AL_INSP_FLOW_FAILURE,
ERR_AL_LEAK_OCCLUSION,
ERR_AL_VOLUNTARY_STOP,
ERR_AL_NEEDED_FIO2_CALIB,
end_of_error_alarm_table};




enum e_DB_ALARMS_STATE {
ALARM_FALSE,
ALARM_DETECTED,
ALARM_TRUE,
ALARM_DISPLAYED,
ALARM_CANCELED,
end_of_alarms_state_table};




enum e_DB_ALARMS_INDICATION_STATE {
ALARM_FALSE_STATE,
ALARM_DETECTED_STATE,
ALARM_INHIBITED_STATE,
end_of_alarms_indication_state_table};
#line 311
enum e_DB_VERSION {
VERSION_NUMBER_0,
VERSION_NUMBER_1,
VERSION_NUMBER_2,
VERSION_NUMBER_3,
SERIAL_NUMBER_1,
SERIAL_NUMBER_2,
SERIAL_NUMBER_3,
SERIAL_NUMBER_4,
SERIAL_NUMBER_5,
SERIAL_NUMBER_6,
end_of_db_version_table};




enum e_DB_Trend {
DB_TREND_VENTIL_HOUR,
DB_TREND_VENTIL_MIN,
DB_TREND_AVG_VTI,
DB_TREND_AVG_VTE,
DB_TREND_AVG_VM,
DB_TREND_AVG_FR,
DB_TREND_LEAK_MODE,
DB_TREND_AVG_LEAK,
DB_TREND_AVG_PI,
DB_TREND_IA,
DB_TREND_APNEA,
DB_TREND_PERCENT_CONTROLLED,
DB_TREND_PERCENT_TRIGGERED,
DB_TREND_SAVE_RTC_DAY,
DB_TREND_SAVE_RTC_MONTH,
DB_TREND_SAVE_RTC_YEAR,
DB_TREND_SAVE_PC_HOUR,
DB_TREND_SAVE_PC_MIN,
DB_TREND_NB_APNEA,
DB_TREND_APNEA_TIME,
DB_TREND_NB_CYCLE_COUNTER_MSB,
DB_TREND_NB_CYCLE_COUNTER_LSB,
DB_TREND_NB_CYCLE_TRIGERRED_MSB,
DB_TREND_NB_CYCLE_TRIGERRED_LSB,
DB_TREND_NB_CYCLE_CONTROLLED_MSB,
DB_TREND_NB_CYCLE_CONTROLLED_LSB,
DB_TREND_VENTIL_REPORT_UPD,
DB_TREND_IHM_VENTIL_HOUR,
DB_TREND_IHM_VENTIL_MIN,
DB_TREND_IHM_AVG_VTI,
DB_TREND_IHM_AVG_VTE,
DB_TREND_IHM_AVG_VM,
DB_TREND_IHM_AVG_FR,
DB_TREND_IHM_LEAK_MODE,
DB_TREND_IHM_AVG_LEAK,
DB_TREND_IHM_AVG_PI,
DB_TREND_IHM_IA,
DB_TREND_IHM_APNEA,
DB_TREND_IHM_PERCENT_CONTROLLED,
DB_TREND_IHM_PERCENT_TRIGGERED,
DB_TREND_IHM_SAVE_RTC_DAY,
DB_TREND_IHM_SAVE_RTC_MONTH,
DB_TREND_IHM_SAVE_RTC_YEAR,
end_of_db_trend_table};




enum e_TYPE_OF_DB_TARGET {
ADJUST,
CONTROL,
COMPUTE,
VERSION,
CONFIG,
RTC,
ALARMS,
POWER_SUPPLY,
KEYBOARD,
USB,
TREND,
CURRENT,
REVISION,
end_of_type_of_db_target};




enum e_DATA_OPERATION {
READ,
WRITE,
DECREASE,
INCREASE,
MIN,
MAX,
STEP,
READ_INFO,
WRITE_INFO};




enum e_MODE_TYPES {
VOL,
PRES,
PSVT,
VSIMV,
PSIMV,
CPAP,
nb_of_mode};



enum e_TRIGGER_LEVELS {
TRIGGER_LEVEL_OFF,
TRIGGER_LEVEL_0P,
TRIGGER_LEVEL_1P,
TRIGGER_LEVEL_2,
TRIGGER_LEVEL_3,
TRIGGER_LEVEL_4,
TRIGGER_LEVEL_5,
nb_of_trigger_levels};



enum e_TEST_STATES {
TEST_STATE_NOT_RUN,
TEST_STATE_RUNNING,
TEST_STATE_ABORTED,
TEST_STATE_PASS,
TEST_STATE_FAIL,
nb_of_test_states};




enum e_VEN_SIMVCycle {
CAV_Cycle,
CV_Cycle,
PSV_Cycle,
CAP_Cycle,
CP_Cycle};




enum e_SupplyInfo {
NONE,
AC,
DC,
BATTERY};




enum e_RTC_OPERATION {
NO_REQUEST,
ADJUST_DATE,
ADJUST_HOUR};




enum e_BadEraseState {
ERASE_OK,
BAD_TOTAL_ERASE};




enum e_RampType {
RAMP_DECELERATED,
RAMP_RECTANGLE,
RAMP_SINUS,
nb_of_ramps};
#line 487
enum e_VEN_ControllerType {
NO_CONTROL,
CONTROL_SPEED,
CONTROL_PRESSURE,
CONTROL_PRESSURE_VALVE,
CONTROL_PRESSURE_MAINT,
CONTROL_FLOW,
CONTROL_FLOW_EXH,
CONTROL_FLOW_O2,
CONTROL_FLOW_O2_MANUEL,
CONTROL_PRESSURE_O2};



enum e_VEN_Controller_Phase {
VEN_EXH_PLAT,
VEN_INSP_RISE,
VEN_INSP_PLAT,
VEN_EXH_FALL};




enum e_CalibrationCommand {
NO_CALIB,
SEGMENT_1,
SEGMENT_2,
SEGMENT_3,
SEGMENT_4,
SEGMENT_5,
SEGMENT_6,
SEGMENT_7,
SEGMENT_8,
TEST_LIMITES_REQUEST,
TEST_LIMITES_OK,
TEST_LIMITES_FALSE,
AUTOCALIB_SEG_1,
AUTOCALIB_SEG_2,
AUTOCALIB_SEG_3,
AUTOCALIB_SEG_4,
AUTOCALIB_SEG_5,
AUTOCALIB_SEG_6,
AUTOCALIB_SEG_7,
AUTOCALIB_SEG_8,
END_AUTOCALIB};




enum e_CalibrationType {
SYS_PATIENT_PRESS_CALIB,
SYS_VALVE_PRESS_CALIB,
SYS_INSP_FLOW_CALIB,
SYS_EXH_FLOW_CALIB,
SYS_EXH_FLOW_VERIF,
SYS_FIO2_CALIB,
SYS_O2_FLOW_CALIB,
SYS_O2_PRESSURE_CALIB,
end_of_sys_calib};
#line 552
enum e_VentilState {
VEN_EXHALATION = 251,
VEN_INSPIRATION_CONTROLED,
VEN_INSPIRATION_TRIGGERED,
VEN_VENTIL_DISABLE};



enum e_InspDetectType {
CONTROLLED,
TRIGGERED,
NO_INSP};




enum e_SYS_KeyboardInput {
KEY_NO_KEYBOARD,
KEY_CODE_MONIT_AND_DOWN,
KEY_CODE_MONIT_AND_UP,
KEY_CODE_UP_AND_DOWN,
Mark_Begin_Simple_Touch,
KEY_CODE_UP,
KEY_CODE_DOWN,
KEY_CODE_VALID,
KEY_CODE_MONIT,
KEY_CODE_STARTSTOPVENTIL,
KEY_CODE_100_O2,
KEY_CODE_NAVIG,
Number_of_key};
#line 587
enum e_TIM_TABLE_ID {
KEY_LONGPUSH_KEY_NO_KEYBOARD,
KEY_LONGPUSH_KEY_CODE_MONIT_AND_DOWN,
KEY_LONGPUSH_KEY_CODE_MONIT_AND_UP,
KEY_LONGPUSH_KEY_CODE_UP_AND_DOWN,
KEY_LONGPUSH_KEY_CODE_UP,
KEY_LONGPUSH_KEY_CODE_DOWN,
KEY_LONGPUSH_KEY_CODE_VALID,
KEY_LONGPUSH_KEY_CODE_MONIT,
KEY_LONGPUSH_KEY_CODE_STARTSTOPVENTIL,
end_of_keyboard_longpush_decnt,
KEY_AUTOREPEAT_KEY_NO_KEYBOARD,
KEY_AUTOREPEAT_KEY_CODE_MONIT_AND_DOWN,
KEY_AUTOREPEAT_KEY_CODE_MONIT_AND_UP,
KEY_AUTOREPEAT_KEY_CODE_UP_AND_DOWN,
KEY_AUTOREPEAT_KEY_CODE_UP,
KEY_AUTOREPEAT_KEY_CODE_DOWN,
KEY_AUTOREPEAT_KEY_CODE_VALID,
KEY_AUTOREPEAT_KEY_CODE_MONIT,
KEY_AUTOREPEAT_KEY_CODE_STARTSTOPVENTIL,
end_of_keyboard_autorepeat_decnt,
KEY_ANO_KEYB,
KEY_DELAY_BETWEEN_LONG_AUTOREPEAT,
KEY_DOUBLE_PULSE_TIME_OUT,
KEY_CONFIRM_VENT_STOP_TIMER,
VEN_TI_COUNT,
VEN_TE_COUNT,
VEN_SIMV_PERIOD_COUNT,
VEN_CONTROLLED_CYCLE_PERIOD_COUNT,
VEN_TIME_CALIB_FIO2,
VEN_VALVE_TIM,
VEN_VENTILATION_BIP,
VEN_END_COUNT0,
VEN_END_COUNT1,
VEN_END_COUNT2,
VEN_END_COUNT3,
VEN_END_COUNT4,
VEN_END_COUNT5,
SYS_TIME_OUT_SPEED,
SYS_1MINPAT,
SYS_TIME_OUT_CALIB,
SYS_TIME_AUTO_CALIB,
SYS_TIME_FAS_VALVE_CALIB,
SYS_TIME_SUPPLY_CHANGE,
SYS_TIME_DETECT_FIO2,
SYS_TIME_BACKLIGHT,
SYS_PRESSURE_CHOICE,
SYS_PRESSURE_CHOICE_INT,
SYS_PROXIMAL_TO_INTERNAL_SWITCH,
SYS_CHECK_PRESSURE,
SYS_CHECK_PROXIMAL,
SYS_VALVE_TIM,
SEC_PRESSURE_CHOICE,
SEC_LOW_PRESS,
SEC_HIGH_PRESSURE,
SEC_HIGH_PRESSURE_DETECT,
SEC_CPAP_HIGH_PRESSURE,
SEC_HIGH_PRESSURE_ALARM,
SEC_FLAG_HIGH_PRESSURE,
SEC_APNEA,
SEC_CHECK_PRESSURE,
SEC_CHECK_PROXIMAL,
SEC_NO_BATTERY_TIM,
SEC_CHECK_FIO2_TIM,
SEC_KEYBOARD_TIM,
SEC_SPEED_BLOW_TIM,
SEC_START_BIP_SOUND,
SEC_STOP_BIP_SOUND,
SEC_LOW_FIO2_TIM,
SEC_CPU_REFERENCE_FAILURE_TIM,
SEC_FLOW,
SEC_TIME_WAIT_STARTING,
SEC_HIGH_FIO2_TIM,
SEC_BAT_LOW_LEVEL,
SEC_HIGH_SPO2_TIM,
SEC_LOW_SPO2_TIM,
SEC_BAT_VERY_LOW_LEVEL,
SEC_BUZ_READ,
SEC_BATTERY_FAILURE_CO_BUZ,
SEC_DETECTION_BATTERY_FAILURE_CO_BUZ,
SEC_FAIL_AC_TIM,
SEC_FAIL_DC_TIM,
SEC_VALVE_CST,
SEC_PROXI_CST,
SEC_INT_CST,
SEC_CHECK_VALVE,
SEC_VALVE_PRESS,
SEC_INHIB_CHECK_FIO2,
SEC_INHIB_LOW_FIO2,
SEC_INHIB_HIGH_FIO2,
SEC_INHIB_CHECK_REMOTE,
SEC_CANCEL_HIGH_PRESSURE,
SEC_CHECK_SUPPLY,
SEC_PPC_APNEA,
SEC_PROX_DISC,
SEC_RAZ_CHECK_BAT,
SEC_CHECK_PRESS,
SEC_CHECK_PRESS2,
SEC_CHECK_PROXI,
SEC_CHECK_REMOTE,
SEC_BAT_P_S_TIM,
SEC_INHIB_BUZZER,
SEC_LOW_PRIORITY_BURST,
SEC_MEDIUM_PRIORITY_BURST,
SEC_HIGH_PRIORITY_BURST,
SEC_BUZZER_PULSE,
SEC_BUZZER_SILENCE,
SEC_BUZZER_SOUND_MAX,
SET_VALIDATION_BIP,
SEC_NO_PROXIMAL,
SET_HISTO_BIP,
SEC_BLOWER_OVERHEAT,
ACT_MIN_FLOW,
ACT_STOP_ADAPTATION,
WAIT_USB_BUSY,
USB_CONNECT_DISCONNECT_KEY,
USB_WAIT_READ_FIFO,
SPI_FRAME_TIME,
SPI_WAIT_DISPLAY_BATTERY_GAUGE,
TIM_COM_RECORDING_MONIT,
TIM_USB_RECORDING_MONIT,
SEC_CHECK_VALVE_PRESSURE,
SEC_LEAKAGE,
SEC_CHECK_O2_SUPPLY,
SEC_O2_LEAKAGE,
SEC_100_FIO2_TIM,
INT_MEASURE_BUZZER,
SEC_CANCEL_BATTERY_FAILURE_CO_BUZ,
ACT_BOOST_FREQ,
SEC_LEAK_OCCLUSION,
SEC_CPU_REF_FAILURE,
SEC_APNEA_FLAG,
SEC_OCCLUSION_TIMER,
end_of_table_cnt_decnt};



enum e_TIM_MINUTE_TABLE_ID {
TimerWelcomeEvent,
TimerHideLoupe,
TimerBlinkEvent,
TimeOutModifEvent,
TimerQuitHistoAlarme,
TimerQuitPreferences,
TimerQuitGraphConfig,
TimerRefresh,
TimerStopModifMode,
TimerAutoCalibTest,
TimerRefreshAlarm,
TimerSwapAlarm,
TimerTriggerOk,
TimerSpyPraram,
TimerHideAlarmMessage,
TimerHideStopVentMess,
TimerAddToBlinkEvent,
TimerWaitCalibVerif,
TimerHistoAlarmSeek,
TimerHistoAnoSeek,
TimerWaitCalibQExp,
TimerWaitCalibFiO2,
TimerUsbMessage,
TimerUsbProcessing,
Timer100PrCentO2,
TimerVenRecordingApnea,
TimerUsbRecordingDetailledHorodatage,
TimerUsbCommandTooLong,
TimerQuitVentilReport,
SEC_PERIODICAL_BIP,
TimerEndLongDownKey,
TimerEndLongUpKey,
TimerDoubleAlarm,
SEC_BATTERY_FAILURE_CHARGE_BUZ_READ,
SEC_LOW_BATTERY_BUZ_READ,
SEC_BATTERY_FAILURE_CC_BUZ,
TimerLeakTest,
end_of_minute_ihm_table_decnt,
end_of_minute_table_cnt_decnt};



enum e_TYPE_USE_TIMER {
COUNT,
DECOUNT};




enum e_DRV_RTC_ACCESS_STATE {
FREE_RTC,
READ_RTC,
WRITE_RTC,
ERROR_RTC};




enum e_DRV_RTC_REGISTER {
RTC_SECOND,
RTC_MINUTE,
RTC_HOUR,
RTC_DAY,
RTC_DATE,
RTC_MONTH,
RTC_YEAR,
RTC_SEC_ALARM1,
RTC_MIN_ALARM1,
RTC_HOURS_ALARM1,
RTC_DAY_ALARM1,
RTC_SEC_ALARM2,
RTC_MIN_ALARM2,
RTC_HOURS_ALARM2,
RTC_DAY_ALARM2,
RTC_CONTROL,
RTC_STATUS,
RTC_CHARGER,
RTC_BEGIN_RAM};



enum e_DRV_RTC_ERROR {
DRV_RTC_NO_ERROR,
DRV_RTC_TIME_OUT_TRANSMIT};



enum e_EEP_ACCESS_STATE {
READ_EEP,
WRITE_EEP,
FREE_EEP,
ERROR_EEP};



enum e_DRV_EVENT_STATE {
DRV_EVENT_FREE,
DRV_EVENT_ERASE,
DRV_EVENT_WRITE};
#line 829
enum e_DRV_EEP_WRITE_ERROR {
DRV_EEP_NO_ERROR,
DRV_EEP_TIME_OUT_WRITE,
DRV_EEP_TIME_OUT_TRANSMIT};



enum e_STATE_OF_DRIVE_EEP {
DRV_EEP_WRITE_PENDING,
DRV_EEP_FREE};
#line 844
enum e_DRV_DISPLAY_FUNCTION {
DRV_INIT,
DRV_LOAD_TABLE,
DRV_BRITHNESSAJUST,
DRV_NEGATIVE_CAR,
DRV_DISPLAY_PAGE,
DRV_STRING,
DRV_NUMBER,
DRV_SYMBOL,
DRV_PIXEL,
DRV_LINE,
DRV_BOX,
DRV_ERASE_ZONE,
DRV_ERASE_PAGE,
DRV_BACKLIHGHTADJUST};




enum e_TYPE_SOUND {
NO_SOUND,
BIP_SHORT_SOUND,
BIP_LONG_SOUND,
BIP_VERY_LONG_SOUND,
START_BIP_SOUND,
STOP_BIP_SOUND,
BATTERY_SOUND,
VERY_SLOW_SOUND,
SLOW_SOUND,
FAST_SOUND,
USB_CONNECT,
USB_DISCONNECT,
CONTINU_SOUND};




enum e_TYPE_TEST_BUZ {
NO_BUZ,
BUZ};




enum e_TYPE_BACKLIGHT_LEVEL {
SWITCH_OFF,
WEAK,
SWITCH_ON};




enum e_NUMBER_BUZ {
BUZ_CARD,
BUZ_SEC,
BUZ_ALL,
BUZ_VOLUME};




enum e_TYPE_BLINK {
NO_LED,
BLINK_LED,
CONTINU_LED};




enum e_VALIDATION_BIP {
NO_BIP,
BIP_SHORT,
BIP_LONG,
BIP_VERY_LONG,
BIP_START_VENTIL,
BIP_STOP_VENTIL,
BURST,
BIP_USB_CONNECT,
BIP_USB_DISCONNECT,
BIP_SHORT_VALID,
BIP_BATTERY_PERIODICAL};




enum e_VALIDATION_BIP_TYPE {
NO_CLOC_BIP,
CLOC,
BIP,
BIP_AND_CLOC};



enum e_SPI_ACCESS {
SPI_EEPROM,
SPI_RTC,
SPI_POWER};



enum e_SIMV {
PIM,
VIM,
PSV,
end_of_e_SIMV};




enum e_SIMV_PS_End {
PS_FLOW_END,
PS_HIGH_PRESS_END,
PS_TIMED_END,
end_of_e_SIMV_PS_End};




enum e_Month {
Month_start,
JANUARY,
FEBRUARY,
MARSH,
APRIL,
MAY,
JUNE,
JULY,
AUGUST,
SEPTEMBER,
OCTOBER,
NOVEMBER,
DECEMBER};



enum e_DataBaseType {
DB_RTC,
DB_CURRENT,
DB_CONFIG,
DB_CONTROL,
DB_COMPUTE,
DB_POWERSUPPLY,
DB_NULL};
#line 992
enum e_OUTPUT_NAME {
OUT_LED_VENTIL,
OUT_LED_O2,
FREE_1Q3,
CE_EEP,
CE_RTC1,
CE_RTC2,
CE_INT_PRES_SENS,
CE_PROX_PRES_SENS,
CE_VALVE_PRES_SENS,
CE_SPI_USB,
CE_SPI_PIC,
CE_FLOW_INSP_SENS,
CE_FLOW_EXP_SENS,
CE_SPI_PIC_IC44,
FREE_2Q7,
FREE_2Q8};
#line 1019
enum e_SPI_POWER_TRANSMIT {
SPI_POWER_TRANSMIT_START_FRAME_MSB,
SPI_POWER_TRANSMIT_START_FRAME_LSB,
SPI_POWER_TRANSMIT_VENTIL_AUTHORIZATION,
SPI_POWER_TRANSMIT_MAINTENANCE_MODE,
SPI_POWER_TRANSMIT_CALIBRATION_MODE,
SPI_POWER_TRANSMIT_CRC,
SPI_POWER_TRANSMIT_END_FRAME,
SPI_POWER_TRANSMIT_EndOfFrame};
#line 1033
enum e_SPI_POWER_RECEIVE {
SPI_POWER_RECEIVE_MSB_START_FRAME,
SPI_POWER_RECEIVE_LSB_START_FRAME,
SPI_POWER_RECEIVE_MSB_V_BAT_U16,
SPI_POWER_RECEIVE_LSB_V_BAT_U16,
SPI_POWER_RECEIVE_MSB_TEMP_BAT_S16,
SPI_POWER_RECEIVE_LSB_TEMP_BAT_S16,
SPI_POWER_RECEIVE_MSB_BAT_CYCLES_U16,
SPI_POWER_RECEIVE_LSB_BAT_CYCLES_U16,
SPI_POWER_RECEIVE_LSB_BAT_STATE_U16,
SPI_POWER_RECEIVE_LSB_POWER_TYPE_U16,
SPI_POWER_RECEIVE_MSB_JAUGE_MINUTE_U16,
SPI_POWER_RECEIVE_LSB_JAUGE_MINUTE_U16,
SPI_POWER_RECEIVE_LSB_JAUGE_AVALAIBLE_U16,
SPI_POWER_RECEIVE_LSB_PER_CENT_BAT_U16,
SPI_POWER_RECEIVE_LSB_NO_PRESENCE_BAT_U16,
SPI_POWER_RECEIVE_LSB_BAT_KO_U16,
SPI_POWER_RECEIVE_LSB_CHARGE_KO_U16,
SPI_POWER_RECEIVE_LSB_UNKNOWN_BATTERY_U16,
SPI_POWER_RECEIVE_MSB_AMBIENT_TEMP_S16,
SPI_POWER_RECEIVE_LSB_AMBIENT_TEMP_S16,
SPI_POWER_RECEIVE_LSB_BATTERY_END_U16,
SPI_POWER_RECEIVE_LSB_BATTERY_LOW_U16,
SPI_POWER_RECEIVE_LSB_FIRST_DATE_DAY_U16,
SPI_POWER_RECEIVE_LSB_FIRST_DATE_MONTH_U16,
SPI_POWER_RECEIVE_LSB_FIRST_DATE_YEAR_U16,
SPI_POWER_RECEIVE_LSB_BAT_TEMP_OVERFLOW,
SPI_POWER_RECEIVE_LSB_SUPPLY_MEASURE_FAILURE,
SPI_POWER_RECEIVE_LSB_FAILURE_24V_FLAG,
SPI_POWER_RECEIVE_LSB_AMBIENT_TEMP_OUTOFBOUNDS,
SPI_POWER_RECEIVE_LSB_COOLING_FAN_FAILURE_FLAG,
SPI_POWER_RECEIVE_LSB_FIRST_VERSION_IDENTIFIANT,
SPI_POWER_RECEIVE_LSB_SECOND_VERSION_IDENTIFIANT,
SPI_POWER_RECEIVE_LSB_THIRD_VERSION_IDENTIFIANT,
SPI_POWER_RECEIVE_LSB_BAT_FIRST_DATE_HOUR_U16,
SPI_POWER_RECEIVE_LSB_BAT_FIRST_DATE_MINUTE_U16,
SPI_POWER_RECEIVE_LSB_BAT_FIRST_DATE_SECOND_U16,
SPI_POWER_RECEIVE_LSB_BAT_AGEING_U16,
SPI_POWER_RECEIVE_LSB_BAT_SUPPLIER_U16,
SPI_POWER_RECEIVE_LSB_BAT_TYPICAL_CAPACITY_U16,
SPI_POWER_RECEIVE_CRC,
SPI_POWER_RECEIVE_END_FRAME,
SPI_POWER_RECEIVE_EndOfTable,
SPI_POWER_RECEIVE_BufferSize = 70};
#line 1082
enum e_DRV_SPI_POWER_ERROR {
DRV_SPI_POWER_NO_ERROR,
DRV_SPI_POWER_TIME_OUT_TRANSMIT,
DRV_SPI_POWER_NO_FRAME,
DRV_SPI_POWER_BAD_FRAME};
#line 1093
enum e_MODE_COM {
COM_VOL_A,
COM_PSVT,
COM_PRES_A,
COM_VSIMV,
COM_CPAP,
COM_VOL_C,
COM_PSV,
COM_PRES_C,
COM_VOL_US,
COM_PRES_US,
COM_PSV_US,
COM_VSIMV_US,
COM_PSIMV_US,
COM_CPAP_US,
COM_PSIMV,
End_of_Table_Mode_COM};




enum e_Monit_Buffer_Data_Type {
MONITORAGE,
HORODATAGE};
#line 1122
enum e_FrameUART1 {
DATA_FRAME0,
DATA_FRAME1,
DATA_FRAME2,
SIZE_FRAME_UART1};



enum e_Flash_Read_Status {
REQUEST,
RUNNING,
ENDED};



enum e_Cycling_Mode {
I_T,
I_E};




enum e_Alarm_Tone {
ORIGINAL,
COMPLIANT};
#line 1155
enum e_DIRECT_MONITORING {
MONIT_MSB_PRESSURE,
MONIT_LSB_PRESSURE,
MONIT_MSB_CORRECTED_FLOW_INSP,
MONIT_LSB_CORRECTED_FLOW_INSP,
MONIT_MSB_CORRECTED_FLOW_EXHAL,
MONIT_LSB_CORRECTED_FLOW_EXHAL,
MONIT_CORRECTED_VT_LEAK,
MONIT_SPO2,
MONIT_HR,
MONIT_ALARM_1,
MONIT_ALARM_2,
MONIT_ALARM_3,
MONIT_ALARM_4,
MONIT_ALARM_5,
MONIT_ALARM_6,
MONIT_ALARM_7,
MONIT_ALARM_8,
MONIT_ALARM_9,
MONIT_SYMBOL,
MONIT_VENTIL_MODE,
End_Of_Table_Direct_Monitoring};
#line 1185
enum e_DETAILLED_MONITORING {
DETAILLED_DATA_TYPE,

DETAILLED_DAY,
DETAILLED_VENTIL_STATE = 1,

DETAILLED_MONTH,
DETAILLED_PATIENT_PRESSURE_MSB = 2,

DETAILLED_YEAR,
DETAILLED_PATIENT_PRESSURE_LSB = 3,

DETAILLED_HOUR,
DETAILLED_INSP_FLOW_MSB = 4,

DETAILLED_MINUTE,
DETAILLED_INSP_FLOW_LSB = 5,

DETAILLED_SECOND,
DETAILLED_EXH_FLOW_MSB = 6,

DETAILLED_RESERVED1,
DETAILLED_EXH_FLOW_LSB = 7,

DETAILLED_RESERVED2,
DETAILLED_LEAK = 8,

End_Of_Table_Detailled_Monitoring};
#line 1222
enum e_TREND {
TREND_DAY,
TREND_MONTH,
TREND_YEAR,
TREND_HOUR,
TREND_MINUTE,
TREND_SECOND,
TREND_VENTIL_MODE,
TREND_VENTIL_TYPE,
TREND_MSB_P_MAX,
TREND_LSB_P_MAX,
TREND_MSB_AV_PEP,
TREND_LSB_AV_PEP,
TREND_MSB_LEAKAGE,
TREND_LSB_LEAKAGE,
TREND_MSB_AV_VOLUME,
TREND_LSB_AV_VOLUME,
TREND_IE_RATIO_NUMERATOR,
TREND_IE_RATIO_DENOMINATOR,
TREND_FREQUENCY,
TREND_MSB_INSPIRATED_VOLUME,
TREND_LSB_INSPIRATED_VOLUME,
TREND_MSB_EXHALED_VOLUME,
TREND_LSB_EXHALED_VOLUME,
TREND_HEART_RATE,
TREND_SPO2,
End_Of_Table_Trends};
#line 1257
enum e_EVENT_PARAMETERS {

EVENT_NB_ID,
EVENT_DAY_ID,
EVENT_MON_ID,
EVENT_YEA_ID,
EVENT_HOU_ID,
EVENT_MIN_ID,
EVENT_SCD_ID,
EVENT_CPTMACHHOURMSB_ID,
EVENT_CPTMACHHOURLSB_ID,
EVENT_MODE_ID,
EVENT_TYPE_ID,
EVENT_TRIGECONV_ID,
EVENT_PUNITCONV_ID,
EVENT_CYCL_ID,
EVENT_24VMSB_ID,
EVENT_24VLSB_ID,
EVENT_5VMSB_ID,
EVENT_5VLSB_ID,
EVENT_WTDMSB_ID,
EVENT_WTDLSB_ID,
EVENT_TINTMSB_ID,
EVENT_TINTLSB_ID,
EVENT_VBATMSB_ID,
EVENT_VBATLSB_ID,
EVENT_TBATMSB_ID,
EVENT_TBATLSB_ID,
EVENT_QBATMSB_ID,
EVENT_QBATLSB_ID,
EVENT_MBATMSB_ID,
EVENT_MBATLSB_ID,
EVENT_FIO2_ID,
EVENT_SPO2_ID,
EVENT_FREQCAR_ID,
EVENT_PMAXMSB_ID,
EVENT_PMAXLSB_ID,
EVENT_PEPMSB_ID,
EVENT_PEPLSB_ID,
EVENT_RAPIT_ID,
EVENT_RAPIEMSB_ID,
EVENT_RAPIELSB_ID,
EVENT_FREQ_ID,
EVENT_VTIMSB_ID,
EVENT_VTILSB_ID,
EVENT_VTEMSB_ID,
EVENT_VTELSB_ID,
EVENT_VMMSB_ID,
EVENT_VMLSB_ID,
EVENT_LEAK_ID,
EVENT_TIMSB_ID,
EVENT_TILSB_ID,
EVENT_TEMSB_ID,
EVENT_TELSB_ID,
EVENT_SUPPLY_TYPE,
EVENT_BATLEVEL_ID,
EVENT_SETRELATIVE_PRESSURE_ID,
EVENT_SETBAROMETRIC_COMP_ID,
EVENT_SETSOUND_LEVEL_ID,
EVENT_SETPEDIATRIC_CIRCUIT_ID,
EVENT_SETDISCONNECTION_DELAY_ID,
EVENT_SETAPNEA_ALARM_ID,
EVENT_SETSPO2MIN_ID,
EVENT_SETSPO2MAX_ID,
EVENT_SETFIO2_ID,
EVENT_SETFIO2MIN_ID,
EVENT_SETFIO2MAX_ID,


EVENT_SPECPAR_1_ID,
EVENT_SPECPAR_2_ID,
EVENT_SPECPAR_3_ID,
EVENT_SPECPAR_4_ID,
EVENT_SPECPAR_5_ID,
EVENT_SPECPAR_6_ID,
EVENT_SPECPAR_7_ID,
EVENT_SPECPAR_8_ID,
EVENT_SPECPAR_9_ID,
EVENT_SPECPAR_10_ID,
EVENT_SPECPAR_11_ID,
EVENT_SPECPAR_12_ID,
EVENT_SPECPAR_13_ID,
EVENT_SPECPAR_14_ID,
EVENT_SPECPAR_15_ID,
EVENT_SPECPAR_16_ID,
EVENT_SPECPAR_17_ID,
EVENT_SPECPAR_18_ID,
EVENT_SPECPAR_19_ID,
EVENT_SPECPAR_20_ID,
EVENT_SPECPAR_21_ID,
EVENT_SPECPAR_22_ID,
EVENT_SPECPAR_23_ID,
EVENT_SPECPAR_24_ID,
EVENT_SPECPAR_25_ID,
EVENT_SPECPAR_26_ID,
EVENT_SPECPAR_27_ID,
EVENT_SPECPAR_28_ID,
EVENT_SPECPAR_29_ID,
EVENT_SPECPAR_30_ID,
EVENT_SPECPAR_31_ID,
EVENT_STATE_ID,
EVENT_Last_Event_Parameter = 96,
End_Of_Table_Events};
#line 1369
enum e_Settings {

SETTINGS_COMPATIBILITY,
SETTINGS_MODE,
SETTINGS_CYCLING_MODE_LSB,
SETTINGS_CYCLING_MODE_MSB,
SETTINGS_PRESSURE_UNIT_LSB,
SETTINGS_PRESSURE_UNIT_MSB,
SETTINGS_LOW_SPO2_LSB,
SETTINGS_LOW_SPO2_MSB,
SETTINGS_SPO2_LOW_SELECT_LSB,
SETTINGS_SPO2_LOW_SELECT_MSB,
SETTINGS_HIGH_SPO2_LSB,
SETTINGS_HIGH_SPO2_MSB,
SETTINGS_SPO2_HIGH_SELECT_LSB,
SETTINGS_SPO2_HIGH_SELECT_MSB,
SETTINGS_VOL_CONTROL_LSB,
SETTINGS_VOL_CONTROL_MSB,
SETTINGS_P_CONTROL_LSB,
SETTINGS_P_CONTROL_MSB,
SETTINGS_P_SUPPORT_LSB,
SETTINGS_P_SUPPORT_MSB,
SETTINGS_PEEP_LSB,
SETTINGS_PEEP_MSB,
SETTINGS_PEEP_NO_SELECT_LSB,
SETTINGS_PEEP_NO_SELECT_MSB,
SETTINGS_RISE_TIME_LSB,
SETTINGS_RISE_TIME_MSB,
SETTINGS_RAMP_LSB,
SETTINGS_RAMP_MSB,
SETTINGS_I_T_LSB,
SETTINGS_I_T_MSB,
SETTINGS_IE_NUMERATOR_LSB,
SETTINGS_IE_NUMERATOR_MSB,
SETTINGS_IE_DENOMINATOR_LSB,
SETTINGS_IE_DENOMINATOR_MSB,
SETTINGS_CONTROL_R_LSB,
SETTINGS_CONTROL_R_MSB,
SETTINGS_BACKUP_R_LSB,
SETTINGS_BACKUP_R_MSB,
SETTINGS_BACKUP_R_NO_SELECT_LSB,
SETTINGS_BACKUP_R_NO_SELECT_MSB,
SETTINGS_APNEA_LSB,
SETTINGS_APNEA_MSB,
SETTINGS_AUTO_APNEA_SELECT_LSB,
SETTINGS_AUTO_APNEA_SELECT_MSB,
SETTINGS_INSP_SENS_LSB,
SETTINGS_INSP_SENS_MSB,
SETTINGS_INSP_SENS_NO_SELECT_LSB,
SETTINGS_INSP_SENS_NO_SELECT_MSB,
SETTINGS_EXH_SENS_LSB,
SETTINGS_EXH_SENS_MSB,
SETTINGS_AUTO_EXH_SENS_SELECT_LSB,
SETTINGS_AUTO_EXH_SENS_SELECT_MSB,
SETTINGS_TARGET_VT_LSB,
SETTINGS_TARGET_VT_MSB,
SETTINGS_TARGET_VT_SELECT_LSB,
SETTINGS_TARGET_VT_SELECT_MSB,
SETTINGS_MAX_PRESSURE_LSB,
SETTINGS_MAX_PRESSURE_MSB,
SETTINGS_LOW_VTI_LSB,
SETTINGS_LOW_VTI_MSB,
SETTINGS_LOW_VTI_NO_SELECT_LSB,
SETTINGS_LOW_VTI_NO_SELECT_MSB,
SETTINGS_HIGH_VTI_LSB,
SETTINGS_HIGH_VTI_MSB,
SETTINGS_HIGH_VTI_NO_SELECT_LSB,
SETTINGS_HIGH_VTI_NO_SELECT_MSB,
SETTINGS_LOW_VTE_LSB,
SETTINGS_LOW_VTE_MSB,
SETTINGS_LOW_VTE_NO_SELECT_LSB,
SETTINGS_LOW_VTE_NO_SELECT_MSB,
SETTINGS_HIGH_VTE_LSB,
SETTINGS_HIGH_VTE_MSB,
SETTINGS_HIGH_VTE_NO_SELECT_LSB,
SETTINGS_HIGH_VTE_NO_SELECT_MSB,
SETTINGS_HIGH_PIP_LSB,
SETTINGS_HIGH_PIP_MSB,
SETTINGS_LOW_PIP_LSB,
SETTINGS_LOW_PIP_MSB,
SETTINGS_HIGH_R_LSB,
SETTINGS_HIGH_R_MSB,
SETTINGS_HIGH_R_NO_SELECT_LSB,
SETTINGS_HIGH_R_NO_SELECT_MSB,
SETTINGS_HIGH_LEAK_LSB,
SETTINGS_HIGH_LEAK_MSB,
SETTINGS_HIGH_LEAK_SELECT_LSB,
SETTINGS_HIGH_LEAK_SELECT_MSB,
SETTINGS_TI_MIN_LSB,
SETTINGS_TI_MIN_MSB,
SETTINGS_TI_MIN_AUTO_SELECT_LSB,
SETTINGS_TI_MIN_AUTO_SELECT_MSB,
SETTINGS_TI_MAX_LSB,
SETTINGS_TI_MAX_MSB,
SETTINGS_TI_MAX_AUTO_SELECT_LSB,
SETTINGS_TI_MAX_AUTO_SELECT_MSB,
SETTINGS_DISCONNECTION_DELAY_LSB,
SETTINGS_DISCONNECTION_DELAY_MSB,
SETTINGS_DISCONNECTION_DELAY_AUTO_LSB,
SETTINGS_DISCONNECTION_DELAY_AUTO_MSB,
SETTINGS_SIGH_SELECT_LSB,
SETTINGS_SIGH_SELECT_MSB,
SETTINGS_SIGH_VT_COEF_LSB,
SETTINGS_SIGH_VT_COEF_MSB,
SETTINGS_SIGH_CPT_LSB,
SETTINGS_SIGH_CPT_MSB,
SETTINGS_APNEA_ALARM_ACTIVATION_LSB,
SETTINGS_APNEA_ALARM_ACTIVATION_MSB,
SETTINGS_PEDIATRIC_CIRCUIT_LSB,
SETTINGS_PEDIATRIC_CIRCUIT_MSB,
SETTINGS_PRESSURE_SUPPORT_RELATIVE_LSB,
SETTINGS_PRESSURE_SUPPORT_RELATIVE_MSB,
End_Of_Table_Settings};
#line 1492
enum e_USB_SerialNumberAndDate_Frame {

USB_SETTING_SERIAL_NUMBER_1,
USB_SETTING_SERIAL_NUMBER_2,
USB_SETTING_SERIAL_NUMBER_3,
USB_SETTING_SERIAL_NUMBER_4,
USB_SETTING_SERIAL_NUMBER_5,
USB_SETTING_SERIAL_NUMBER_6,
USB_SETTING_SERIAL_NUMBER_7,
USB_SETTING_SERIAL_NUMBER_8,
USB_SETTING_SERIAL_NUMBER_9,
USB_SETTING_SERIAL_NUMBER_10,
USB_SETTING_SERIAL_NUMBER_11,
USB_SETTING_SERIAL_NUMBER_12,

USB_SETTING_DATE_YEAR,
USB_SETTING_DATE_MONTH,
USB_SETTING_DATE_DAY,
USB_SETTING_DATE_HOUR,
USB_SETTING_DATE_MINUTE,
USB_SETTING_DATE_SECOND,
End_of_e_usb_frame_serialNumberAndDate};




enum e_USB_SerialNumber_Frame {

USB_SERIAL_NUMBER_1,
USB_SERIAL_NUMBER_2,
USB_SERIAL_NUMBER_3,
USB_SERIAL_NUMBER_4,
USB_SERIAL_NUMBER_5,
USB_SERIAL_NUMBER_6,
USB_SERIAL_NUMBER_7,
USB_SERIAL_NUMBER_8,
USB_SERIAL_NUMBER_9,
USB_SERIAL_NUMBER_10,
USB_SERIAL_NUMBER_11,
USB_SERIAL_NUMBER_12,
End_of_e_usb_frame_serialNumber};
#line 1538
enum e_USB_Settings_Frame {

USB_SETTINGS_DATA,
USB_SETTINGS_MSB_CRC_FRAME,
USB_SETTINGS_LSB_CRC_FRAME,
End_of_e_usb_frame_setting};




enum e_USB_Transfer_Apply {
Usb_FirstStep,
Usb_ReadCurrentDirectoryNext,
Usb_OpenFile,
Usb_CreateFile,
Usb_ReadFile,
Usb_WriteSerialNumberAndDateAtIndex,
Usb_WriteSerialNumberAndDateAtEndOfFile,
Usb_WriteSerialNumberAtEndOfFile,
Usb_WriteFileAtIndex,
Usb_WriteAtTheEndOfFile,
Usb_UpadateDateAndTime,
Usb_WriteCRC,
Usb_CloseFile,
End_of_e_usb_transfer_apply};
#line 1569
enum e_USB_File_Settings {
FileSettingNext,
FileSettingNotFound,
FileSettingFound,
end_of_e_usb_file_setting};
#line 1579
enum e_USB_File_Type {
SettingsType,
ContinuousRecordingType,
MonitoringTransferType,
TrendsTransferType,
EventsTransferType,
end_of_e_usb_file_type};




enum e_USB_Continuous_Frame {
USB_ID_FRAME,

USB_DATA,
USB_End_Of_Continuous_Frame};




enum e_NAND_FLASH_STATE {
NAND_FREE,
NAND_ERASE,
NAND_MONIT_WRITE,
NAND_MONIT_READ,
NAND_TREND_WRITE,
NAND_TREND_READ};
#line 63 "..\\..\\SRC\\GENERAL\\typedef.h"
typedef unsigned char UBYTE;
#line 30 "..\\..\\SRC\\HMI\\HMI_Message2.cpp"
extern const UBYTE *const huge cMSG_CircuitCheck[19];
extern const UBYTE *const huge cMSG_LeakTestInstr1[19];
extern const UBYTE *const huge cMSG_LeakTestInstr2[19];
extern const UBYTE *const huge cMSG_LeakTestInstr3[19];
extern const UBYTE *const huge cMSG_TestStatus[19];
extern const UBYTE *const huge cMSG_TestStates[5][19];




extern const UBYTE *const huge cMSG_CircuitLeak[19];
extern const UBYTE *const huge cMSG_LanguageCode[19];


extern const UBYTE *const huge cMSG_MenuMaintenance[19];
extern const UBYTE *const huge cMSG_SoftwareVersion[19];
extern const UBYTE *const huge cMSG_SupplySoftwareVersion[19];
extern const UBYTE *const huge cMSG_ShortSerial[19];
extern const UBYTE *const huge cMSG_HistoAnom[19];
extern const UBYTE *const huge cMSG_VoltCtrl[19];
extern const UBYTE *const huge cMSG_SensorCal[19];
extern const UBYTE *const huge cMSG_PatientPressure[19];
extern const UBYTE *const huge cMSG_ValvePressure[19];
extern const UBYTE *const huge cMSG_FlowIns[19];
extern const UBYTE *const huge cMSG_FlowExp[19];
extern const UBYTE *const huge cMSG_CalibFiO2[19];
extern const UBYTE *const huge cMSG_O2Pressure[19];
extern const UBYTE *const huge cMSG_FlowO2[19];
extern const UBYTE *const huge cMSG_PwmBlower[19];
extern const UBYTE *const huge cMSG_Back[19];


extern const UBYTE *const huge cMSG_MenuVoltControl[19];
extern const UBYTE *const huge cMSG_SupplyTest[19];
extern const UBYTE *const huge cMSG_WatchdogTest[19];
extern const UBYTE *const huge cMSG_AbsPress[19];
extern const UBYTE *const huge cMSG_Temperature[19];
extern const UBYTE *const huge cMSG_BlowerTemperature[19];
extern const UBYTE *const huge cMSG_Buzzer[19];
extern const UBYTE *const huge cMSG_BuzzerSec[19];
extern const UBYTE *const huge cMSG_BatteryMenu[19];
extern const UBYTE *const huge cMSG_BaroCorrect[19];


extern const UBYTE *const huge cMSG_InternalBatteryMenu[19];
extern const UBYTE *const huge cMSG_BatSupplier[19];
extern const UBYTE *const huge cMSG_BatTheoreticalCapacity[19];
extern const UBYTE *const huge cMSG_FirstUseDate[19];
extern const UBYTE *const huge cMSG_BatAgeing[19];
extern const UBYTE *const huge cMSG_CyclesDone[19];
extern const UBYTE *const huge cMSG_BatteryVoltage[19];
extern const UBYTE *const huge cMSG_BatteryTemperature[19];
extern const UBYTE *const huge cMSG_BatSupplierUnknown[19];
extern const UBYTE *const huge cMSG_BatSupplier3[19];
extern const UBYTE *const huge cMSG_NoBat[19];


extern const UBYTE *const huge cMSG_MenuHistoAno[19];
extern const UBYTE *const huge cMSG_Cpt[19];


extern const UBYTE *const huge cMSG_Welcome[19];
extern const UBYTE *const huge cMSG_Machine[19];
extern const UBYTE *const huge cMSG_PatWelcome[19];
extern const UBYTE *const huge cMSG_VSoft[19];
extern const UBYTE *const huge cMSG_CopyrightWelcome[19];
extern const UBYTE *const huge cMSG_CompanyWelcome[19];


extern const UBYTE *const huge cMSG_Mode[6][19];
#line 105
extern const UBYTE *const huge cMSG_Mode2[6][19];
#line 111
extern const UBYTE *const huge cMSG_Mode3[6][19];
#line 117
extern const UBYTE *const huge cMSG_InspTrigger[7][19];
#line 124
extern const UBYTE *const huge cMSG_EnableMode[19];
extern const UBYTE *const huge cMSG_DisableMode[19];
extern const UBYTE *const huge cMSG_AutoMode[19];
extern const UBYTE *const huge cMSG_PressureSlope[19];
extern const UBYTE *const huge cMSG_Rampe[19];
extern const UBYTE *const huge cMSG_ExhalationPressure[19];
extern const UBYTE *const huge cMSG_CpapPressure[19];
extern const UBYTE *const huge cMSG_InsuflationPressureControl[19];
extern const UBYTE *const huge cMSG_InsuflationPressureControl2[19];
extern const UBYTE *const huge cMSG_InsuflationPressureSupport[19];
extern const UBYTE *const huge cMSG_CurrantVolume[19];
extern const UBYTE *const huge cMSG_InspirationTrigger[19];
extern const UBYTE *const huge cMSG_ExhalationTrigger[19];
extern const UBYTE *const huge cMSG_ControlRate[19];
extern const UBYTE *const huge cMSG_BackupRate[19];
extern const UBYTE *const huge cMSG_Apnee[19];
extern const UBYTE *const huge cMSG_TiControl[19];
extern const UBYTE *const huge cMSG_IERation[19];
extern const UBYTE *const huge cMSG_ITRation[19];
extern const UBYTE *const huge cMSG_TiMon[19];
extern const UBYTE *const huge cMSG_TeMon[19];
extern const UBYTE *const huge cMSG_Pulse[19];
extern const UBYTE *const huge cMSG_Soupir[19];
extern const UBYTE *const huge cMSG_VtSoupir[19];
extern const UBYTE *const huge cMSG_CptSoupir[19];
extern const UBYTE *const huge cMSG_FiO2[19];
extern const UBYTE *const huge cMSG_VTCible[19];
extern const UBYTE *const huge cMSG_PiMax[19];
extern const UBYTE *const huge cMSG_VaciRate[19];
extern const UBYTE *const huge cMSG_InsuflationPressurePeakMon[19];
extern const UBYTE *const huge cMSG_Vti[19];
extern const UBYTE *const huge cMSG_Vte[19];
extern const UBYTE *const huge cMSG_Vm[19];
extern const UBYTE *const huge cMSG_RateMon[19];
extern const UBYTE *const huge cMSG_IERationMon[19];
extern const UBYTE *const huge cMSG_ITRationMon[19];
extern const UBYTE *const huge cMSG_FuiteMon[19];
extern const UBYTE *const huge cMSG_FiO2Mon[19];
extern const UBYTE *const huge cMSG_SpO2[19];
extern const UBYTE *const huge cMSG_StartVentil[19];
extern const UBYTE *const huge cMSG_StopVentil[19];

extern const UBYTE *const huge cMSG_StopConfirmVentil[19];
extern const UBYTE *const huge cMSG_VPreferences[19];
extern const UBYTE *const huge cMSG_IsensHelperTxt[19];


extern const UBYTE *const huge cMSG_MiniTab[19];
extern const UBYTE *const huge cMSG_PatientTab[19];
extern const UBYTE *const huge cMSG_MaxiTab[19];
extern const UBYTE *const huge cMSG_PiMbar[19];
extern const UBYTE *const huge cMSG_VteMl[19];
extern const UBYTE *const huge cMSG_VmLpm[19];
extern const UBYTE *const huge cMSG_FrCMin[19];
extern const UBYTE *const huge cMSG_TiS[19];
extern const UBYTE *const huge cMSG_VtiMl[19];
extern const UBYTE *const huge cMSG_FiO2Pc[19];
extern const UBYTE *const huge cMSG_ExhalationPressureMon[19];
extern const UBYTE *const huge cMSG_SpO2Pc[19];
extern const UBYTE *const huge cMSG_FuiteParam[19];
extern const UBYTE *const huge cMSG_MeanAirwayPressureMon[19];
extern const UBYTE *const huge cMSG_HistoAlarm[19];
extern const UBYTE *const huge cMSG_switchMode[19];
extern const UBYTE *const huge cMSG_CalibQExpTab[19];
extern const UBYTE *const huge cMSG_CalibQExpProcessing[19];
extern const UBYTE *const huge cMSG_CalibFiO2Tab[19];
extern const UBYTE *const huge cMSG_CalibFiO2Processing[19];


extern const UBYTE *const huge cMSG_SettingBlock[19];
extern const UBYTE *const huge cMSG_BlockedSetting[25][19];
#line 221
extern const UBYTE *const huge cMSG_Vmi[19];
extern const UBYTE *const huge cMSG_OutOfLimit[19];


extern const UBYTE *const huge cMSG_PressureUnit[3][19];


extern const UBYTE *const huge cMSG_VolumeUnit[19];
extern const UBYTE *const huge cMSG_VolumeLiterUnit[19];
extern const UBYTE *const huge cMSG_PerCentUnit[19];
extern const UBYTE *const huge cMSG_FlowUnit[19];
extern const UBYTE *const huge cMSG_StandardFlowUnit[19];
extern const UBYTE *const huge cMSG_FrequencyUnit[19];
extern const UBYTE *const huge cMSG_SpeedUnit[19];
extern const UBYTE *const huge cMSG_TensionUnit[19];
extern const UBYTE *const huge cMSG_PowerUnit[19];
extern const UBYTE *const huge cMSG_TempUnit[19];
extern const UBYTE *const huge cMSG_AbsPressUnit[19];
extern const UBYTE *const huge cMSG_PressBarUnit[19];
extern const UBYTE *const huge cMSG_HourUnit[19];
extern const UBYTE *const huge cMSG_MinuteUnit[19];
extern const UBYTE *const huge cMSG_SecondUnit[19];
extern const UBYTE *const huge cMSG_eventUnit[19];
extern const UBYTE *const huge cMSG_DayUnit[19];
extern const UBYTE *const huge cMSG_MonthUnit[19];
extern const UBYTE *const huge cMSG_HoursByDayUnit[19];


extern const UBYTE *const huge cMSG_Stop[19];
extern const UBYTE *const huge cMSG_Wait[19];
extern const UBYTE *const huge cMSG_ShortWait[19];
extern const UBYTE *const huge cMSG_No[19];
extern const UBYTE *const huge cMSG_Off[19];
extern const UBYTE *const huge cMSG_Yes[19];
extern const UBYTE *const huge cMSG_On[19];
extern const UBYTE *const huge cMSG_NoneUnit[19];
extern const UBYTE *const huge cMSG_Slash[19];
extern const UBYTE *const huge cMSG_Colon[19];
extern const UBYTE *const huge cMSG_Sup[19];
extern const UBYTE *const huge cMSG_MoreOrLess[19];
extern const UBYTE *const huge cMSG_Auto[19];
extern const UBYTE *const huge cMSG_IEHeader[19];
extern const UBYTE *const huge cMSG_Pediatric[19];
extern const UBYTE *const huge cMSG_Am[19];
extern const UBYTE *const huge cMSG_Pm[19];
extern const UBYTE *const huge cMSG_Original[19];
extern const UBYTE *const huge cMSG_Compliant[19];


extern const UBYTE *const huge cMSG_MenuGraphConfig[19];
extern const UBYTE *const huge cMSG_Visualisation[19];
extern const UBYTE *const huge cMSG_PressionMax[19];
extern const UBYTE *const huge cMSG_DebitMax[19];
extern const UBYTE *const huge cMSG_VtMax[19];
extern const UBYTE *const huge cMSG_TempsMax[19];
extern const UBYTE *const huge cMSG_Representation[19];
extern const UBYTE *const huge cMSG_CurveVisualisation1[19];
extern const UBYTE *const huge cMSG_CurveVisualisation2[19];
extern const UBYTE *const huge cMSG_CurveRepresentation1[19];
extern const UBYTE *const huge cMSG_CurveRepresentation2[19];


extern const UBYTE *const huge cMSG_ReportTitle[19];
extern const UBYTE *const huge cMSG_VentTimeReport[19];
extern const UBYTE *const huge cMSG_ReportDay[19];
extern const UBYTE *const huge cMSG_ReportTableTitle[19];
extern const UBYTE *const huge cMSG_VtiReport[19];
extern const UBYTE *const huge cMSG_VteReport[19];
extern const UBYTE *const huge cMSG_VmReport[19];
extern const UBYTE *const huge cMSG_Spo2Report[19];
extern const UBYTE *const huge cMSG_IAReport[19];
extern const UBYTE *const huge cMSG_SpontReport[19];
extern const UBYTE *const huge cMSG_FrReport[19];
extern const UBYTE *const huge cMSG_LeakReport[19];
extern const UBYTE *const huge cMSG_PipReport[19];
extern const UBYTE *const huge cMSG_TapneaReport[19];
extern const UBYTE *const huge cMSG_ContrReport[19];


extern const UBYTE *const huge cMSG_TitleUSB[19];
extern const UBYTE *const huge cMSG_EraseKey[19];
extern const UBYTE *const huge cMSG_TransferOnUSB[19];
extern const UBYTE *const huge cMSG_TransferToVentil[19];
extern const UBYTE *const huge cMSG_TransferToKey[19];
extern const UBYTE *const huge cMSG_ContRecordUSB[19];
extern const UBYTE *const huge cMSG_TransferMonitUSB[19];
extern const UBYTE *const huge cMSG_TransferTrendUSB[19];
extern const UBYTE *const huge cMSG_TransferEventsUSB[19];


extern const UBYTE *const huge cMSG_UsbErrDisconnect[19];
extern const UBYTE *const huge cMSG_UsbErrFullKey[19];
extern const UBYTE *const huge cMSG_UsbErrTooManyKeys[19];
extern const UBYTE *const huge cMSG_UsbErrTransfer[19];
extern const UBYTE *const huge cMSG_UsbErrErase[19];
extern const UBYTE *const huge cMSG_UsbErrFile[19];
extern const UBYTE *const huge cMSG_UsbErrPortability[19];
extern const UBYTE *const huge cMSG_SettingsOverWrite[19];
extern const UBYTE *const huge cMSG_VentilCompatible[19];
extern const UBYTE *const huge cMSG_NotEnoughKeySpace[19];
extern const UBYTE *const huge cMSG_UsbErrTransfProcessing[19];
extern const UBYTE *const huge cMSG_UsbErrEraseProcessing[19];
#line 30
const UBYTE *const huge cMSG_CircuitCheck[19] = {((const UBYTE *)"CIRCUIT CHECK"),((const UBYTE *)"CIRKEL CHECK"),((const UBYTE *)"PR\334FUNG SCHLAUCHSYSTEM"),((const UBYTE *)"CIRCUIT CHECK"),((const UBYTE *)"CIRCUIT CHECK"),((const UBYTE *)"CONTROL DEL CIRCUITO"),((const UBYTE *)"TEST DU CIRCUIT"),
#line 30
((const UBYTE *)"\276\302\276\254\316\305\311 \312\305\313 \301\313\301\302\'\303\273\312\305\311"),((const UBYTE *)"CONTROLLO CIRCUITO"),((const UBYTE *)"CIRCUIT CHECK"),((const UBYTE *)"CIRCUIT CHECK"),((const UBYTE *)"CIRCUIT CHECK"),((const UBYTE *)"SIRKEL SJEKK"),((const UBYTE *)"TEST Obwodu"),
#line 30
((const UBYTE *)"VERIFIQUE O CIRCUITO"),((const UBYTE *)"\216\217\215\201\204\217@\177 @\215\214\221\222\217\177"),((const UBYTE *)"LETKUSTON TARKASTUS"),((const UBYTE *)"Patient cirkel kontroll"),((const UBYTE *)"Devreyi Kontrol Ediniz ")};
const UBYTE *const huge cMSG_LeakTestInstr1[19] = {((const UBYTE *)"Ensure patient is disconnected."),((const UBYTE *)"OBS! Patient skal frakobles."),((const UBYTE *)"Sicherstellen, dass kein Patient angeschlossen ist."),((const UBYTE *)"Ensure patient is disconnected."),((const UBYTE *)"Ensure patient is disconnected."
#line 31
),((const UBYTE *)"Asegurar desconexion del paciente."),((const UBYTE *)"S\'assurer que le patient est d\322branch\322."),((const UBYTE *)"\311\371\364\377\030\024\366\030\027\366\361\027\366 \035\027\371 \377 \362\026\370\366\375\360\025 \366\361\375\362\371 \362\023" "\377\026\030\375\365\366\365\366\374\357\375\377\025."
#line 31
),((const UBYTE *)"Assicurarsi che il paziente sia disconnesso."),((const UBYTE *)"\351\002\212\356\001\202\221\210\177\211\177\200\222\337\006\203\210\201\207\202\177"),((const UBYTE *)"Ensure patient is disconnected."),((const UBYTE *)"Zorg voor ontkoppeling patient."),((const UBYTE *)"Sikre at pasienten er frakoblet."
#line 31
),((const UBYTE *)"Upewnij si\030, \036e pacjent jest od\033\023czony."),((const UBYTE *)"Assegure-se da desconexao do paciente."),((const UBYTE *)"\222\244\250\247\253\266\250\264\300, \273\266\306 \262\243\271\253\250\240\266 \306\266\255\256\302\273\250\240"),((const UBYTE *)"Varmista ett\332 potilas on irroitettu."
#line 31
),((const UBYTE *)"F\313rs\332kra dig om att patienten \332r fr\331nkopplad."),((const UBYTE *)"Hastay\b Ventilat\313rden Ay\brd\b\f\bn\bzdan Emin Olunuz.")};
const UBYTE *const huge cMSG_LeakTestInstr2[19] = {((const UBYTE *)"Block circuit at patient connection."),((const UBYTE *)"Bloker cirkel ved patienttilkobling."),((const UBYTE *)"Schlauchsystem am Patientenanschluss verschlie\335en."),((const UBYTE *)"Block circuit at patient connection."),((const 
#line 32
UBYTE *)"Block circuit at patient connection."),((const UBYTE *)"Bloquear conexion del circuito a paciente."),((const UBYTE *)"Obstruer circuit en attente de connexion patient."),((const UBYTE *)"\303\023\373\377\372\356\024\366\027\366 \027\377 \372\036\372\373\034\374\362 \026\027\367\375 \026\036\375\365\366\026\367 \374"
#line 32
 "\366 \027\377\375 \362\026\370\366\375\360."),((const UBYTE *)"Bloccare il circuito alla connessione del paziente."),((const UBYTE *)"\351\002\356\001\b\222BLOCK\203\210\201\207\202\177"),((const UBYTE *)"Block circuit at the patient connection."),((const UBYTE *)"Sluit circuit af ter hoogte van pati\317nt."
#line 32
),((const UBYTE *)"Blokker slangesirkel ved pasientkobling."),((const UBYTE *)"Zablokuj przy\033\023cze pacjenta."),((const UBYTE *)"Bloquear a saida do circuito para o paciente."),((const UBYTE *)"\206\243\244\256\306\255\253\263\267\254\266\250 \266\263\306\254\240\253\255 \262\243\271\253\250\240\266\243"
#line 32
),((const UBYTE *)"Irroita potilas letkustosta."),((const UBYTE *)"Blockera slangen vid patienten."),((const UBYTE *)"Hasta taraf\bndaki devre ucunu kapat\bn\bz.")};
const UBYTE *const huge cMSG_LeakTestInstr3[19] = {((const UBYTE *)"Press \"enter\" key to start test."),((const UBYTE *)"Tryk ENTER for at starte test."),((const UBYTE *)"Mit ENTER-Taste Test starten."),((const UBYTE *)"Press ENTER key to start test."),((const UBYTE *)"Press ENTER key to start test."
#line 33
),((const UBYTE *)"Pulsar ENTER para iniciar test."),((const UBYTE *)"Appuyez sur la touche ENTER pour lancer le test."),((const UBYTE *)"\306\371\357\026\027\366 \027\377 \023\373\360\372\027\024\377 ENTER \364\371\362 \375\362 \376\366\372\371\375\360\026\366\371 " "\367 \366\376\357\027\362\026\367."
#line 33
),((const UBYTE *)"Premere il tasto ENTER per iniziare il test."),((const UBYTE *)"\244\247\304\254\204\220\212\214ENTER\234\304\222\354\203\210\201\207\202\177"),((const UBYTE *)"Press ENTER key to start test."),((const UBYTE *)"Druk op ENTER om test te starten."),((const UBYTE *)"Trykk ENTER for \331 starte test."
#line 33
),((const UBYTE *)"Naci\025nij ENTER aby rozpocz\023\034 test."),((const UBYTE *)"Pressione ENTER para iniciar teste."),((const UBYTE *)"\214\243\251\257\253\266\250 \201\245\306\247 \247\256\303 \240\243\273\243\256\243 \266\250\264\266\243"),((const UBYTE *)"Paina ENTER aloittaaksesi testauksen.")
#line 33
,((const UBYTE *)"Tryck ENTER tangent f\313r att starta test."),((const UBYTE *)"Teste ba\016lamak i\325in \"ENTER\" tu\016una bas\bn\bz.")};
const UBYTE *const huge cMSG_TestStatus[19] = {((const UBYTE *)"test status"),((const UBYTE *)"Test Status"),((const UBYTE *)"Test Status"),((const UBYTE *)"Test Status"),((const UBYTE *)"Test Status"),((const UBYTE *)"Resultado del test"),((const UBYTE *)"Resultat du test"),((const UBYTE *)"\301\362\027\356\026\027\362\026\367 \276\376\357\027\362\026\367\025"
#line 34
),((const UBYTE *)"Stato del Test"),((const UBYTE *)"Test Status"),((const UBYTE *)"Test Status"),((const UBYTE *)"Test Status"),((const UBYTE *)"Test Status"),((const UBYTE *)"Status testu"),((const UBYTE *)"Resultado do teste"),((const UBYTE *)"\220\266\243\266\267\264 \266\250\264\266\243"),((
#line 34
const UBYTE *)"Testin vaihe"),((const UBYTE *)"Test status"),((const UBYTE *)"Test Durumu")};
const UBYTE *const huge cMSG_TestStates[5][19] = {{((const UBYTE *)"NOT RUN"),((const UBYTE *)"IKKE K\330RT"),((const UBYTE *)"L#uft nicht"),((const UBYTE *)"NOT RUN"),((const UBYTE *)"NOT RUN"),((const UBYTE *)"NO INICIADO"),((const UBYTE *)"EN ATTENTE"),((const UBYTE *)"\275\276\304 \302\276\250\312\305\313\307\254\276\250"
#line 35
),((const UBYTE *)"NON in ESECUZIONE"),((const UBYTE *)"NOT RUN"),((const UBYTE *)"NOT RUN"),((const UBYTE *)"NIET LOPEND"),((const UBYTE *)"KJ\330RER IKKE"),((const UBYTE *)"NIE WYKONANY"),((const UBYTE *)"NAO INICIOU"),((const UBYTE *)"\214\204 \214\177\226\177\221"),((const UBYTE *)"EI K<YNNISS<"
#line 35
),((const UBYTE *)"EJ IG>NG"),((const UBYTE *)"=al\b\327m\byor")},{((const UBYTE *)"RUNNING"),((const UBYTE *)"K\330RER"),((const UBYTE *)"L#uft"),((const UBYTE *)"RUNNING"),((const UBYTE *)"RUNNING"),((const UBYTE *)"EN MARCHA"),((const UBYTE *)"EN COURS"),((const UBYTE *)"\302\276\250\312\305\313\307\254\276\250"
#line 35
),((const UBYTE *)"IN ESECUZIONE"),((const UBYTE *)"RUNNING"),((const UBYTE *)"RUNNING"),((const UBYTE *)"LOPEND"),((const UBYTE *)"KJ\330RER"),((const UBYTE *)"W TRAKCIE"),((const UBYTE *)"EM ANDAMENTO"),((const UBYTE *)"\201 \216\217\215\225\204\220\220\204"),((const UBYTE *)"K<YNNISS<"),((const 
#line 35
UBYTE *)"IG>NG"),((const UBYTE *)"=al\b\327\byor")},{((const UBYTE *)"NOT RUN"),((const UBYTE *)"IKKE K\330RT"),((const UBYTE *)"L#uft nicht"),((const UBYTE *)"NOT RUN"),((const UBYTE *)"NOT RUN"),((const UBYTE *)"NO INICIADO"),((const UBYTE *)"EN ATTENTE"),((const UBYTE *)"\275\276\304 \302\276\250\312\305\313\307\254\276\250"
#line 35
),((const UBYTE *)"NON in ESECUZIONE"),((const UBYTE *)"NOT RUN"),((const UBYTE *)"NOT RUN"),((const UBYTE *)"NIET LOPEND"),((const UBYTE *)"KJ\330RER IKKE"),((const UBYTE *)"NIE WYKONANY"),((const UBYTE *)"NAO INICIOU"),((const UBYTE *)"\214\204 \214\177\226\177\221"),((const UBYTE *)"EI K<YNNISS<"
#line 35
),((const UBYTE *)"EJ IG>NG"),((const UBYTE *)"=al\b\327m\byor")},{((const UBYTE *)"PASS"),((const UBYTE *)"GENNEMF\330RT"),((const UBYTE *)"BESTANDEN"),((const UBYTE *)"PASS"),((const UBYTE *)"PASS"),((const UBYTE *)"APROBADO"),((const UBYTE *)"RESUSSI "),((const UBYTE *)"\306\276\312\313\316\276")
#line 35
,((const UBYTE *)"TEST SUPERATO"),((const UBYTE *)"PASS"),((const UBYTE *)"PASS"),((const UBYTE *)"GESLAAGD"),((const UBYTE *)"PASSERER"),((const UBYTE *)"OK."),((const UBYTE *)"PASSOU"),((const UBYTE *)"\216\217\215\210;\204\214"),((const UBYTE *)"L<P<ISTY"),((const UBYTE *)"GODK<ND"),((const UBYTE
#line 35
 *)"Testi Ge\337ti")},{((const UBYTE *)"FAIL"),((const UBYTE *)"FEJL I TEST"),((const UBYTE *)"NICHT BESTANDEN"),((const UBYTE *)"FAIL"),((const UBYTE *)"FAIL"),((const UBYTE *)"FALLADO"),((const UBYTE *)"ECHEC"),((const UBYTE *)"\273\306\276\312\313\316\276"),((const UBYTE *)"TEST FALLITO"),((const
#line 35
 UBYTE *)"FAIL"),((const UBYTE *)"FAIL"),((const UBYTE *)"MISLUKT"),((const UBYTE *)"FEILET"),((const UBYTE *)"B\?\022D"),((const UBYTE *)"FALHOU"),((const UBYTE *)"\220\200\215\210"),((const UBYTE *)"EP<ONNISTUNUT"),((const UBYTE *)"EJ GODK<ND"),((const UBYTE *)"Testi Ge\337emedi")}};




const UBYTE *const huge cMSG_CircuitLeak[19] = {((const UBYTE *)"leak test"),((const UBYTE *)"L\327kage Test"),((const UBYTE *)"Leckagetest"),((const UBYTE *)"Leak Test"),((const UBYTE *)"Leak Test"),((const UBYTE *)"Test de fuga"),((const UBYTE *)"Test de fuite"),((const UBYTE *)"\323\373\366\364\022\377\025 \365\371\362\024\024\377\360\025 "
#line 40
),((const UBYTE *)"Leak Test"),((const UBYTE *)"Leak Test"),((const UBYTE *)"Leak Test"),((const UBYTE *)"Test op lekken"),((const UBYTE *)"Lekkasjetest"),((const UBYTE *)"Test szczelno\025ci"),((const UBYTE *)"Teste de fugas"),((const UBYTE *)"\262\263\306\245\250\263\255\243 \267\266\250\273\255\253 \246\243\252\243 \253\252 \255\306\240\266\267\263\243"
#line 40
),((const UBYTE *)"Vuototesti"),((const UBYTE *)"L\332ck test"),((const UBYTE *)"Ka\325ak Testi")};
const UBYTE *const huge cMSG_LanguageCode[19] = {((const UBYTE *)"ZHO"),((const UBYTE *)"DAN"),((const UBYTE *)"DEU"),((const UBYTE *)"ENG"),((const UBYTE *)"USA"),((const UBYTE *)"SPA"),((const UBYTE *)"FRA"),((const UBYTE *)"GRK"),((const UBYTE *)"ITA"),((const UBYTE *)"JPN"),((const UBYTE *)"KOR"
#line 41
),((const UBYTE *)"NLD"),((const UBYTE *)"NOR"),((const UBYTE *)"POL"),((const UBYTE *)"POR"),((const UBYTE *)"RUS"),((const UBYTE *)"FIN"),((const UBYTE *)"SWE"),((const UBYTE *)"TUR")};


const UBYTE *const huge cMSG_MenuMaintenance[19] = {((const UBYTE *)"MAINTENANCE"),((const UBYTE *)"VEDLIGEHOLDELSE"),((const UBYTE *)"WARTUNG"),((const UBYTE *)"MAINTENANCE"),((const UBYTE *)" MAINTENANCE"),((const UBYTE *)"MANTENIMIENTO"),((const UBYTE *)"MAINTENANCE"),((const UBYTE *)"\311\313\304\312\277\307\277\311\277"
#line 44
),((const UBYTE *)"MANUTENZIONE"),((const UBYTE *)"MAINTENANCE"),((const UBYTE *)"MAINTENANCE"),((const UBYTE *)"ONDERHOUD"),((const UBYTE *)"SERVICE"),((const UBYTE *)"PRZEGL\022D TECHNICZNY"),((const UBYTE *)"MANUTEN=AO"),((const UBYTE *)"\221\204\224 \215\200\220]\222\205\207\201\177\214\207\204"
#line 44
),((const UBYTE *)"HUOLTO"),((const UBYTE *)"SERVICE"),((const UBYTE *)"BAKIM")};
const UBYTE *const huge cMSG_SoftwareVersion[19] = {((const UBYTE *)"\346\257\301\242"),((const UBYTE *)"Soft CPU"),((const UBYTE *)"Soft. Vers."),((const UBYTE *)"Version"),((const UBYTE *)"Ver"),((const UBYTE *)"Version"),((const UBYTE *)"Soft CPU"),((const UBYTE *)"\276\372\365. \302\377\364."),(
#line 45
(const UBYTE *)"Versione"),((const UBYTE *)"Version"),((const UBYTE *)"Version"),((const UBYTE *)"Soft CPU"),((const UBYTE *)"Versjon"),((const UBYTE *)"Opr. CPU"),((const UBYTE *)"Ver\325ao"),((const UBYTE *)"\201\250\263\264\253\303"),((const UBYTE *)"Soft CPU"),((const UBYTE *)"Soft CPU"),((const
#line 45
 UBYTE *)"Soft CPU")};
const UBYTE *const huge cMSG_SupplySoftwareVersion[19] = {((const UBYTE *)"\306\276"),((const UBYTE *)"Soft Alim"),((const UBYTE *)"PW. Vers."),((const UBYTE *)"Pw Supply"),((const UBYTE *)"Alim"),((const UBYTE *)"Alimentac"),((const UBYTE *)"Soft Alim"),((const UBYTE *)"\312\024\377\031."),((const 
#line 46
UBYTE *)"Alimentaz"),((const UBYTE *)"Pw Supply"),((const UBYTE *)"Pw Supply"),((const UBYTE *)"Soft voeding"),((const UBYTE *)"Pw supply"),((const UBYTE *)"Opr. ZASIL"),((const UBYTE *)"Alimentac"),((const UBYTE *)"\216\256\243\266\243 \262\253\266\243\240\253\303"),((const UBYTE *)"Soft POWER"),((
#line 46
const UBYTE *)"Soft Alim"),((const UBYTE *)"Soft Alim")};
const UBYTE *const huge cMSG_ShortSerial[19] = {((const UBYTE *)"s/n"),((const UBYTE *)"S/N"),((const UBYTE *)"S/Nr."),((const UBYTE *)"S/N"),((const UBYTE *)"S/N"),((const UBYTE *)"S/N"),((const UBYTE *)"S/N"),((const UBYTE *)"S/N"),((const UBYTE *)"S/N"),((const UBYTE *)"S/N"),((const UBYTE *)"S/N"
#line 47
),((const UBYTE *)"S/N"),((const UBYTE *)"S/N"),((const UBYTE *)"S/N"),((const UBYTE *)"S/N"),((const UBYTE *)"S/N"),((const UBYTE *)"S/N"),((const UBYTE *)"S/N"),((const UBYTE *)"Sno")};
const UBYTE *const huge cMSG_HistoAnom[19] = {((const UBYTE *)"\230\372\250\244"),((const UBYTE *)"Fejlbeskeder"),((const UBYTE *)"Techn. Meldungen Hist."),((const UBYTE *)"Faults Check"),((const UBYTE *)"Faults Check"),((const UBYTE *)"Verificar Fallos"),((const UBYTE *)"Historique Anomalies"),((
#line 48
const UBYTE *)"\323\373\366\364\022\377\025 \311\031\362\373\374\356\027\034\375"),((const UBYTE *)"Memoria Guasti"),((const UBYTE *)"\307\003\250\230\251\235"),((const UBYTE *)"Faults Check"),((const UBYTE *)"Afwijkingen historiek"),((const UBYTE *)"Feils\312king"),((const UBYTE *)"Rejestr b\033\030d\314w"
#line 48
),((const UBYTE *)"Verificar Falhas"),((const UBYTE *)"\216\263\306\245\250\263\255\243 \306\274\253\244\306\255"),((const UBYTE *)"Vika tarkastus"),((const UBYTE *)"Felkontroll"),((const UBYTE *)"Hata kontrol\304")};
const UBYTE *const huge cMSG_VoltCtrl[19] = {((const UBYTE *)"\272\360\250\244"),((const UBYTE *)"Spaendings kontrol"),((const UBYTE *)"Werte pr\304fen"),((const UBYTE *)"Measurement Check"),((const UBYTE *)"Measurement Check"),((const UBYTE *)"Control de medidas"),((const UBYTE *)"Controle des Mesures"
#line 49
),((const UBYTE *)"\323\373\366\364\022\377\025 \303\366\027\024\360\026\366\034\375"),((const UBYTE *)"Verifiche Tensione"),((const UBYTE *)"\311\341\316\250\230\251\235"),((const UBYTE *)"Measurement Check"),((const UBYTE *)"Spanning controle"),((const UBYTE *)"M\331lingssjekk"),((const UBYTE *)"Rejestr pomiar\314w"
#line 49
),((const UBYTE *)"Controlo de medidas"),((const UBYTE *)"\216\263\306\245\250\263\255\243 \253\252\257\250\263\250\240\253\254"),((const UBYTE *)"Mittaustarkastus"),((const UBYTE *)"M\331ttkontroll"),((const UBYTE *)"\326l\325\304m Kontrol\304")};
const UBYTE *const huge cMSG_SensorCal[19] = {((const UBYTE *)"q\213\022\005\245"),((const UBYTE *)"Sensor kalibrering"),((const UBYTE *)"Sensorkalibrierung"),((const UBYTE *)"Sensors Calibration"),((const UBYTE *)"Sensors Calibration"),((const UBYTE *)"Calibracion sensores"),((const UBYTE *)"Calibrage des Capteurs"
#line 50
),((const UBYTE *)"\274\362\370\374\377\375\035\374\367\026\367 \273\371\026\370\367\027\360\024\034\375"),((const UBYTE *)"Calibrazione Sensori"),((const UBYTE *)"\246\303\240Cal"),((const UBYTE *)"Sensors Calibration"),((const UBYTE *)"Sensorenkalibratie"),((const UBYTE *)"Sensor kalibrering"),((
#line 50
const UBYTE *)"Kalibracja sensor\314w"),((const UBYTE *)"Calibra\325ao sensores"),((const UBYTE *)"@\243\256\253\244\263\306\245\255\243 \247\243\266\273\253\255\306\245"),((const UBYTE *)"Sensoreiden kalibrointi"),((const UBYTE *)"Sensorkalibrering"),((const UBYTE *)"Sens\313r Kalibrasyonu")};
const UBYTE *const huge cMSG_PatientPressure[19] = {((const UBYTE *)"\307\035\210`"),((const UBYTE *)"Patient tryk"),((const UBYTE *)"Patientendruckkal."),((const UBYTE *)"Patient Pressure"),((const UBYTE *)"Patient Pressure"),((const UBYTE *)"Presion Paciente"),((const UBYTE *)"Pression Patient"),(
#line 51
(const UBYTE *)"\306\361\366\026\367 \273\026\370\366\375\377\036\025"),((const UBYTE *)"Calibr Press Paz"),((const UBYTE *)"CIRCUIT\334"),((const UBYTE *)"Patient Pressure"),((const UBYTE *)"Patientdruk"),((const UBYTE *)"Pasienttrykk"),((const UBYTE *)"Ci\025nienie pacjenta"),((const UBYTE *)"Pressao Paciente"
#line 51
),((const UBYTE *)";\243\245\256. \245 \247\277\270 \262\267\266\303\270"),((const UBYTE *)"Potilaspaine"),((const UBYTE *)"Patienttryck"),((const UBYTE *)"Hasta Bas\bnc\b")};
const UBYTE *const huge cMSG_ValvePressure[19] = {((const UBYTE *)"\021\016\243\210`"),((const UBYTE *)"Ventil tryk"),((const UBYTE *)"Ventildruckkal."),((const UBYTE *)"Int Valve pressure"),((const UBYTE *)"Int Valve pressure"),((const UBYTE *)"Presion Valvula"),((const UBYTE *)"Pression Valve"),((
#line 52
const UBYTE *)"\306\361\366\026\367 \274\362\373\363\361\365\362\025"),((const UBYTE *)"Calibr Press Valv"),((const UBYTE *)"Int Valve pressure"),((const UBYTE *)"Int Valve pressure"),((const UBYTE *)"Interne klepdruk"),((const UBYTE *)"Ventiltrykk"),((const UBYTE *)"Ci\025n. wewn\030trzne"),((const
#line 52
 UBYTE *)"Pressao Valvula"),((const UBYTE *)";\243\245\256 \245\240\267\266\263 \255\256\243\262\243\240\243"),((const UBYTE *)"Venttiilipaine"),((const UBYTE *)"Int ventil tryck"),((const UBYTE *)"\017nt Valf Bas\bnc\b")};
const UBYTE *const huge cMSG_FlowIns[19] = {((const UBYTE *)"\016\263\271\360"),((const UBYTE *)"Insp flow"),((const UBYTE *)"Inspirationsflowkal."),((const UBYTE *)"Inspiration Flow"),((const UBYTE *)"Inspiration Flow"),((const UBYTE *)"Flujo INSP"),((const UBYTE *)"D\322bit Inspir\322"),((const 
#line 53
UBYTE *)"\276\371\026\023\375\366\030\026\027\371\372\360 \307\377\360"),((const UBYTE *)"Flusso Insp"),((const UBYTE *)"\331\256Flow"),((const UBYTE *)"Inspiration Flow"),((const UBYTE *)"Inspiratieflow"),((const UBYTE *)"Inspirasjonsflow"),((const UBYTE *)"Przep\033yw wdechowy"),((const UBYTE *)"Fluxo INSP"
#line 53
),((const UBYTE *)"\216\306\266\306\255 \245\247\306\270\243"),((const UBYTE *)"Sis\332\332nhengitysvirtaus"),((const UBYTE *)"Insp fl\313de"),((const UBYTE *)"\017nspirasyon ak\b\016\b")};
const UBYTE *const huge cMSG_FlowExp[19] = {((const UBYTE *)"\021\263\271\360"),((const UBYTE *)"Eksp flow"),((const UBYTE *)"Exspirationsflowkal."),((const UBYTE *)"Exhalation Flow"),((const UBYTE *)"Exhalation Flow"),((const UBYTE *)"Flujo ESP"),((const UBYTE *)"D\322bit Expir\322"),((const UBYTE 
#line 54
*)"\276\372\023\375\366\030\026\027\371\372\360 \307\377\360"),((const UBYTE *)"Flusso Esp"),((const UBYTE *)"\332\256Flow"),((const UBYTE *)"Exhalation Flow"),((const UBYTE *)"Expiratieflow"),((const UBYTE *)"Ekspirasjonsflow"),((const UBYTE *)"Przep\033yw wydechowy"),((const UBYTE *)"Fluxo EXP"),(
#line 54
(const UBYTE *)"\216\306\266\306\255 \245\277\247\306\270\243"),((const UBYTE *)"Uloshengitysvirtaus"),((const UBYTE *)"Exp fl\313de"),((const UBYTE *)"Ekspirasyon ak\b\016\b")};
const UBYTE *const huge cMSG_CalibFiO2[19] = {((const UBYTE *)"Fio2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2 Kalibrierung"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),(
#line 55
(const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"Sensor FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2")};
const UBYTE *const huge cMSG_O2Pressure[19] = {((const UBYTE *)"\264\263\210`"),((const UBYTE *)"O2 tryk"),((const UBYTE *)"O2 Druckkal."),((const UBYTE *)"O2 Pressure"),((const UBYTE *)"O2 Pressure"),((const UBYTE *)"Presion O2"),((const UBYTE *)"Pression O2"),((const UBYTE *)"\306\361\366\026\367 \305\376\030\364\035\375\377\030"
#line 56
),((const UBYTE *)"Pressione O2"),((const UBYTE *)"\t\375\334"),((const UBYTE *)"O2 Pressure"),((const UBYTE *)"O2 druk"),((const UBYTE *)"O2 trykk"),((const UBYTE *)"Ci\025nienie tlenu O2"),((const UBYTE *)"Pressao O2"),((const UBYTE *)";\243\245\256\250\240\253\250 \2152"),((const UBYTE *)"O2 paine"
#line 56
),((const UBYTE *)"O2 tryck"),((const UBYTE *)"O2 Bas\bnc\b")};
const UBYTE *const huge cMSG_FlowO2[19] = {((const UBYTE *)"\264\263\271\360"),((const UBYTE *)"O2 flow"),((const UBYTE *)"O2 Flowkal."),((const UBYTE *)"O2 Flow"),((const UBYTE *)"O2 Flow"),((const UBYTE *)"Flujo O2"),((const UBYTE *)"D\322bit O2"),((const UBYTE *)"\307\377\360 \3052"),((const 
#line 57
UBYTE *)"Flusso O2"),((const UBYTE *)"O2 Flow"),((const UBYTE *)"O2 Flow"),((const UBYTE *)"O2 flow"),((const UBYTE *)"O2 flow"),((const UBYTE *)"Przep\033yw tlenu O2"),((const UBYTE *)"Fluxo O2"),((const UBYTE *)"\216\306\266\306\255 \2152"),((const UBYTE *)"O2 virtaus"),((const UBYTE *)"O2 fl\313de"
#line 57
),((const UBYTE *)"O2 Ak\b\016\b")};
const UBYTE *const huge cMSG_PwmBlower[19] = {((const UBYTE *)"turbine speed"),((const UBYTE *)"Turbinehastighed"),((const UBYTE *)"Drehzahl Turbine"),((const UBYTE *)"Turbine Speed"),((const UBYTE *)"Turbine Speed"),((const UBYTE *)"Velocidad Turbina"),((const UBYTE *)"Vitesse Turbine"),((const 
#line 58
UBYTE *)"\311\027\024\377\031\357\025 \312\377\030\024\374\023\361\375\362\025"),((const UBYTE *)"Velocit\333 Turbina"),((const UBYTE *)"Turbine Speed"),((const UBYTE *)"Turbine Speed"),((const UBYTE *)"Turbinesnelheid"),((const UBYTE *)"Turbinhastighet"),((const UBYTE *)"Pr\030dko\025\034 turbiny")
#line 58
,((const UBYTE *)"Velocidade Turbina"),((const UBYTE *)"\220\255\306\263\306\264\266\300 \266\267\263\244\253\240\277"),((const UBYTE *)"Turbiinin nopeus"),((const UBYTE *)"Turbinhastighet"),((const UBYTE *)"T\304rbin H\bz\b")};
const UBYTE *const huge cMSG_Back[19] = {((const UBYTE *)"\351\023"),((const UBYTE *)"Tilbage"),((const UBYTE *)"Zur\304ck"),((const UBYTE *)"Back"),((const UBYTE *)"Back"),((const UBYTE *)"Volver"),((const UBYTE *)"Retour"),((const UBYTE *)"\306\361\026\034"),((const UBYTE *)"Indietro"),((const 
#line 59
UBYTE *)"\352\220"),((const UBYTE *)"Back"),((const UBYTE *)"Terug"),((const UBYTE *)"Tilbake"),((const UBYTE *)"Powr\314t"),((const UBYTE *)"Virar"),((const UBYTE *)"\214\243\252\243\247"),((const UBYTE *)"Takaisin"),((const UBYTE *)"Tillbaka"),((const UBYTE *)"Geri D\313n")};


const UBYTE *const huge cMSG_MenuVoltControl[19] = {((const UBYTE *)"MEASUREMENTS CHECK"),((const UBYTE *)"SPAENDINGS KONTROL"),((const UBYTE *)"WERTE PR\334FEN"),((const UBYTE *)"MEASUREMENTS CHECK"),((const UBYTE *)"MEASUREMENTS CHECK"),((const UBYTE *)"CONTROL DE MEDIDAS"),((const UBYTE *)"CONTROLE DES MESURES"
#line 62
),((const UBYTE *)"\276\302\276\254\316\305\311 \303\276\312\307\277\311\276\'\304"),((const UBYTE *)"VERIFICHE TENSIONE"),((const UBYTE *)"MEASUREMENTS CHECK"),((const UBYTE *)"MEASUREMENTS CHECK"),((const UBYTE *)"SPANNING CONTROLE"),((const UBYTE *)"SPENNINGSKONTROLL"),((const UBYTE *)"POMIARY KONTROLNE"
#line 62
),((const UBYTE *)"CONTROLO DE MEDIDAS"),((const UBYTE *)"\216\217\215\201\204\217@\177 \207\206\213\204\217\204\214\207\210"),((const UBYTE *)"MITTAUSTEN TARKASTUS"),((const UBYTE *)"SP<NNINGSKONTROLL"),((const UBYTE *)"\326L=\334M KONTROL\334")};
const UBYTE *const huge cMSG_SupplyTest[19] = {((const UBYTE *)"24V\306\210\250\244"),((const UBYTE *)"24V Tjek"),((const UBYTE *)"24V Check"),((const UBYTE *)"24V Check"),((const UBYTE *)"24V Check"),((const UBYTE *)"Verif Alim 24V"),((const UBYTE *)"Alim 24V"),((const UBYTE *)"\323\373\366\364\022\377\025 \312\356\026\367\025 24V"
#line 63
),((const UBYTE *)"24V Check"),((const UBYTE *)"24V \250\230\251\235"),((const UBYTE *)"24V Check"),((const UBYTE *)"24V Controle"),((const UBYTE *)"24V sjekk"),((const UBYTE *)"Sprawdzenie 24V"),((const UBYTE *)"Verif. Alim 24V"),((const UBYTE *)"\221\250\264\266 24V"),((const UBYTE *)"24V tarkastus"
#line 63
),((const UBYTE *)"24V kontroll"),((const UBYTE *)"24V Kontrol\304")};
const UBYTE *const huge cMSG_WatchdogTest[19] = {((const UBYTE *)"\310\022"),((const UBYTE *)"Vagthund"),((const UBYTE *)"Watchdog"),((const UBYTE *)"Watchdog"),((const UBYTE *)"Watchdog"),((const UBYTE *)"Watchdog"),((const UBYTE *)"Watchdog"),((const UBYTE *)"Watchdog"),((const UBYTE *)"Watchdog")
#line 64
,((const UBYTE *)"Watchdog"),((const UBYTE *)"Watchdog"),((const UBYTE *)"Waakhond"),((const UBYTE *)"Vakthund"),((const UBYTE *)"System nadzoru"),((const UBYTE *)"Watchdog"),((const UBYTE *)"@\306\240\266\263\306\256\256\250\263"),((const UBYTE *)"H\332lytysrajan arvo"),((const UBYTE *)"Vakthund"),
#line 64
((const UBYTE *)"Watchdog")};
const UBYTE *const huge cMSG_AbsPress[19] = {((const UBYTE *)"\f\263\210"),((const UBYTE *)"Barometer"),((const UBYTE *)"Barometrischer Druck"),((const UBYTE *)"Barometric"),((const UBYTE *)"Barometric"),((const UBYTE *)"Presion Atm"),((const UBYTE *)"Pression barom\322trique"),((const UBYTE *)"\274\362\024\377\374\366\027\024\371\372\035"
#line 65
),((const UBYTE *)"Pressione Barometrica"),((const UBYTE *)"\256\334"),((const UBYTE *)"Barometric"),((const UBYTE *)"Barometrisch"),((const UBYTE *)"Barometer"),((const UBYTE *)"Ci\025nienie atmosferyczne"),((const UBYTE *)"Pressao Atm."),((const UBYTE *)"\200\243\263\306\257\250\266\263\253\273\250\264\255\253\254"
#line 65
),((const UBYTE *)"Barometrinen"),((const UBYTE *)"Barometer"),((const UBYTE *)"Barometrik ")};
const UBYTE *const huge cMSG_Temperature[19] = {((const UBYTE *)"[\357\275\177"),((const UBYTE *)"Intern temperatur"),((const UBYTE *)"Interne Temperatur"),((const UBYTE *)"Internal Temperature"),((const UBYTE *)"Internal Temperature"),((const UBYTE *)"Temp Interna"),((const UBYTE *)"Temp Interne"),
#line 66
((const UBYTE *)"\276\026\034\027\366\024\371\372\360 \335\366\024\374\377\372\024\362\026\361\362"),((const UBYTE *)"Temp Interna"),((const UBYTE *)"VENT^]"),((const UBYTE *)"Internal Temperature"),((const UBYTE *)"Interne temperatuur"),((const UBYTE *)"Intern temperatur"),((const UBYTE *)"Temperatura wewn\030trzna"
#line 66
),((const UBYTE *)"Temp Interna"),((const UBYTE *)"\201\240\267\266\263\250\240\240\303\303 \266\250\257\262\250\263\243\266\267\263\243"),((const UBYTE *)"Sis\332inen l\332mp\313"),((const UBYTE *)"Intern temperatur"),((const UBYTE *)"\017\325 S\bcakl\bk")};
const UBYTE *const huge cMSG_BlowerTemperature[19] = {((const UBYTE *)"\375\243\275\177"),((const UBYTE *)"Bl\327ser temperatur"),((const UBYTE *)"Blower Temperatur"),((const UBYTE *)"Blower Temperature"),((const UBYTE *)"Blower Temperature"),((const UBYTE *)"Temp Turbina"),((const UBYTE *)"Temp Turbine"
#line 67
),((const UBYTE *)"\335\366\024\374\377\372\024\362\026\361\362 \312\377\030\024\374\023\361\375\362\025"),((const UBYTE *)"Temperatura Blower"),((const UBYTE *)"Blower^]"),((const UBYTE *)"Blower Temperature"),((const UBYTE *)"Turbine Temperatuur"),((const UBYTE *)"Blower Temperature"),((const 
#line 67
UBYTE *)"Temperatura turbiny"),((const UBYTE *)"Temperatura Turbina"),((const UBYTE *)"\221\250\257\262\250\263\243\266\267\263\243 \266\267\263\244\253\240\277"),((const UBYTE *)"Puhaltimen l\332mp\313tila"),((const UBYTE *)"Turbin temperatur"),((const UBYTE *)"T\304rbin Is\bs\b")};
const UBYTE *const huge cMSG_Buzzer[19] = {((const UBYTE *)"\333\377\022"),((const UBYTE *)"Alarm"),((const UBYTE *)"Alarm"),((const UBYTE *)"Buzzer"),((const UBYTE *)"Buzzer"),((const UBYTE *)"Zumbador"),((const UBYTE *)"Buzzer"),((const UBYTE *)"\274\377\374\363\367\027\360\025"),((const UBYTE *)"Buzzer"
#line 68
),((const UBYTE *)"Backup\264\241\304"),((const UBYTE *)"Buzzer"),((const UBYTE *)"Zoemer"),((const UBYTE *)"Buzzer"),((const UBYTE *)"Brz\030czyk"),((const UBYTE *)"Zumbidor"),((const UBYTE *)"\214\243\262\263\303\251\250\240\253\250 \244\243\266 \266\263\250\245\306\246\253"),((const UBYTE *)"H\332lytys 1"
#line 68
),((const UBYTE *)"Larm 1"),((const UBYTE *)"Alarm ")};
const UBYTE *const huge cMSG_BuzzerSec[19] = {((const UBYTE *)"\v\305\333\377\022"),((const UBYTE *)"Back up Alarm "),((const UBYTE *)"Back-up Alarm"),((const UBYTE *)"Back-up Buzzer "),((const UBYTE *)"Back-up Buzzer "),((const UBYTE *)"Zumbador Sec"),((const UBYTE *)"Buzzer Sec"),((const UBYTE *)"\276\031\366\365\024\371\372\035\025 \274\377\374\363\367\027\360\025"
#line 69
),((const UBYTE *)"Buzzer di back-up"),((const UBYTE *)"\036\251\235\224\251\265\264\241\304"),((const UBYTE *)"Back-up Buzzer "),((const UBYTE *)"Back-up zoemer"),((const UBYTE *)"Back-up buzzer"),((const UBYTE *)"Brz\030czyk zapasowy"),((const UBYTE *)"Zumbador Sec"),((const UBYTE *)"\216\263\306\245\250\263\255\243 \252\245\267\255\243 \266\263\250\245\306\246\253"
#line 69
),((const UBYTE *)"H\332lytys 2"),((const UBYTE *)"Larm 2"),((const UBYTE *)"Back UP alarm")};
const UBYTE *const huge cMSG_BatteryMenu[19] = {((const UBYTE *)"[\330\306\265"),((const UBYTE *)"Intern Batteri Menu"),((const UBYTE *)"Men\304 interne Batterie"),((const UBYTE *)"Internal Battery Menu"),((const UBYTE *)"Internal Battery Menu"),((const UBYTE *)"Menu Bateria Interna"),((const UBYTE 
#line 70
*)"Menu Batterie"),((const UBYTE *)"\303\366\375\377\036 \276\026\034\027. \303\023\362\027\362\024\361\362\025"),((const UBYTE *)"Men\311 Batteria Interna"),((const UBYTE *)"Internal Battery Menu"),((const UBYTE *)"Internal Battery Menu"),((const UBYTE *)"Menu interne batterij"),((const UBYTE *)"Intern batterimeny"
#line 70
),((const UBYTE *)"Wewn\030trzna Bateria"),((const UBYTE *)"Menu Bateria Interna"),((const UBYTE *)"\213\250\240\302 \245\240\267\266\263\250\240\240\250\254 \244\243\266\243\263\250\253"),((const UBYTE *)"Akkuvalikko"),((const UBYTE *)"Internbatteri meny"),((const UBYTE *)"Dahili Batarya Men\304")}
#line 70
;
const UBYTE *const huge cMSG_BaroCorrect[19] = {((const UBYTE *)"altitude comp"),((const UBYTE *)"H\312jde kompensation"),((const UBYTE *)"H\313henkompensation"),((const UBYTE *)"Altitude Comp"),((const UBYTE *)"Altitude Comp."),((const UBYTE *)"Compensacion Altitud"),((const UBYTE *)"Compensation d\'altitude"
#line 71
),((const UBYTE *)"\313\033\377\374\366\027\024\371\372\360 \275\371\035\024\370\034\026\367"),((const UBYTE *)"Compensaz Altitudine"),((const UBYTE *)"Altitude Comp"),((const UBYTE *)"Altitude Comp"),((const UBYTE *)"Hoogte compensatie"),((const UBYTE *)"H\312ydekompensasjon"),((const UBYTE *)"Komp Wysoko\025ci n.p.m"
#line 71
),((const UBYTE *)"Compensa\325ao Altitude"),((const UBYTE *)"@\306\257\262\250\240\264\243\271\253\303 \243\266\257. \247\243\245\256"),((const UBYTE *)"Ilmanpaineen korjaus"),((const UBYTE *)"H\313jdkompensation"),((const UBYTE *)"Y\304kseklik Komp")};


const UBYTE *const huge cMSG_InternalBatteryMenu[19] = {((const UBYTE *)"INTERNAL BATTERY"),((const UBYTE *)"INTERNT BATTERI"),((const UBYTE *)"INTERNE BATTERIE"),((const UBYTE *)"INTERNAL BATTERY"),((const UBYTE *)"INTERNAL BATTERY"),((const UBYTE *)"BATERIA INTERNA"),((const UBYTE *)"BATTERIE INTERNE"
#line 74
),((const UBYTE *)"\276\311\'\312\276\307\250\301\277 \303\306\273\312\273\307\250\273"),((const UBYTE *)"BATTERIA INTERNA"),((const UBYTE *)"INTERNAL BATTERY"),((const UBYTE *)"INTERNAL BATTERY"),((const UBYTE *)"INTERNE BATTERIJ"),((const UBYTE *)"INTERNT BATTERI"),((const UBYTE *)"WEWN\027TRZNA BATERIA"
#line 74
),((const UBYTE *)"BATERIA INTERNA"),((const UBYTE *)"\201\214\222\221\217\204\214\214\242\242 \200\177\221\177\217\204\242"),((const UBYTE *)"AKKU"),((const UBYTE *)"INTERNT BATTERI"),((const UBYTE *)"DAH\017L\017 BATARYA")};
const UBYTE *const huge cMSG_BatSupplier[19] = {((const UBYTE *)"\306\276"),((const UBYTE *)"Batteriforsyning"),((const UBYTE *)"Batterietyp"),((const UBYTE *)"Supplier"),((const UBYTE *)"Supplier"),((const UBYTE *)"Proovedor"),((const UBYTE *)"Fournisseur"),((const UBYTE *)"\306\024\377\374\367\370\366\030\027\360\025"
#line 75
),((const UBYTE *)"Tipo Batteria"),((const UBYTE *)"Supplier"),((const UBYTE *)"Supplier"),((const UBYTE *)"Leverancier"),((const UBYTE *)"Leverand\312r"),((const UBYTE *)"Dostawca"),((const UBYTE *)"Provedor"),((const UBYTE *)"\216\306\264\266\243\245\275\253\255"),((const UBYTE *)"L\332hde"),((
#line 75
const UBYTE *)"Supplier"),((const UBYTE *)"Supplier")};
const UBYTE *const huge cMSG_BatTheoreticalCapacity[19] = {((const UBYTE *)"\237\f\006\360"),((const UBYTE *)"Teoretisk kapacitet"),((const UBYTE *)"Theoretische Kapazit\332t"),((const UBYTE *)"Theoretical capacity"),((const UBYTE *)"Theoretical capacity"),((const UBYTE *)"Capacidad teorica"),((
#line 76
const UBYTE *)"Capacit\322 th\322orique"),((const UBYTE *)"\305\375\377\374\362\026\027\371\372\360 \353\034\024\367\027\371\372\035\027\367\027\362"),((const UBYTE *)"Capacit\333 Teorica"),((const UBYTE *)"Theoretical capacity"),((const UBYTE *)"Theoretical capacity"),((const UBYTE *)"Theor. Capaciteit"
#line 76
),((const UBYTE *)"Teoretisk kapasitet"),((const UBYTE *)"Pojemno\025\034 katalog"),((const UBYTE *)"Capacidade te\314rica"),((const UBYTE *)"\204\257\255\306\264\266\300 \244\243\266\243\263\250\253"),((const UBYTE *)"Teoreettinen suorituskyky"),((const UBYTE *)"Teoretisk kapacitet"),((const UBYTE 
#line 76
*)"Teorik kapasite")};
const UBYTE *const huge cMSG_FirstUseDate[19] = {((const UBYTE *)"\252Z\305"),((const UBYTE *)"Ibrugtagningsdato"),((const UBYTE *)"Erste Verwendung"),((const UBYTE *)"First Use Date"),((const UBYTE *)"First Use Date"),((const UBYTE *)"Fecha primer uso"),((const UBYTE *)"Premi\324re utilisation"),((
#line 77
const UBYTE *)"\353\024\360\026\367 \362\023\035"),((const UBYTE *)"Data 1\260 Utilizzo"),((const UBYTE *)"\315\325_[\363"),((const UBYTE *)"First Use Date"),((const UBYTE *)"Datum 1e gebruik"),((const UBYTE *)"Oppstartsdato"),((const UBYTE *)"Data instalacji"),((const UBYTE *)"Data primeiro uso"),(
#line 77
(const UBYTE *)";\243\266\243 1-\246\306 \245\255\256\302\273\250\240\253\303"),((const UBYTE *)"Ensik\332ytt\313 pvm"),((const UBYTE *)"Anv\332ndningsstart"),((const UBYTE *)"Ba\016lang\b\325 Tarihi")};
const UBYTE *const huge cMSG_BatAgeing[19] = {((const UBYTE *)"\006\360"),((const UBYTE *)"Kapacitet"),((const UBYTE *)"Kapazit\332t"),((const UBYTE *)"Capacity"),((const UBYTE *)"Capacity"),((const UBYTE *)"Capacidad"),((const UBYTE *)"Capacit\322"),((const UBYTE *)"\353\034\024\367\027\371\372\035\027\367\027\362"
#line 78
),((const UBYTE *)"Capacit\333"),((const UBYTE *)"Capacity"),((const UBYTE *)"Capacity"),((const UBYTE *)"Capaciteit"),((const UBYTE *)"Kapasitet "),((const UBYTE *)"Pojemno\025\034 pomiar"),((const UBYTE *)"Capacidade"),((const UBYTE *)"\223\243\255\266\253\273. \250\257\255\306\264\266\300"),((
#line 78
const UBYTE *)"Suorituskyky"),((const UBYTE *)"Kapacitet"),((const UBYTE *)"Kapasite")};
const UBYTE *const huge cMSG_CyclesDone[19] = {((const UBYTE *)"\227\306\004"),((const UBYTE *)"Rest Kapacitet "),((const UBYTE *)"Entladezyklen"),((const UBYTE *)"Cycles done"),((const UBYTE *)"Cycles done"),((const UBYTE *)"Ciclos realizados"),((const UBYTE *)"Cycles effectu\322s"),((const UBYTE *
#line 79
)"\301\036\372\373\377\371"),((const UBYTE *)"Capacit\333 Res Batt"),((const UBYTE *)"\360\020\240\226\235\300"),((const UBYTE *)"Cycles done"),((const UBYTE *)"aantal ontladingen"),((const UBYTE *)"Antall ladinger"),((const UBYTE *)"Wykonane \033adowania"),((const UBYTE *)"Capacidade restante"),((
#line 79
const UBYTE *)"@-\245\306 \271\253\255\256\306\245 \252\243\263\303\247\255\253"),((const UBYTE *)"Akkua j\332ljell\332"),((const UBYTE *)"Kapacitet kvar"),((const UBYTE *)"Dolum Say\bs\b")};
const UBYTE *const huge cMSG_BatteryVoltage[19] = {((const UBYTE *)"\306\265\306\210"),((const UBYTE *)"Batteri sp\327nding"),((const UBYTE *)"Batteriespannung"),((const UBYTE *)"Battery Voltage"),((const UBYTE *)"Battery Voltage"),((const UBYTE *)"Tension Bateria"),((const UBYTE *)"Tension Batterie"
#line 80
),((const UBYTE *)"\312\356\026\367 \303\023\362\027\362\024\361\362\025"),((const UBYTE *)"Tensione Batteria"),((const UBYTE *)"Battery Voltage"),((const UBYTE *)"Battery Voltage"),((const UBYTE *)"Batterij voltage"),((const UBYTE *)"Batteri volt"),((const UBYTE *)"Napi\030cie Baterii"),((const 
#line 80
UBYTE *)"Tensao Bateria"),((const UBYTE *)"\201\306\256\300\266\243\251 \244\243\266\243\263\250\253"),((const UBYTE *)"Akun j\332nnite"),((const UBYTE *)"Batteri volt"),((const UBYTE *)"Batarya Voltaj\b")};
const UBYTE *const huge cMSG_BatteryTemperature[19] = {((const UBYTE *)"\306\265\275\177"),((const UBYTE *)"Batteri Temperatur"),((const UBYTE *)"Batterietemperatur"),((const UBYTE *)"Battery Temperature"),((const UBYTE *)"Battery Temperature"),((const UBYTE *)"Temp Bateria"),((const UBYTE *)"Temp Batterie"
#line 81
),((const UBYTE *)"\335\366\024\374\377\372\024\362\026\361\362 \303\023\362\027\362\024\361\362\025"),((const UBYTE *)"Temp Batteria"),((const UBYTE *)"Battery Temperature"),((const UBYTE *)"Battery Temperature"),((const UBYTE *)"Batterij temperatuur"),((const UBYTE *)"Batteritemperatur"),((const 
#line 81
UBYTE *)"Temperatura Baterii"),((const UBYTE *)"Temp Bateria"),((const UBYTE *)"\221\250\257\262\250\263. \244\243\266\243\263\250\253"),((const UBYTE *)"Akun l\332mp\313"),((const UBYTE *)"Batteritemperatur"),((const UBYTE *)"Batarya Is\bs\b")};
const UBYTE *const huge cMSG_BatSupplierUnknown[19] = {((const UBYTE *)"UNKNOWN"),((const UBYTE *)"UKENDT BATTERI"),((const UBYTE *)"UNBEKANNTE BATT"),((const UBYTE *)"UNKNOWN"),((const UBYTE *)"UNKNOWN"),((const UBYTE *)"BAT DESCONOCIDA"),((const UBYTE *)"INCONNU"),((const UBYTE *)"\273\254\304\'\311\312\277 \303\306\273\312\273\307\250\273"
#line 82
),((const UBYTE *)"BATT SCONOSC"),((const UBYTE *)"UNKNOWN"),((const UBYTE *)"UNKNOWN"),((const UBYTE *)"ONGEKENDE BAT."),((const UBYTE *)"UKJENT BATTERI"),((const UBYTE *)"NIEZNANY"),((const UBYTE *)"BAT DESCONHECID"),((const UBYTE *)"\214\204\207\206\201 \200\177\221\177\217\204\242"),((const 
#line 82
UBYTE *)"TUNTEMATON"),((const UBYTE *)"OK<NT BATTERI"),((const UBYTE *)"TANIMSIZ PIL")};
const UBYTE *const huge cMSG_BatSupplier3[19] = {((const UBYTE *)"APPROVED"),((const UBYTE *)"GODKENDT"),((const UBYTE *)"GOEDGEKEURD"),((const UBYTE *)"APPROVED"),((const UBYTE *)"APPROVED"),((const UBYTE *)"APROBADO"),((const UBYTE *)"APPROUV\311"),((const UBYTE *)"APPROVED"),((const UBYTE *)"APPROVATO"
#line 83
),((const UBYTE *)"APPROVED"),((const UBYTE *)"APPROVED"),((const UBYTE *)"GODKJENT"),((const UBYTE *)"ZATWIERDZONY"),((const UBYTE *)"APROVADO"),((const UBYTE *)"APPROVED"),((const UBYTE *)"APPROVED"),((const UBYTE *)"APPROVED"),((const UBYTE *)"APPROVED"),((const UBYTE *)"ONAYLANDI")};
const UBYTE *const huge cMSG_NoBat[19] = {((const UBYTE *)"\306\265"),((const UBYTE *)"Intet batteri fundet"),((const UBYTE *)"Keine Batterie"),((const UBYTE *)"No Battery detected"),((const UBYTE *)"No Battery detected"),((const UBYTE *)"Bateria no detectada"),((const UBYTE *)"Batterie absente"),((
#line 84
const UBYTE *)"\273\023\377\030\026\361\362 \303\023\362\027\362\024\361\362\025"),((const UBYTE *)"Batteria Non Rilevata"),((const UBYTE *)"No Battery detected"),((const UBYTE *)"No Battery detected"),((const UBYTE *)"Geen Batterij Aanwezig"),((const UBYTE *)"Mangler batteri"),((const UBYTE *)"Brak Baterii"
#line 84
),((const UBYTE *)"Bateria nao detectada"),((const UBYTE *)"\214\250\266 \244\243\266\243\263\250\253"),((const UBYTE *)"Ei akkua tunnistettu"),((const UBYTE *)"inget batteri p\331tr\332ffat"),((const UBYTE *)"BATARYA YOK")};


const UBYTE *const huge cMSG_MenuHistoAno[19] = {((const UBYTE *)"\354\377"),((const UBYTE *)"FEJLBESKEDER"),((const UBYTE *)"FEHLERSPEICHER"),((const UBYTE *)"FAULTS"),((const UBYTE *)"FAULTS"),((const UBYTE *)"FALLOS"),((const UBYTE *)"HISTORIQUE ANOMALIES"),((const UBYTE *)"\311\314\273\302\303\273\312\273"
#line 87
),((const UBYTE *)"GUASTI"),((const UBYTE *)"FAULTS"),((const UBYTE *)"FAULTS"),((const UBYTE *)"FOUTEN"),((const UBYTE *)"FEILMELDINGER"),((const UBYTE *)"REJESTR B\?\027D\323W"),((const UBYTE *)"FALHAS"),((const UBYTE *)"\215\227\207\200@\207"),((const UBYTE *)"VIRHEILMOITUKSET"),((const UBYTE *)"FELMEDDELANDEN"
#line 87
),((const UBYTE *)"HATALAR")};
const UBYTE *const huge cMSG_Cpt[19] = {((const UBYTE *)"\337\234\022"),((const UBYTE *)"Timer"),((const UBYTE *)"Stundenz\332hler"),((const UBYTE *)"Hour Meter"),((const UBYTE *)"Hour Meter"),((const UBYTE *)"Conta Hr"),((const UBYTE *)"Compteur"),((const UBYTE *)"\355\024\377\374\366\027\024."),((
#line 88
const UBYTE *)"Conta Ore"),((const UBYTE *)"\373\371\346\370"),((const UBYTE *)"Hour Meter"),((const UBYTE *)"Urenmeter"),((const UBYTE *)"Timer"),((const UBYTE *)"Godz pracy"),((const UBYTE *)" Conta Hr"),((const UBYTE *)"\220\273\250\266\273\253\255 \273\243\264\306\245"),((const UBYTE *)"Tuntilaskuri"
#line 88
),((const UBYTE *)"Timmar"),((const UBYTE *)"Saat Saya\325")};


const UBYTE *const huge cMSG_Welcome[19] = {((const UBYTE *)"HELLO"),((const UBYTE *)"VELKOMMEN"),((const UBYTE *)"GUTEN TAG"),((const UBYTE *)"HELLO"),((const UBYTE *)"HELLO"),((const UBYTE *)"HOLA"),((const UBYTE *)"BONJOUR"),((const UBYTE *)"HELLO"),((const UBYTE *)"BUONGIORNO"),((const UBYTE *)"     HELLO"
#line 91
),((const UBYTE *)"HELLO"),((const UBYTE *)"HALLO"),((const UBYTE *)"VELKOMMEN"),((const UBYTE *)"WITAM"),((const UBYTE *)"OLA"),((const UBYTE *)"\206;\217\177\201\220\221\201\222\210\221\204"),((const UBYTE *)"TERVETULOA"),((const UBYTE *)"V<LKOMMEN"),((const UBYTE *)"MERHABA")};
const UBYTE *const huge cMSG_Machine[19] = {((const UBYTE *)"\243\022"),((const UBYTE *)"Maskine"),((const UBYTE *)"Masch."),((const UBYTE *)"Machine"),((const UBYTE *)"Machine"),((const UBYTE *)"Maquina"),((const UBYTE *)"Machine"),((const UBYTE *)"\311\030\026\372\366\030\360"),((const UBYTE *)"Macchina"
#line 92
),((const UBYTE *)"\373\371"),((const UBYTE *)"Machine"),((const UBYTE *)"Machine"),((const UBYTE *)"Maskin"),((const UBYTE *)"Aparat"),((const UBYTE *)"Maquina"),((const UBYTE *)"\177\262\262\243\263\243\266"),((const UBYTE *)"Laite"),((const UBYTE *)"Maskin"),((const UBYTE *)"Makine")};
const UBYTE *const huge cMSG_PatWelcome[19] = {((const UBYTE *)"\307\035"),((const UBYTE *)"Patient"),((const UBYTE *)"Therap."),((const UBYTE *)"Patient"),((const UBYTE *)"Patient"),((const UBYTE *)"Paciente"),((const UBYTE *)"Patient"),((const UBYTE *)"\273\026\370\366\375\360\025"),((const UBYTE 
#line 93
*)"Paziente"),((const UBYTE *)"\351\002"),((const UBYTE *)"Patient"),((const UBYTE *)"Pati\317nt"),((const UBYTE *)"Pasient"),((const UBYTE *)"Pacjent"),((const UBYTE *)"Paciente"),((const UBYTE *)"\216\243\271\253\250\240\266"),((const UBYTE *)"Potilas"),((const UBYTE *)"Patient"),((const UBYTE *)"Hasta"
#line 93
)};
const UBYTE *const huge cMSG_VSoft[19] = {((const UBYTE *)"\346\257\301\242"),((const UBYTE *)"Software Version"),((const UBYTE *)"Software Version"),((const UBYTE *)"Software version"),((const UBYTE *)"Software version"),((const UBYTE *)"Version Software"),((const UBYTE *)"Versions logiciel"),((
#line 94
const UBYTE *)"\323\372\365\377\026\367 \302\377\364\371\026\374\371\372\377\036"),((const UBYTE *)"Versione SW"),((const UBYTE *)"Software version"),((const UBYTE *)"Software versions"),((const UBYTE *)"Software versie"),((const UBYTE *)"Programversjon"),((const UBYTE *)"Wersja programowa"),((const
#line 94
 UBYTE *)"Versao Software"),((const UBYTE *)"\201\250\263\264\253\303 \262\263\306\246\263 \306\244\250\264\262"),((const UBYTE *)"Ohjelmistoversio"),((const UBYTE *)"Mjukvaru version"),((const UBYTE *)"Software Versiyonu")};
const UBYTE *const huge cMSG_CopyrightWelcome[19] = {((const UBYTE *)"Copyright 2019"),((const UBYTE *)"Copyright 2019"),((const UBYTE *)"Copyright 2019"),((const UBYTE *)"Copyright 2019"),((const UBYTE *)"Copyright 2019"),((const UBYTE *)"Copyright 2019"),((const UBYTE *)"Copyright 2019"),((const 
#line 95
UBYTE *)"Copyright 2019"),((const UBYTE *)"Copyright 2019"),((const UBYTE *)"Copyright 2019"),((const UBYTE *)"Copyright 2019"),((const UBYTE *)"Copyright 2019"),((const UBYTE *)"Copyright 2019"),((const UBYTE *)"Copyright 2019"),((const UBYTE *)"Copyright 2019"),((const UBYTE *)"Copyright 2019"),((
#line 95
const UBYTE *)"Copyright 2019"),((const UBYTE *)"Copyright 2019"),((const UBYTE *)"Copyright 2019")};
const UBYTE *const huge cMSG_CompanyWelcome[19] = {((const UBYTE *)"COVIDIEN"),((const UBYTE *)"COVIDIEN"),((const UBYTE *)"COVIDIEN"),((const UBYTE *)"COVIDIEN"),((const UBYTE *)"COVIDIEN"),((const UBYTE *)"COVIDIEN"),((const UBYTE *)"COVIDIEN"),((const UBYTE *)"COVIDIEN"),((const UBYTE *)"COVIDIEN"
#line 96
),((const UBYTE *)"COVIDIEN"),((const UBYTE *)"COVIDIEN"),((const UBYTE *)"COVIDIEN"),((const UBYTE *)"COVIDIEN"),((const UBYTE *)"COVIDIEN"),((const UBYTE *)"COVIDIEN"),((const UBYTE *)"COVIDIEN"),((const UBYTE *)"COVIDIEN"),((const UBYTE *)"COVIDIEN"),((const UBYTE *)"COVIDIEN")};


const UBYTE *const huge cMSG_Mode[6][19] = {{((const UBYTE *)"ACV"),((const UBYTE *)"VACV"),((const UBYTE *)"A/C VCV"),((const UBYTE *)"V A/C"),((const UBYTE *)"V A/C"),((const UBYTE *)"VAC"),((const UBYTE *)"VAC"),((const UBYTE *)"V A/C"),((const UBYTE *)"V A/C"),((const UBYTE *)"V A/C"),((const 
#line 99
UBYTE *)"V A/C"),((const UBYTE *)"AVC"),((const UBYTE *)"VACV"),((const UBYTE *)"ACV"),((const UBYTE *)"ACV"),((const UBYTE *)"V A/C"),((const UBYTE *)"VACV"),((const UBYTE *)"VACV"),((const UBYTE *)"ACV")},{((const UBYTE *)"PACV"),((const UBYTE *)"PACV"),((const UBYTE *)"A/C PCV"),((const UBYTE *)"P A/C"
#line 99
),((const UBYTE *)"P A/C"),((const UBYTE *)"VPAC"),((const UBYTE *)"VPAC"),((const UBYTE *)"P A/C"),((const UBYTE *)"P A/C"),((const UBYTE *)"P A/C"),((const UBYTE *)"P A/C"),((const UBYTE *)"PACV"),((const UBYTE *)"PACV"),((const UBYTE *)"PACV"),((const UBYTE *)"PACV"),((const UBYTE *)"P A/C"),((
#line 99
const UBYTE *)"PACV"),((const UBYTE *)"PACV"),((const UBYTE *)"PACV")},{((const UBYTE *)"PSV ST"),((const UBYTE *)"PSV ST"),((const UBYTE *)"PSV S/T"),((const UBYTE *)"PSV ST"),((const UBYTE *)"PSV ST"),((const UBYTE *)"PSV ST"),((const UBYTE *)"AI FR"),((const UBYTE *)"PSV ST"),((const UBYTE *)"PSV ST"
#line 99
),((const UBYTE *)"PSV ST"),((const UBYTE *)"PSV ST"),((const UBYTE *)"PSV ST"),((const UBYTE *)"PSV ST"),((const UBYTE *)"PSV ST"),((const UBYTE *)"PSV ST"),((const UBYTE *)"PSV ST"),((const UBYTE *)"PSV ST"),((const UBYTE *)"PSV ST"),((const UBYTE *)"PSV ST")},{((const UBYTE *)"SIMV"),((const 
#line 99
UBYTE *)"SIMV"),((const UBYTE *)"V-SIMV"),((const UBYTE *)"V SIMV"),((const UBYTE *)"V SIMV"),((const UBYTE *)"V SIMV"),((const UBYTE *)"VACI"),((const UBYTE *)"V SIMV"),((const UBYTE *)"SIMV"),((const UBYTE *)"V SIMV"),((const UBYTE *)"V SIMV"),((const UBYTE *)"V SIMV"),((const UBYTE *)"SIMV"),((
#line 99
const UBYTE *)"SIMV"),((const UBYTE *)" V SIMV"),((const UBYTE *)"V SIMV"),((const UBYTE *)"SIMV"),((const UBYTE *)"SIMV"),((const UBYTE *)"SIMV")},{((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P-SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"
#line 99
),((const UBYTE *)"PACI"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE 
#line 99
*)"P SIMV"),((const UBYTE *)"P SIMV")},{((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"
#line 99
),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP")}};
#line 105
const UBYTE *const huge cMSG_Mode2[6][19] = {{((const UBYTE *)"CV"),((const UBYTE *)"VCV"),((const UBYTE *)"VCV"),((const UBYTE *)"VC"),((const UBYTE *)"VC"),((const UBYTE *)"VC"),((const UBYTE *)"VC"),((const UBYTE *)"VC"),((const UBYTE *)"VCV"),((const UBYTE *)"VCV"),((const UBYTE *)"VC"),((const 
#line 105
UBYTE *)"VC"),((const UBYTE *)"VCV"),((const UBYTE *)"CV"),((const UBYTE *)"CV"),((const UBYTE *)"VC"),((const UBYTE *)"VCV"),((const UBYTE *)"VCV"),((const UBYTE *)"CV")},{((const UBYTE *)"PCV"),((const UBYTE *)"PCV"),((const UBYTE *)"PCV"),((const UBYTE *)"PC"),((const UBYTE *)"PC"),((const UBYTE 
#line 105
*)"VPC"),((const UBYTE *)"VPC"),((const UBYTE *)"PC"),((const UBYTE *)"PCV"),((const UBYTE *)"PCV"),((const UBYTE *)"PC"),((const UBYTE *)"PCV"),((const UBYTE *)"PCV"),((const UBYTE *)"PCV"),((const UBYTE *)"PCV"),((const UBYTE *)"PC"),((const UBYTE *)"PCV"),((const UBYTE *)"PCV"),((const UBYTE *)"PCV"
#line 105
)},{((const UBYTE *)"PSV S"),((const UBYTE *)"PSV S"),((const UBYTE *)"PSV S "),((const UBYTE *)"PSV "),((const UBYTE *)"PSV "),((const UBYTE *)"PSV S"),((const UBYTE *)"AI"),((const UBYTE *)"PSV"),((const UBYTE *)"PSV"),((const UBYTE *)"PSV"),((const UBYTE *)"PSV "),((const UBYTE *)"PSV ST"),((
#line 105
const UBYTE *)"PSV S"),((const UBYTE *)"PSV S"),((const UBYTE *)"PSV S"),((const UBYTE *)"PSV "),((const UBYTE *)"PSV S"),((const UBYTE *)"PSV S"),((const UBYTE *)"PSV S")},{((const UBYTE *)"SIMV"),((const UBYTE *)"SIMV"),((const UBYTE *)"V-SIMV"),((const UBYTE *)"V SIMV"),((const UBYTE *)"V SIMV"),
#line 105
((const UBYTE *)"V SIMV"),((const UBYTE *)"VACI"),((const UBYTE *)"V SIMV"),((const UBYTE *)"SIMV"),((const UBYTE *)"V SIMV"),((const UBYTE *)"V SIMV"),((const UBYTE *)"V SIMV"),((const UBYTE *)"SIMV"),((const UBYTE *)"SIMV"),((const UBYTE *)" V SIMV"),((const UBYTE *)"V SIMV"),((const UBYTE *)"SIMV"
#line 105
),((const UBYTE *)"SIMV"),((const UBYTE *)"SIMV")},{((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P-SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"PACI"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"
#line 105
),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV")},{((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE 
#line 105
*)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((
#line 105
const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP")}};
#line 111
const UBYTE *const huge cMSG_Mode3[6][19] = {{((const UBYTE *)"CV (ACV)"),((const UBYTE *)"VCV (VACV)"),((const UBYTE *)"(A/C) VCV"),((const UBYTE *)"CV(V A/C)"),((const UBYTE *)"CV(V A/C)"),((const UBYTE *)"VC (VAC)"),((const UBYTE *)"VC (VAC)"),((const UBYTE *)"CV(V A/C)"),((const UBYTE *)"VCV(ACV)"
#line 111
),((const UBYTE *)"CV(V A/C)"),((const UBYTE *)"CV(V A/C)"),((const UBYTE *)"VC (AVC)"),((const UBYTE *)"VCV (VACV)"),((const UBYTE *)"CV (ACV)"),((const UBYTE *)"CV (ACV)"),((const UBYTE *)"CV(V A/C)"),((const UBYTE *)"VCV (VACV)"),((const UBYTE *)"VCV (VACV)"),((const UBYTE *)"CV (ACV)")},{((const
#line 111
 UBYTE *)"PCV (PACV)"),((const UBYTE *)"PCV (PACV)"),((const UBYTE *)"(A/C) PCV"),((const UBYTE *)"PC(P A/C)"),((const UBYTE *)"PC(P A/C)"),((const UBYTE *)"VPC(VPAC)"),((const UBYTE *)"VPC (VPAC)"),((const UBYTE *)"PC(P A/C)"),((const UBYTE *)"PCV(PACV)"),((const UBYTE *)"PC(P A/C)"),((const UBYTE 
#line 111
*)"PC(P A/C)"),((const UBYTE *)"PCV (PACV)"),((const UBYTE *)"PCV (PACV)"),((const UBYTE *)"PCV (PACV)"),((const UBYTE *)"PCV (PACV)"),((const UBYTE *)"PC(P A/C)"),((const UBYTE *)"PCV (PACV)"),((const UBYTE *)"PCV (PACV)"),((const UBYTE *)"PCV (PACV)")},{((const UBYTE *)"PSV S(T)"),((const UBYTE *)"PSV S(T)"
#line 111
),((const UBYTE *)"PSV S(T)"),((const UBYTE *)"PSV (ST)"),((const UBYTE *)"PSV (ST)"),((const UBYTE *)"PSV (ST)"),((const UBYTE *)"AI (FR)"),((const UBYTE *)"PSV (ST)"),((const UBYTE *)"PSV(PSV ST)"),((const UBYTE *)"PSV S(T)"),((const UBYTE *)"PSV (ST)"),((const UBYTE *)"PSV S(T)"),((const UBYTE *)"PSV S(T)"
#line 111
),((const UBYTE *)"PSV S(T)"),((const UBYTE *)"PSV (ST)"),((const UBYTE *)"PSV (ST)"),((const UBYTE *)"PSV S(T)"),((const UBYTE *)"PSV S(T)"),((const UBYTE *)"PSV S(T)")},{((const UBYTE *)"SIMV"),((const UBYTE *)"SIMV"),((const UBYTE *)"V-SIMV"),((const UBYTE *)"V SIMV"),((const UBYTE *)"V SIMV"),((
#line 111
const UBYTE *)"V SIMV"),((const UBYTE *)"VACI"),((const UBYTE *)"V SIMV"),((const UBYTE *)"SIMV"),((const UBYTE *)"V SIMV"),((const UBYTE *)"V SIMV"),((const UBYTE *)"V SIMV"),((const UBYTE *)"SIMV"),((const UBYTE *)"SIMV"),((const UBYTE *)" V SIMV"),((const UBYTE *)"V SIMV"),((const UBYTE *)"SIMV")
#line 111
,((const UBYTE *)"SIMV"),((const UBYTE *)"SIMV")},{((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P-SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"PACI"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"
#line 111
),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV"),((const UBYTE *)"P SIMV")},{((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE 
#line 111
*)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((
#line 111
const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP")}};
#line 117
const UBYTE *const huge cMSG_InspTrigger[7][19] = {{((const UBYTE *)"OFF"),((const UBYTE *)"OFF"),((const UBYTE *)"AUS"),((const UBYTE *)"OFF"),((const UBYTE *)"OFF"),((const UBYTE *)"OFF"),((const UBYTE *)"OFF"),((const UBYTE *)"OFF"),((const UBYTE *)"OFF"),((const UBYTE *)"OFF"),((const UBYTE *)"OFF"
#line 117
),((const UBYTE *)"OFF"),((const UBYTE *)"AV"),((const UBYTE *)"WY\?"),((const UBYTE *)"OFF"),((const UBYTE *)"OT@]"),((const UBYTE *)"OFF"),((const UBYTE *)"OFF"),((const UBYTE *)"OFF")},{((const UBYTE *)"0P"),((const UBYTE *)"0P"),((const UBYTE *)"0P"),((const UBYTE *)"0P"),((const UBYTE *)"0P"),(
#line 117
(const UBYTE *)"0P"),((const UBYTE *)"0P"),((const UBYTE *)"0P"),((const UBYTE *)"0P"),((const UBYTE *)"0P"),((const UBYTE *)"0P"),((const UBYTE *)"0P"),((const UBYTE *)"0P"),((const UBYTE *)"0P"),((const UBYTE *)"0P"),((const UBYTE *)"0P"),((const UBYTE *)"0P"),((const UBYTE *)"0P"),((const UBYTE *
#line 117
)"0P")},{((const UBYTE *)"1P"),((const UBYTE *)"1P"),((const UBYTE *)"1P"),((const UBYTE *)"1P"),((const UBYTE *)"1P"),((const UBYTE *)"1P"),((const UBYTE *)"1P"),((const UBYTE *)"1P"),((const UBYTE *)"1P"),((const UBYTE *)"1P"),((const UBYTE *)"1P"),((const UBYTE *)"1P"),((const UBYTE *)"1P"),((
#line 117
const UBYTE *)"1P"),((const UBYTE *)"1P"),((const UBYTE *)"1P"),((const UBYTE *)"1P"),((const UBYTE *)"1P"),((const UBYTE *)"1P")},{((const UBYTE *)"2"),((const UBYTE *)"2"),((const UBYTE *)"2"),((const UBYTE *)"2"),((const UBYTE *)"2"),((const UBYTE *)"2"),((const UBYTE *)"2"),((const UBYTE *)"2"),
#line 117
((const UBYTE *)"2"),((const UBYTE *)"2"),((const UBYTE *)"2"),((const UBYTE *)"2"),((const UBYTE *)"2"),((const UBYTE *)"2"),((const UBYTE *)"2"),((const UBYTE *)"2"),((const UBYTE *)"2"),((const UBYTE *)"2"),((const UBYTE *)"2")},{((const UBYTE *)"3"),((const UBYTE *)"3"),((const UBYTE *)"3"),((
#line 117
const UBYTE *)"3"),((const UBYTE *)"3"),((const UBYTE *)"3"),((const UBYTE *)"3"),((const UBYTE *)"3"),((const UBYTE *)"3"),((const UBYTE *)"3"),((const UBYTE *)"3"),((const UBYTE *)"3"),((const UBYTE *)"3"),((const UBYTE *)"3"),((const UBYTE *)"3"),((const UBYTE *)"3"),((const UBYTE *)"3"),((const 
#line 117
UBYTE *)"3"),((const UBYTE *)"3")},{((const UBYTE *)"4"),((const UBYTE *)"4"),((const UBYTE *)"4"),((const UBYTE *)"4"),((const UBYTE *)"4"),((const UBYTE *)"4"),((const UBYTE *)"4"),((const UBYTE *)"4"),((const UBYTE *)"4"),((const UBYTE *)"4"),((const UBYTE *)"4"),((const UBYTE *)"4"),((const 
#line 117
UBYTE *)"4"),((const UBYTE *)"4"),((const UBYTE *)"4"),((const UBYTE *)"4"),((const UBYTE *)"4"),((const UBYTE *)"4"),((const UBYTE *)"4")},{((const UBYTE *)"5"),((const UBYTE *)"5"),((const UBYTE *)"5"),((const UBYTE *)"5"),((const UBYTE *)"5"),((const UBYTE *)"5"),((const UBYTE *)"5"),((const 
#line 117
UBYTE *)"5"),((const UBYTE *)"5"),((const UBYTE *)"5"),((const UBYTE *)"5"),((const UBYTE *)"5"),((const UBYTE *)"5"),((const UBYTE *)"5"),((const UBYTE *)"5"),((const UBYTE *)"5"),((const UBYTE *)"5"),((const UBYTE *)"5"),((const UBYTE *)"5")}};
#line 124
const UBYTE *const huge cMSG_EnableMode[19] = {((const UBYTE *)"}\037@"),((const UBYTE *)"AKTIV"),((const UBYTE *)"AKTIV"),((const UBYTE *)"ACTIVE"),((const UBYTE *)"ACTIVE"),((const UBYTE *)"ACTIVO"),((const UBYTE *)"ACTIF"),((const UBYTE *)"\276\304\276\307\254\305"),((const UBYTE *)"ATTIVO"),((
#line 124
const UBYTE *)"\314\326\310"),((const UBYTE *)"ACTIVE"),((const UBYTE *)"ACTIEF"),((const UBYTE *)"AKTIV"),((const UBYTE *)"AKTYWNE"),((const UBYTE *)"ACTIVO"),((const UBYTE *)"\177@\221\207\201"),((const UBYTE *)"K<YT\326SS<"),((const UBYTE *)"AKTIV"),((const UBYTE *)"AKT\017F")};
const UBYTE *const huge cMSG_DisableMode[19] = {((const UBYTE *)"\241\037@"),((const UBYTE *)"IKKE AKTIV"),((const UBYTE *)"NICHT AKTIV"),((const UBYTE *)"INACTIVE"),((const UBYTE *)"INACTIVE"),((const UBYTE *)"NO ACTIVO"),((const UBYTE *)"NON ACTIF"),((const UBYTE *)"\303\277 \276\304\276\307\254\305"
#line 125
),((const UBYTE *)"NON ATTIVO"),((const UBYTE *)"\367\314\326"),((const UBYTE *)"INACTIVE"),((const UBYTE *)"NIET ACTIEF"),((const UBYTE *)"IKKE AKTIV"),((const UBYTE *)"PROPOZYCJA"),((const UBYTE *)"INACTIVO"),((const UBYTE *)"\214\204\177@\221\207\201"),((const UBYTE *)"EI K<YT\326SS<"),((const 
#line 125
UBYTE *)"EJ AKTIV"),((const UBYTE *)"\017NAKT\017F")};
const UBYTE *const huge cMSG_AutoMode[19] = {((const UBYTE *)"\371\342"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const 
#line 126
UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"\177\201\221\215"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"OTO")};
const UBYTE *const huge cMSG_PressureSlope[19] = {((const UBYTE *)"\210`*!\234\365"),((const UBYTE *)"Stigningstid"),((const UBYTE *)"Anstiegzeit"),((const UBYTE *)"Rise Time"),((const UBYTE *)"Rise Time"),((const UBYTE *)"Acele Flujo"),((const UBYTE *)"Pente"),((const UBYTE *)"Rise Time"),((const 
#line 127
UBYTE *)"Rise Time"),((const UBYTE *)"Rise Time"),((const UBYTE *)"Rise Time"),((const UBYTE *)"Stijgingstijd"),((const UBYTE *)"Stigetid"),((const UBYTE *)"Narastanie"),((const UBYTE *)"Subida Ti"),((const UBYTE *)"\222\264\255 \216\306\266\306\255\243"),((const UBYTE *)"Nousuaika"),((const UBYTE *
#line 127
)"Stigtid"),((const UBYTE *)"Rise Ti")};
const UBYTE *const huge cMSG_Rampe[19] = {((const UBYTE *)"\271\360\267\205"),((const UBYTE *)"Flowkurve"),((const UBYTE *)"Flow"),((const UBYTE *)"Ramp"),((const UBYTE *)"Flow"),((const UBYTE *)"Rampa"),((const UBYTE *)"Rampe"),((const UBYTE *)"Ramp"),((const UBYTE *)"Flusso"),((const UBYTE *)"\331\256\257\350"
#line 128
),((const UBYTE *)"Ramp"),((const UBYTE *)"Ramp"),((const UBYTE *)"Ramp"),((const UBYTE *)"Krzywa"),((const UBYTE *)"Rampa"),((const UBYTE *)"\223\306\263\257\243 \255\263."),((const UBYTE *)"Flow k\332yr\332"),((const UBYTE *)"Ramp"),((const UBYTE *)"Rampa")};
const UBYTE *const huge cMSG_ExhalationPressure[19] = {((const UBYTE *)"EPAP"),((const UBYTE *)"EPAP"),((const UBYTE *)"EPAP"),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"EPAP"),((const UBYTE *)"Pe"),((const UBYTE *)"PEEP"),((const UBYTE *)"EPAP"),((const UBYTE *)"PEEP"),((const
#line 129
 UBYTE *)"PEEP"),((const UBYTE *)"EPAP"),((const UBYTE *)"EPAP"),((const UBYTE *)"EPAP"),((const UBYTE *)"EPAP"),((const UBYTE *)"PEEP"),((const UBYTE *)"EPAP"),((const UBYTE *)"EPAP"),((const UBYTE *)"EPAP")};
const UBYTE *const huge cMSG_CpapPressure[19] = {((const UBYTE *)"CPAP"),((const UBYTE *)"Cpap"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"Cpap"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const 
#line 130
UBYTE *)"CPAP"),((const UBYTE *)"CPAP"),((const UBYTE *)"Cpap"),((const UBYTE *)"CPAP"),((const UBYTE *)"Cpap"),((const UBYTE *)"CPAP"),((const UBYTE *)"Cpap"),((const UBYTE *)"Cpap"),((const UBYTE *)"Cpap")};
const UBYTE *const huge cMSG_InsuflationPressureControl[19] = {((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"
#line 131
),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi")};
const UBYTE *const huge cMSG_InsuflationPressureControl2[19] = {((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"
#line 132
),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi")};
const UBYTE *const huge cMSG_InsuflationPressureSupport[19] = {((const UBYTE *)"P Support"),((const UBYTE *)"P Support"),((const UBYTE *)"IPAP supp"),((const UBYTE *)"P Support"),((const UBYTE *)"P Support"),((const UBYTE *)"P Soporte"),((const UBYTE *)"Support P"),((const UBYTE *)"P Support"),((
#line 133
const UBYTE *)"IPAP"),((const UBYTE *)"P Support"),((const UBYTE *)"P Support"),((const UBYTE *)"P Support"),((const UBYTE *)"P Support"),((const UBYTE *)"P Support"),((const UBYTE *)"P Suporte"),((const UBYTE *)"P Support"),((const UBYTE *)"P Support"),((const UBYTE *)"P Support"),((const UBYTE *)"P Support"
#line 133
)};
const UBYTE *const huge cMSG_CurrantVolume[19] = {((const UBYTE *)"Vt"),((const UBYTE *)"VT"),((const UBYTE *)"Vt"),((const UBYTE *)"Vt"),((const UBYTE *)"Vt"),((const UBYTE *)"VT"),((const UBYTE *)"Vt"),((const UBYTE *)"Vt"),((const UBYTE *)"Vt"),((const UBYTE *)"Vt"),((const UBYTE *)"Vt"),((const 
#line 134
UBYTE *)"VT"),((const UBYTE *)"VT"),((const UBYTE *)"VT"),((const UBYTE *)"VT"),((const UBYTE *)"Vt"),((const UBYTE *)"VT"),((const UBYTE *)"VT"),((const UBYTE *)"VT")};
const UBYTE *const huge cMSG_InspirationTrigger[19] = {((const UBYTE *)"\016\263\335$"),((const UBYTE *)"Insp trigg"),((const UBYTE *)"Trigg I"),((const UBYTE *)"I Sens"),((const UBYTE *)"Insp Sens"),((const UBYTE *)"Trigg I"),((const UBYTE *)"Trigg I"),((const UBYTE *)"I Sens"),((const UBYTE *)"Trigg Insp"
#line 135
),((const UBYTE *)"\331\256Sens"),((const UBYTE *)"Trigg I"),((const UBYTE *)"Trigg Insp."),((const UBYTE *)"Insp trigg"),((const UBYTE *)"Wyzw I"),((const UBYTE *)"Trigg I"),((const UBYTE *)"\221\263\253\246 \201\247\306\270\243"),((const UBYTE *)"Insp Trigg"),((const UBYTE *)"Insp trigg"),((const 
#line 135
UBYTE *)"Tetik I")};
const UBYTE *const huge cMSG_ExhalationTrigger[19] = {((const UBYTE *)"\021\263\335$"),((const UBYTE *)"Eksp trigg"),((const UBYTE *)"Trigg E"),((const UBYTE *)"E Sens"),((const UBYTE *)"Exh Sens"),((const UBYTE *)"Trigg E"),((const UBYTE *)"Trigg E"),((const UBYTE *)"E Sens"),((const UBYTE *)"Trigg Esp"
#line 136
),((const UBYTE *)"\332\256Sens"),((const UBYTE *)"Trigg E"),((const UBYTE *)"Trigg Exp."),((const UBYTE *)"Eksp trigg"),((const UBYTE *)"Wyzw E"),((const UBYTE *)"Trigg E"),((const UBYTE *)"\221\263\253\246 \201\277\247."),((const UBYTE *)"Eksp trigg"),((const UBYTE *)"Exp trigg"),((const UBYTE *)"Tetik E"
#line 136
)};
const UBYTE *const huge cMSG_ControlRate[19] = {((const UBYTE *)"\021\016\374\303"),((const UBYTE *)"Frekvens"),((const UBYTE *)"Af"),((const UBYTE *)"Rate"),((const UBYTE *)"R-Rate"),((const UBYTE *)"Fr"),((const UBYTE *)"Fr mini"),((const UBYTE *)"Rate"),((const UBYTE *)"Frequenza"),((const UBYTE 
#line 137
*)"\333\361"),((const UBYTE *)"Rate"),((const UBYTE *)"Frequentie"),((const UBYTE *)"Frekvens"),((const UBYTE *)"RR"),((const UBYTE *)"Fr"),((const UBYTE *)"\226;"),((const UBYTE *)"Taajuus"),((const UBYTE *)"Frekvens"),((const UBYTE *)"Frekans")};
const UBYTE *const huge cMSG_BackupRate[19] = {((const UBYTE *)"\036\v\021\016\374\303"),((const UBYTE *)"Sikret Fr"),((const UBYTE *)"Backup Af"),((const UBYTE *)"Backup R"),((const UBYTE *)"Backup R"),((const UBYTE *)"Fr Reserva"),((const UBYTE *)"Fr sec"),((const UBYTE *)"Backup R"),((const UBYTE
#line 138
 *)"F Back Up"),((const UBYTE *)"Backup\361"),((const UBYTE *)"Backup R"),((const UBYTE *)"Backup F"),((const UBYTE *)"Backup R"),((const UBYTE *)"RRa Apnea"),((const UBYTE *)"Fr Reserva"),((const UBYTE *)"\226; \243\262\240\306\301"),((const UBYTE *)"Min Frekv"),((const UBYTE *)"Back up R"),((const
#line 138
 UBYTE *)"Back Up R")};
const UBYTE *const huge cMSG_Apnee[19] = {((const UBYTE *)"\321\211\354\263"),((const UBYTE *)"Apn\312 tid"),((const UBYTE *)"Apnoezeit"),((const UBYTE *)"Apnea time"),((const UBYTE *)"Apnea time"),((const UBYTE *)"Apnea"),((const UBYTE *)"Apn\322e"),((const UBYTE *)"Apnea Time"),((const UBYTE *)"Apnea"
#line 139
),((const UBYTE *)"\322\332\331\364\f"),((const UBYTE *)"Apnea time"),((const UBYTE *)"Apneu Tijd"),((const UBYTE *)"Apnea"),((const UBYTE *)"Ta Apnea"),((const UBYTE *)"Apneia"),((const UBYTE *)"T \243\262\240\306\301"),((const UBYTE *)"Apnea"),((const UBYTE *)"Apne"),((const UBYTE *)"Apne")};
const UBYTE *const huge cMSG_TiControl[19] = {((const UBYTE *)"\016\263\234\365"),((const UBYTE *)"Insp Time"),((const UBYTE *)"Insp. Zeit"),((const UBYTE *)"Insp Time"),((const UBYTE *)"Insp Time"),((const UBYTE *)"T. Insp"),((const UBYTE *)"Ti Control\322"),((const UBYTE *)"Insp Time"),((const 
#line 140
UBYTE *)"Tempo Insp"),((const UBYTE *)"\331\256\364\f"),((const UBYTE *)"Insp Time"),((const UBYTE *)"Insp Tijd"),((const UBYTE *)"Insp Time"),((const UBYTE *)"Czas wdech"),((const UBYTE *)"Tempo Insp "),((const UBYTE *)"T \245\247\306\270\243"),((const UBYTE *)"Insp Time"),((const UBYTE *)"Insp Time"
#line 140
),((const UBYTE *)"Insp Time")};
const UBYTE *const huge cMSG_IERation[19] = {((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((
#line 141
const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E")};
const UBYTE *const huge cMSG_ITRation[19] = {((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((
#line 142
const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T")};
const UBYTE *const huge cMSG_TiMon[19] = {((const UBYTE *)"Ti"),((const UBYTE *)"Ti"),((const UBYTE *)"Ti"),((const UBYTE *)"Ti"),((const UBYTE *)"Ti"),((const UBYTE *)"Ti"),((const UBYTE *)"Ti"),((const UBYTE *)"Ti"),((const UBYTE *)"Ti"),((const UBYTE *)"Ti"),((const UBYTE *)"Ti"),((const UBYTE *)"Ti"
#line 143
),((const UBYTE *)"Ti"),((const UBYTE *)"Ti"),((const UBYTE *)"Ti"),((const UBYTE *)"T \245\247\306\270\243"),((const UBYTE *)"Ti"),((const UBYTE *)"Ti"),((const UBYTE *)"Ti")};
const UBYTE *const huge cMSG_TeMon[19] = {((const UBYTE *)"Te"),((const UBYTE *)"Te"),((const UBYTE *)"Te"),((const UBYTE *)"Te"),((const UBYTE *)"Te"),((const UBYTE *)"Te"),((const UBYTE *)"Te"),((const UBYTE *)"Te"),((const UBYTE *)"Te"),((const UBYTE *)"Te"),((const UBYTE *)"Te"),((const UBYTE *)"Te"
#line 144
),((const UBYTE *)"Te"),((const UBYTE *)"Te"),((const UBYTE *)"Te"),((const UBYTE *)"T \245\277\247\306\270\243"),((const UBYTE *)"Te"),((const UBYTE *)"Te"),((const UBYTE *)"Te")};
const UBYTE *const huge cMSG_Pulse[19] = {((const UBYTE *)"#CHAR!#CHAR!"),((const UBYTE *)"Pulse"),((const UBYTE *)"Puls"),((const UBYTE *)"Pulse"),((const UBYTE *)"Pulse"),((const UBYTE *)"Pulso"),((const UBYTE *)"Pulsation"),((const UBYTE *)"Pulse"),((const UBYTE *)"Freq Polso"),((const UBYTE *)"Pulse"
#line 145
),((const UBYTE *)"Pulse"),((const UBYTE *)"Pulse"),((const UBYTE *)"Puls"),((const UBYTE *)"Puls"),((const UBYTE *)"Pulso"),((const UBYTE *)"\216\267\256\300\264"),((const UBYTE *)"Pulssi"),((const UBYTE *)"Puls"),((const UBYTE *)"Pulse")};
const UBYTE *const huge cMSG_Soupir[19] = {((const UBYTE *)"\034\211"),((const UBYTE *)"Suk"),((const UBYTE *)"Seufzer"),((const UBYTE *)"Sigh"),((const UBYTE *)"Sigh"),((const UBYTE *)"Suspiro"),((const UBYTE *)"Soupir"),((const UBYTE *)"Sigh"),((const UBYTE *)"Sigh"),((const UBYTE *)"\302\332\331"
#line 146
),((const UBYTE *)"Sigh"),((const UBYTE *)"Zucht"),((const UBYTE *)"Sukk"),((const UBYTE *)"Westchn."),((const UBYTE *)"Suspiro"),((const UBYTE *)"\201\252\247\306\270"),((const UBYTE *)"Huokaisu"),((const UBYTE *)"Suck"),((const UBYTE *)"Sigh")};
const UBYTE *const huge cMSG_VtSoupir[19] = {((const UBYTE *)"\034\211\300\263\360"),((const UBYTE *)"Suk Vt"),((const UBYTE *)"Vt Seufz"),((const UBYTE *)"Sigh Vt"),((const UBYTE *)"Sigh Vt"),((const UBYTE *)"Vt Susp"),((const UBYTE *)"Vt Soupir"),((const UBYTE *)"Sigh Vt"),((const UBYTE *)"Vt Sigh"
#line 147
),((const UBYTE *)"\302\332\331Vt"),((const UBYTE *)"Sigh Vt"),((const UBYTE *)"Zucht Vt"),((const UBYTE *)"Sukk Vt"),((const UBYTE *)"Westchn. VT"),((const UBYTE *)"Vt Susp"),((const UBYTE *)"Vt \245\252\247\306\270\243"),((const UBYTE *)"Huokaisu Vt"),((const UBYTE *)"Suck Vt"),((const UBYTE *)"Sigh Vt"
#line 147
)};
const UBYTE *const huge cMSG_CptSoupir[19] = {((const UBYTE *)"\034\211\021\016\374\303"),((const UBYTE *)"Suk Frekv"),((const UBYTE *)"Af Seufz"),((const UBYTE *)"Sigh Rate"),((const UBYTE *)"Sigh Rate"),((const UBYTE *)"Fr Susp"),((const UBYTE *)"Cpt Soupir"),((const UBYTE *)"Sigh Rate"),((const 
#line 148
UBYTE *)"Freq Sigh"),((const UBYTE *)"\302\332\331\333\361"),((const UBYTE *)"Sigh Rate"),((const UBYTE *)"Zucht Freq"),((const UBYTE *)"Sukk frekv"),((const UBYTE *)"Westchn. RR"),((const UBYTE *)"Fr Susp"),((const UBYTE *)"\226; \245\252\247\306\270\306\245"),((const UBYTE *)"Huokaisutaajuus"),((
#line 148
const UBYTE *)"Suck Frekv"),((const UBYTE *)"Sigh fre")};
const UBYTE *const huge cMSG_FiO2[19] = {((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"
#line 149
),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2 ")};
const UBYTE *const huge cMSG_VTCible[19] = {((const UBYTE *)"\312\245\300\263\360"),((const UBYTE *)"Vt garanti"),((const UBYTE *)"Ziel Vt"),((const UBYTE *)"Vt Target"),((const UBYTE *)"Vt Target"),((const UBYTE *)"Vt Target"),((const UBYTE *)"Vt Cible"),((const UBYTE *)"Vt Target"),((const UBYTE *
#line 150
)"Vt Target"),((const UBYTE *)"\327\372Vt"),((const UBYTE *)"Vt Target"),((const UBYTE *)"Vt Target"),((const UBYTE *)"Vt garanti"),((const UBYTE *)"VTdocelowa"),((const UBYTE *)"Vt Target"),((const UBYTE *)"Vt \271\250\256\250\245\306\254"),((const UBYTE *)"Tav.Tilavuus"),((const UBYTE *)"Vt garanti"
#line 150
),((const UBYTE *)"Hedef Vt")};
const UBYTE *const huge cMSG_PiMax[19] = {((const UBYTE *)"\237\f\016\263\210"),((const UBYTE *)"Max tryk"),((const UBYTE *)"P Max"),((const UBYTE *)"Max P"),((const UBYTE *)"Max P"),((const UBYTE *)"P Maxi"),((const UBYTE *)"Pi Maxi"),((const UBYTE *)"Max P"),((const UBYTE *)"P Maxi"),((const UBYTE
#line 151
 *)"\366\022\334"),((const UBYTE *)"Maxi P"),((const UBYTE *)"P Max"),((const UBYTE *)"Max trykk"),((const UBYTE *)"P max"),((const UBYTE *)"P Maxi"),((const UBYTE *)"P max"),((const UBYTE *)"Max paine"),((const UBYTE *)"Max tryck"),((const UBYTE *)"Maks P")};
const UBYTE *const huge cMSG_VaciRate[19] = {((const UBYTE *)"SIMV\374\303"),((const UBYTE *)"SIMV Frek"),((const UBYTE *)"Af SIMV"),((const UBYTE *)"SIMV Rate"),((const UBYTE *)"SIMV Rate"),((const UBYTE *)"Fr SIMV"),((const UBYTE *)"Fr VACI"),((const UBYTE *)"SIMV Rate"),((const UBYTE *)"SIMV Rate"
#line 152
),((const UBYTE *)"SIMV\361"),((const UBYTE *)"SIMV Rate"),((const UBYTE *)"SIMV Freq"),((const UBYTE *)"SIMV Frekv"),((const UBYTE *)"SIMV RR"),((const UBYTE *)"Fr SIMV"),((const UBYTE *)"\226; SIMV"),((const UBYTE *)"SIMV- taajuus"),((const UBYTE *)"SIMV Frekv"),((const UBYTE *)"SIMV frekans")};
const UBYTE *const huge cMSG_InsuflationPressurePeakMon[19] = {((const UBYTE *)"PIP"),((const UBYTE *)"IPAP"),((const UBYTE *)"PIP"),((const UBYTE *)"PIP"),((const UBYTE *)"PIP"),((const UBYTE *)"PIP"),((const UBYTE *)"Pi"),((const UBYTE *)"PIP"),((const UBYTE *)"PIP"),((const UBYTE *)"PIP"),((const
#line 153
 UBYTE *)"PIP"),((const UBYTE *)"IPAP"),((const UBYTE *)"IPAP"),((const UBYTE *)"PIP"),((const UBYTE *)"PIP"),((const UBYTE *)"P \262\253\255"),((const UBYTE *)"IPAP"),((const UBYTE *)"IPAP"),((const UBYTE *)"PIP ")};
const UBYTE *const huge cMSG_Vti[19] = {((const UBYTE *)"Vti"),((const UBYTE *)"VTI"),((const UBYTE *)"Vti"),((const UBYTE *)"VtI"),((const UBYTE *)"VtI"),((const UBYTE *)"VTI"),((const UBYTE *)"Vti"),((const UBYTE *)"VtI"),((const UBYTE *)"Vt I"),((const UBYTE *)"VTI"),((const UBYTE *)"VtI"),((
#line 154
const UBYTE *)"VTI"),((const UBYTE *)"VTI"),((const UBYTE *)"VTI"),((const UBYTE *)"VTI"),((const UBYTE *)"Vt \245\247"),((const UBYTE *)"VTI"),((const UBYTE *)"VTI"),((const UBYTE *)"VTI")};
const UBYTE *const huge cMSG_Vte[19] = {((const UBYTE *)"Vte"),((const UBYTE *)"VTE"),((const UBYTE *)"Vte"),((const UBYTE *)"VtE"),((const UBYTE *)"VtE"),((const UBYTE *)"VTE"),((const UBYTE *)"Vte"),((const UBYTE *)"VtE"),((const UBYTE *)"Vt E"),((const UBYTE *)"VTE"),((const UBYTE *)"VtE"),((
#line 155
const UBYTE *)"VTE"),((const UBYTE *)"VTE"),((const UBYTE *)"VTE"),((const UBYTE *)"VTE"),((const UBYTE *)"Vt \245\277\247"),((const UBYTE *)"VTE"),((const UBYTE *)"VTE"),((const UBYTE *)"VTE")};
const UBYTE *const huge cMSG_Vm[19] = {((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"Vol M"),((const UBYTE *)"Vm"),((const UBYTE *)"M.Vol"),((const UBYTE *)"V Min"),((const UBYTE *)"M.Vol"),((const UBYTE 
#line 156
*)"M.Vol"),((const UBYTE *)"AMV"),((const UBYTE *)"M.Vol"),((const UBYTE *)"MVE"),((const UBYTE *)"Vol M"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"D Hac")};
const UBYTE *const huge cMSG_RateMon[19] = {((const UBYTE *)"rate"),((const UBYTE *)"Fr"),((const UBYTE *)"Af"),((const UBYTE *)"Rate"),((const UBYTE *)"Rate"),((const UBYTE *)"Fr"),((const UBYTE *)"Fr"),((const UBYTE *)"Rate"),((const UBYTE *)"Freq"),((const UBYTE *)"Rate"),((const UBYTE *)"Rate"),
#line 157
((const UBYTE *)"Freq"),((const UBYTE *)"Fr"),((const UBYTE *)"RR"),((const UBYTE *)"Fr"),((const UBYTE *)"\226;"),((const UBYTE *)"Fr "),((const UBYTE *)"Fr"),((const UBYTE *)"Rate")};
const UBYTE *const huge cMSG_IERationMon[19] = {((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E")
#line 158
,((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E"),((const UBYTE *)"I:E ")};
const UBYTE *const huge cMSG_ITRationMon[19] = {((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T")
#line 159
,((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I:T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T"),((const UBYTE *)"I/T")};
const UBYTE *const huge cMSG_FuiteMon[19] = {((const UBYTE *)"leak"),((const UBYTE *)"Leaks"),((const UBYTE *)"Leck"),((const UBYTE *)"Leak"),((const UBYTE *)"Leak"),((const UBYTE *)"Fuga"),((const UBYTE *)"Fuite"),((const UBYTE *)"Leaks"),((const UBYTE *)"Leak"),((const UBYTE *)"\277\304\235"),((
#line 160
const UBYTE *)"Leak"),((const UBYTE *)"Lek"),((const UBYTE *)"Lekk"),((const UBYTE *)"Leak"),((const UBYTE *)"Fuga"),((const UBYTE *)"\222\266\250\273\255\253"),((const UBYTE *)"Vuoto"),((const UBYTE *)"L\332ck"),((const UBYTE *)"Ka\325ak")};
const UBYTE *const huge cMSG_FiO2Mon[19] = {((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"
#line 161
),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2"),((const UBYTE *)"FiO2")};
const UBYTE *const huge cMSG_SpO2[19] = {((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"
#line 162
),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2")};
const UBYTE *const huge cMSG_StartVentil[19] = {((const UBYTE *)"\221\210|\200\003\354\263"),((const UBYTE *)"TRYK|FOR START"),((const UBYTE *)"ZUM START|DR\334CKEN"),((const UBYTE *)"PRESS|TO START VENTILATION"),((const UBYTE *)"PRESS|TO START VENTILATION"),((const UBYTE *)"PULSAR|PARA VENTILAR"),(
#line 163
(const UBYTE *)"APPUYER SUR POUR VENTILER"),((const UBYTE *)"\306\250\276\311\312\276 \254\250\273|\276\304\273\307\343\277 \273\276\307\250\311\303\305\313"),((const UBYTE *)"PREMERE|PER|VENTILARE"),((const UBYTE *)"\357\256_[\212\214|\222\354\203\210\201\207\202\177"),((const UBYTE *)"PRESS|TO START VENTILATION"
#line 163
),((const UBYTE *)"DRUK|OM VENTILATIE|TE STARTEN"),((const UBYTE *)"TRYKK|FOR START"),((const UBYTE *)"NACI\024NIJ ABY|ROZPOCZ\022\026|WENTYLACJ\027"),((const UBYTE *)"APERTAR|PARA VENTILAR"),((const UBYTE *)"\214\243\251\243\266\300|\247\256\303 \240\243\273\243\256\243|\245\250\240\266\253\256\303\271\253\253"
#line 163
),((const UBYTE *)"PAINA|K<YNNIST<"),((const UBYTE *)"TRYCK|F\326R START"),((const UBYTE *)"VENT\017LASYONA|BA\tLAMAK \017\307\017N|BASIN")};
const UBYTE *const huge cMSG_StopVentil[19] = {((const UBYTE *)"\221\210|\217\3263\317|\256\254\354\263"),((const UBYTE *)"HOLD|3 SEK|FOR STOP"),((const UBYTE *)"F\334R STOP|3 SEK DR\334CKEN|UND HALTEN"),((const UBYTE *)"KEEP|PRESSED FOR|3 SEC TO STOP"),((const UBYTE *)"KEEP|PRESSED FOR|3 SEC TO STOP"
#line 164
),((const UBYTE *)"MANTENER|3 SEGUNDOS|PARA PARAR"),((const UBYTE *)"MAINTENIR|3 SECONDES|POUR STOPPER"),((const UBYTE *)"\306\250\276\311\312\276 3 \275\276\313\312.|\254\250\273 \306\273\313\311\277|\273\276\307\250\311\303\305\313"),((const UBYTE *)"PREMERE PER|3 SECONDI|PER FERMARE"),((const 
#line 164
UBYTE *)"3\344|\354\203\210|\317\374\203\210\201\207\202\177"),((const UBYTE *)"KEEP|PRESSED FOR|3 SEC TO STOP"),((const UBYTE *)"DRUK 3 SEC|OM VENTILATIE|TE STOPPEN"),((const UBYTE *)"HOLD|3 SEK|FOR STOPP"),((const UBYTE *)"PRZYCI\024NIJ NA|3 SEK|ABY ZATRZYMA\026"),((const UBYTE *)"MANTER|3 SEGUNDOS|PARA PARAR"
#line 164
),((const UBYTE *)";\256\303 \306\264\266\243\240\306\245\255\253|\240\243\251\243\266\300 \253 \247\250\263\251\243\266\300|3 \264\250\255\267\240" "\247\277"),((const UBYTE *)"PYS<YT<|PID< ALHAALLA|3 SEK "),((const UBYTE *)"TRYCK|3 SEK|F\326R STOPP"),((const UBYTE *)"KAPATMAK \017\307\017N|3 SN|BASILI TUTUN"
#line 164
)};

const UBYTE *const huge cMSG_StopConfirmVentil[19] = {((const UBYTE *)"\221\210|\256\254\354\375"),((const UBYTE *)"TRYK|IGEN FOR AT|GODKENDE STOP"),((const UBYTE *)"STOP BEST<T.|TASTE ERNEUT|DR\334CKEN"),((const UBYTE *)"PRESS|AGAIN TO|CONFIRM STOP"),((const UBYTE *)"PRESS|AGAIN TO|CONFIRM STOP"),(
#line 166
(const UBYTE *)"PULSAR|DE NUEVO PARA|CONFIRMAR "),((const UBYTE *)"APPUYER|POUR|CONFIRMER"),((const UBYTE *)"\306\250\276\311\312\276 \275\250\311|\254\250\273 \306\273\313\311\277"),((const UBYTE *)"PREMERE|ANCORA|PER FERMARE"),((const UBYTE *)"\314\326\317\374\212\214|\222\354\203\215\204|(\337\006\325)"
#line 166
),((const UBYTE *)"PRESS|AGAIN TO|CONFIRM STOP"),((const UBYTE *)"DRUK|NOG EENS OM|TE BEVESTIGEN"),((const UBYTE *)"TRYKK IGJEN|FOR \305|BEKREFTE STOPP"),((const UBYTE *)"NACI\024NIJ|PONOWNIE|ABY ZATRZYMA\026"),((const UBYTE *)"PRIMIR|DE NOVO PARA|CONFIRMAR"),((const UBYTE *)"\214\243\251\243\266\300|\262\306\245\266\306\263\240\306|\247\256\303 \306\264\266\243\240\306\245\255\253"
#line 166
),((const UBYTE *)"PAINA|UUDELLEEN|VAHVISTAAKSESI"),((const UBYTE *)"TRYCK|F\326R ATT|BEKR<FTA STOPP"),((const UBYTE *)"KAPATMAYI|ONAYLAMAK \017\307\017N|TEKRAR BASIN")};
const UBYTE *const huge cMSG_VPreferences[19] = {((const UBYTE *)"#\232"),((const UBYTE *)"Praeferencer"),((const UBYTE *)"Grundeinstellungen"),((const UBYTE *)"Preferences"),((const UBYTE *)"Preferences"),((const UBYTE *)"Preferencias"),((const UBYTE *)"Pr\322f\322rences"),((const UBYTE *)"\306\024\377\027\371\374\360\026\366\371\025"
#line 167
),((const UBYTE *)"Preferiti"),((const UBYTE *)"\005\341"),((const UBYTE *)"Preferences"),((const UBYTE *)"Voorkeursinstellingen"),((const UBYTE *)"Preferanser"),((const UBYTE *)"Preferencje"),((const UBYTE *)"Preferencias"),((const UBYTE *)";\306\262\306\256\240\253\266\250\256\300\240\306"),((
#line 167
const UBYTE *)"Suositukset"),((const UBYTE *)"Preferenser"),((const UBYTE *)"Tercihler")};
const UBYTE *const huge cMSG_IsensHelperTxt[19] = {((const UBYTE *)"The lower the number, the more sensitive the trigger."),((const UBYTE *)"Jo lavere nummer, jo mere f\312lsom er udl\312seren."),((const UBYTE *)"Je niedriger der Wert, desto empfindlicher der Trigger."),((const UBYTE *)"The lower the number, the more sensitive the trigger"
#line 168
),((const UBYTE *)"The lower the number, the more sensitive the trigger"),((const UBYTE *)"A menor numero, mas sensible sera el trigger."),((const UBYTE *)"Plus nbre est petit, plus d\322clench resp est sensible."),((const UBYTE *)"\325\026\377 \023\371\377 \374\371\372\024\035\025 \362\024\371\370\374\035\025 \027\035\026\377 \023\371\377 \366\030\362\361\026"
#line 168
 "\370\367\027\367 \023\030\024\377\365\035\027\367\026\367."),((const UBYTE *)"Pi\311 piccolo \324 il numero, pi\311 sensibile \324 il trigger. "),((const UBYTE *)"\361\316\214\313\177\211\217, sensitivity\214\022\201\211\220."),((const UBYTE *)"The lower the number, the more sensitive the trigger."
#line 168
),((const UBYTE *)"Hoe lager het getal, hoe gevoeliger de trigger."),((const UBYTE *)"Jo lavere tall, desto mer sensitiv er triggeren."),((const UBYTE *)"Im ni\036sza cyfra, tym bardziej czu\033a jest czu\033o\025\034 wyzwalania."),((const UBYTE *)"Quanto mais baixo o numero, mais sensivel o disparo."
#line 168
),((const UBYTE *)"\226\250\257 \257\250\240\300\274\250 \273\253\264\256\306, \266\250\257 \273\267\245\264\266\245\253\266\250\256\300\240\250\250" " \266\263\253\246\246\250\263."),((const UBYTE *)"Mit\332 pienempi numero, sit\332 herkempi laukaisu. "),((const UBYTE *)"Ju l\332gre siffra, desto k\332nsligare trigger."
#line 168
),((const UBYTE *)"Say\b ne kadar k\304\325\304k olursa, tetik o kadar hassas olur.")};


const UBYTE *const huge cMSG_MiniTab[19] = {((const UBYTE *)"\237\b"),((const UBYTE *)"Min "),((const UBYTE *)"Min"),((const UBYTE *)"Min"),((const UBYTE *)"Low"),((const UBYTE *)"Mini"),((const UBYTE *)"Mini"),((const UBYTE *)"\276\373\362\022."),((const UBYTE *)"Min"),((const UBYTE *)"\306\034"),(
#line 171
(const UBYTE *)"Min"),((const UBYTE *)"Min"),((const UBYTE *)"Min"),((const UBYTE *)"Min"),((const UBYTE *)"Min"),((const UBYTE *)"\213\253\240"),((const UBYTE *)"Min"),((const UBYTE *)"Mini"),((const UBYTE *)"Min")};
const UBYTE *const huge cMSG_PatientTab[19] = {((const UBYTE *)"\203_"),((const UBYTE *)"Patient"),((const UBYTE *)"Patient"),((const UBYTE *)"Current"),((const UBYTE *)"Current"),((const UBYTE *)"Actual"),((const UBYTE *)"Patient"),((const UBYTE *)"\312\024\357\022\034\375"),((const UBYTE *)"Pazient"
#line 172
),((const UBYTE *)" \311\341\316"),((const UBYTE *)"Current"),((const UBYTE *)"Huidig"),((const UBYTE *)"Pasient"),((const UBYTE *)"Pomiar"),((const UBYTE *)"Atual"),((const UBYTE *)"\216\243\263\243\257"),((const UBYTE *)"Potilas"),((const UBYTE *)"Patient"),((const UBYTE *)"Aktif ")};
const UBYTE *const huge cMSG_MaxiTab[19] = {((const UBYTE *)"\237\f"),((const UBYTE *)"Max  "),((const UBYTE *)"Max"),((const UBYTE *)"Max"),((const UBYTE *)"High"),((const UBYTE *)"Maxi"),((const UBYTE *)" Maxi"),((const UBYTE *)"\303\366\364."),((const UBYTE *)"Max"),((const UBYTE *)"\305\034"),((
#line 173
const UBYTE *)"Max"),((const UBYTE *)"Max"),((const UBYTE *)"Max"),((const UBYTE *)"Max"),((const UBYTE *)"Max"),((const UBYTE *)"\213\243\255\264"),((const UBYTE *)"Max"),((const UBYTE *)"Maxi"),((const UBYTE *)"Max")};
const UBYTE *const huge cMSG_PiMbar[19] = {((const UBYTE *)"PIP"),((const UBYTE *)"IPAP"),((const UBYTE *)"PIP"),((const UBYTE *)"PIP"),((const UBYTE *)"PIP"),((const UBYTE *)"PIP"),((const UBYTE *)"Pi"),((const UBYTE *)"PIP"),((const UBYTE *)"PIP"),((const UBYTE *)"PIP"),((const UBYTE *)"PIP"),((
#line 174
const UBYTE *)"IPAP"),((const UBYTE *)"IPAP"),((const UBYTE *)"PIP"),((const UBYTE *)"PIP"),((const UBYTE *)"P \262\253\255"),((const UBYTE *)"IPAP"),((const UBYTE *)"IPAP"),((const UBYTE *)"PIP")};
const UBYTE *const huge cMSG_VteMl[19] = {((const UBYTE *)"Vte ml"),((const UBYTE *)"VTE mL"),((const UBYTE *)"Vte ml"),((const UBYTE *)"VtE mL"),((const UBYTE *)"VTE mL"),((const UBYTE *)"VTE ml"),((const UBYTE *)"Vte mL"),((const UBYTE *)"VtE mL"),((const UBYTE *)"Vt E mL"),((const UBYTE *)"VTE mL"
#line 175
),((const UBYTE *)"VTE mL"),((const UBYTE *)"VTE mL"),((const UBYTE *)"VTE mL"),((const UBYTE *)"VTE mL"),((const UBYTE *)"VTE mL"),((const UBYTE *)"V \245\277\247 \257\256"),((const UBYTE *)"VTE (ml)"),((const UBYTE *)"VTE mL"),((const UBYTE *)"VTE mL")};
const UBYTE *const huge cMSG_VmLpm[19] = {((const UBYTE *)"M.Vol l"),((const UBYTE *)"M.Vol L"),((const UBYTE *)"M.Vol L"),((const UBYTE *)"M.Vol L"),((const UBYTE *)"Min.Vol L"),((const UBYTE *)"Vol M L"),((const UBYTE *)"Vm L"),((const UBYTE *)"M.Vol L"),((const UBYTE *)"Vol Min L"),((const UBYTE 
#line 176
*)"M.Vol L"),((const UBYTE *)"M.Vol L"),((const UBYTE *)"AMV L"),((const UBYTE *)"M.Vol L"),((const UBYTE *)"MVI L"),((const UBYTE *)"Vol M L"),((const UBYTE *)"M.Vol \256"),((const UBYTE *)"Min Vol (l)"),((const UBYTE *)"M.Vol L"),((const UBYTE *)"D Hac L")};
const UBYTE *const huge cMSG_FrCMin[19] = {((const UBYTE *)"Rtot bpm"),((const UBYTE *)"Fr /min"),((const UBYTE *)"F AZ/min"),((const UBYTE *)"Rtot bpm"),((const UBYTE *)"R tot bpm"),((const UBYTE *)"Fr c/min"),((const UBYTE *)"Fr c/min"),((const UBYTE *)"Rtot bpm"),((const UBYTE *)"Fr bpm"),((const
#line 177
 UBYTE *)"\333\361"),((const UBYTE *)"Rtot bpm"),((const UBYTE *)"Freq bpm"),((const UBYTE *)"Fr /min"),((const UBYTE *)"RRtot bpm"),((const UBYTE *)"Fr c/min"),((const UBYTE *)"\226; /\257\253\240"),((const UBYTE *)"Fr /min"),((const UBYTE *)"Fr /min"),((const UBYTE *)"Rtot n/dak")};
const UBYTE *const huge cMSG_TiS[19] = {((const UBYTE *)"\016\263\234\365"),((const UBYTE *)"I Time s"),((const UBYTE *)"Ti s"),((const UBYTE *)"I Time s"),((const UBYTE *)"I Time s"),((const UBYTE *)"Ti s"),((const UBYTE *)"Ti s"),((const UBYTE *)"I Time s"),((const UBYTE *)"T Insp"),((const UBYTE 
#line 178
*)"I Time s"),((const UBYTE *)"I Time s"),((const UBYTE *)"Ti sec"),((const UBYTE *)"I Tid s"),((const UBYTE *)"Czas Ti s"),((const UBYTE *)"Ti s"),((const UBYTE *)"T \245\247 \264\250\255"),((const UBYTE *)"I aika s"),((const UBYTE *)"I tid s"),((const UBYTE *)"I Zaman s")};
const UBYTE *const huge cMSG_VtiMl[19] = {((const UBYTE *)"Vti ml"),((const UBYTE *)"VTI mL"),((const UBYTE *)"Vti ml"),((const UBYTE *)"VTI mL"),((const UBYTE *)"VTI mL"),((const UBYTE *)"VTI ml"),((const UBYTE *)"Vti mL"),((const UBYTE *)"VtI mL"),((const UBYTE *)"VtI mL"),((const UBYTE *)"VTI mL"
#line 179
),((const UBYTE *)"VTI mL"),((const UBYTE *)"VTI mL"),((const UBYTE *)"VTI mL"),((const UBYTE *)"VTI mL"),((const UBYTE *)"VTI mL"),((const UBYTE *)"V \245\247 \257\256"),((const UBYTE *)"VTI (ml)"),((const UBYTE *)"VTI mL"),((const UBYTE *)"VTI mL")};
const UBYTE *const huge cMSG_FiO2Pc[19] = {((const UBYTE *)"FiO2 %"),((const UBYTE *)"FiO2 %"),((const UBYTE *)"FiO2 %"),((const UBYTE *)"FiO2 %"),((const UBYTE *)"FiO2 %"),((const UBYTE *)"FiO2 %"),((const UBYTE *)"FiO2 %"),((const UBYTE *)"FiO2 %"),((const UBYTE *)"FiO2 %"),((const UBYTE *)"FiO2 %"
#line 180
),((const UBYTE *)"FiO2 %"),((const UBYTE *)"FiO2 %"),((const UBYTE *)"FiO2 %"),((const UBYTE *)"FiO2 %"),((const UBYTE *)"FiO2 %"),((const UBYTE *)"FiO2 %"),((const UBYTE *)"FiO2 %"),((const UBYTE *)"FiO2 %"),((const UBYTE *)"FiO2 %")};
const UBYTE *const huge cMSG_ExhalationPressureMon[19] = {((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"EPAP"),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"Pe"),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((
#line 181
const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP")};
const UBYTE *const huge cMSG_SpO2Pc[19] = {((const UBYTE *)"spO2 %"),((const UBYTE *)"SpO2 %"),((const UBYTE *)"SpO2 %"),((const UBYTE *)"SpO2 %"),((const UBYTE *)"SpO2 %"),((const UBYTE *)"SpO2 %"),((const UBYTE *)"SpO2 %"),((const UBYTE *)"SpO2 %"),((const UBYTE *)"SpO2 %"),((const UBYTE *)"SpO2 %"
#line 182
),((const UBYTE *)"SpO2 %"),((const UBYTE *)"SpO2 %"),((const UBYTE *)"SpO2 %"),((const UBYTE *)"SpO2 %"),((const UBYTE *)"SpO2 %"),((const UBYTE *)"SpO2 %"),((const UBYTE *)"SpO2 %"),((const UBYTE *)"SpO2 %"),((const UBYTE *)"SpO2 %")};
const UBYTE *const huge cMSG_FuiteParam[19] = {((const UBYTE *)"\277\263\360"),((const UBYTE *)"Leak l/min"),((const UBYTE *)"Leck l/min"),((const UBYTE *)"Leak l/min"),((const UBYTE *)"Leak l/min"),((const UBYTE *)"Fuga l/min"),((const UBYTE *)"Fuite l/min"),((const UBYTE *)"Leak l/min"),((const 
#line 183
UBYTE *)"Leak l/min"),((const UBYTE *)"\277\304\235/min"),((const UBYTE *)"Leak l/min"),((const UBYTE *)"Lek. lpm"),((const UBYTE *)"Lekk l/min"),((const UBYTE *)"Leak l/min"),((const UBYTE *)"Fuga l/min"),((const UBYTE *)"\222\266\250\273 \256/\257"),((const UBYTE *)"Vuoto l/s"),((const UBYTE *)"L\332ck I/min"
#line 183
),((const UBYTE *)"Ka\325ak l/d")};
const UBYTE *const huge cMSG_MeanAirwayPressureMon[19] = {((const UBYTE *)"MAP"),((const UBYTE *)"MAP"),((const UBYTE *)"MAP"),((const UBYTE *)"MAP"),((const UBYTE *)"MAP"),((const UBYTE *)"Pres media"),((const UBYTE *)"MAP"),((const UBYTE *)"MAP"),((const UBYTE *)"MAP"),((const UBYTE *)"MAP"),((
#line 184
const UBYTE *)"MAP"),((const UBYTE *)"MAP"),((const UBYTE *)"MAP"),((const UBYTE *)"MAP"),((const UBYTE *)"Press media"),((const UBYTE *)"P \264\263\250\247"),((const UBYTE *)"MAP"),((const UBYTE *)"MAP"),((const UBYTE *)"MAP")};
const UBYTE *const huge cMSG_HistoAlarm[19] = {((const UBYTE *)"\216\336\340\204"),((const UBYTE *)"Gemte alarmer"),((const UBYTE *)"Alarmprotokoll"),((const UBYTE *)"Alarms Logs"),((const UBYTE *)"Alarm Log"),((const UBYTE *)"Historico Alarmas"),((const UBYTE *)"Historique Alarmes"),((const UBYTE *
#line 185
)"\277\374\366\024. \311\030\375\362\364\366\024\374\037\375"),((const UBYTE *)"Memoria Allarmi"),((const UBYTE *)"\224\276\304\270\343\376"),((const UBYTE *)"Alarms Logs"),((const UBYTE *)"Alarmhistoriek"),((const UBYTE *)"Alarm-minne"),((const UBYTE *)"Rejestr Alarm\314w"),((const UBYTE *)"Historico Alarmes"
#line 185
),((const UBYTE *)"\205\267\263\240\243\256 \266\263\250\245\306\246"),((const UBYTE *)"H\332lytykset"),((const UBYTE *)"Larm logg"),((const UBYTE *)"Alarm Kay\btlar\b")};
const UBYTE *const huge cMSG_switchMode[19] = {((const UBYTE *)"\315\005\251\201"),((const UBYTE *)"Skift Modus"),((const UBYTE *)"Modus \332ndern"),((const UBYTE *)"Accept Mode"),((const UBYTE *)"Accept Mode"),((const UBYTE *)"Cambiar modo"),((const UBYTE *)"Changer Mode"),((const UBYTE *)"\273\023\377\365\377\022\360"
#line 186
),((const UBYTE *)"Camb Modalit\333"),((const UBYTE *)"\272\304\255\335\365"),((const UBYTE *)"Accept Mode"),((const UBYTE *)"Accepteer modus"),((const UBYTE *)"Aksepter modus"),((const UBYTE *)"Zaakceptuj Tryb"),((const UBYTE *)"Mudar modo"),((const UBYTE *)"\201\245\306\247"),((const UBYTE *)"Hyv\332ksy"
#line 186
),((const UBYTE *)"<ndra Mode"),((const UBYTE *)"Onay")};
const UBYTE *const huge cMSG_CalibQExpTab[19] = {((const UBYTE *)"\246\255\021\263\271\360"),((const UBYTE *)"Kalibrering Eksp Flow \?"),((const UBYTE *)"Kalibration Exsp. Flow\?"),((const UBYTE *)"Calibration Exp. Flow \?"),((const UBYTE *)"Calibration Exp. Flow \?"),((const UBYTE *)"Calibracion Flujo Esp\?"
#line 187
),((const UBYTE *)"Calibration d\322bit Exp \?"),((const UBYTE *)"\274\362\370\374\377\375\035\374\367\026\367 \276\372\023\375. \307\377\360\025;"),((const UBYTE *)"Calibrazione Flusso Esp \?"),((const UBYTE *)"\332\256Flow Cal\222\342\362 \?"),((const UBYTE *)"Calibration Exp. Flow \?"),((const 
#line 187
UBYTE *)"Kalibratie exp Flow\?"),((const UBYTE *)"Kalibrere eksp flow\?"),((const UBYTE *)"Kalibracja wydech sensora przep\033ywu\?"),((const UBYTE *)"Calibra\325ao| Fluxo Exp.\?"),((const UBYTE *)"@\243\256\253\244\263\306\245\243\266\300 \262\306\266\306\255 \245\277\247\306\270\243\?"),((const 
#line 187
UBYTE *)"Kalibroi uloshengitys \?"),((const UBYTE *)"Kalibrering Exp fl\313de\?"),((const UBYTE *)"Ekp Ak\b\016 Kalibrasyonu")};
const UBYTE *const huge cMSG_CalibQExpProcessing[19] = {((const UBYTE *)"\021\263\246\255\352\334Y"),((const UBYTE *)"Eksp kalib|i proces..."),((const UBYTE *)"Exsp. Kalib.|l\332uft..."),((const UBYTE *)"Exp. calib.|Processing"),((const UBYTE *)"Exp. calib.|Processing"),((const UBYTE *)"Calibr.| Flujo Esp en curso"
#line 188
),((const UBYTE *)"Calib d\322bit Exp|en cours..."),((const UBYTE *)"\274\362\370\374\377\375\035\374\367\026\367 \276\372\023\375. \307\377\360\025|\026\366 \366\376\357\373\371\376\367..."),((const UBYTE *)"Calibrazione Flusso|Esp in corso..."),((const UBYTE *)"\332\256Flow Cal|\342\362\310"),((
#line 188
const UBYTE *)"Exp. calib.|Processing"),((const UBYTE *)"Exp Kalibratie|in werking..."),((const UBYTE *)"Eksp kal|p\331g\331r..."),((const UBYTE *)"Kalibracja wydech sensora w trakcie..."),((const UBYTE *)"Calibr.| Fluxo Exp. em curso"),((const UBYTE *)"\207\247\250\266 \255\243\256\253\244\263\306\245\255\243|\262\306\266\306\255\243 \245\277\247\306\270\243"
#line 188
),((const UBYTE *)"Uloshengitys kalibroituu..."),((const UBYTE *)"Exp kalib|p\331g\331r..."),((const UBYTE *)"Ekp Kalib / \017\016lemde")};
const UBYTE *const huge cMSG_CalibFiO2Tab[19] = {((const UBYTE *)"\246\255\016G\264\273\177"),((const UBYTE *)"FiO2 Kalibrering \?"),((const UBYTE *)"Kalibration FiO2 \?"),((const UBYTE *)"FiO2 Calibration \?"),((const UBYTE *)"FiO2 Calibration \?"),((const UBYTE *)"Calibracion FiO2 \?"),((const 
#line 189
UBYTE *)"Calibration FiO2 \?"),((const UBYTE *)"\274\362\370\374\377\375\035\374\367\026\367|\273\371\026\370\367\027\360\024\362 FIO2;"),((const UBYTE *)"Calibrazione FiO2 \?"),((const UBYTE *)"FiO2 Cal \222\342\362\?"),((const UBYTE *)"FiO2 Calibration \?"),((const UBYTE *)"Kalibratie FiO2\?"),((
#line 189
const UBYTE *)"FiO2 kalibrering\?"),((const UBYTE *)"Kalibracja sensora tlenu FIO2\?"),((const UBYTE *)"Calibra\325ao FiO2 \?"),((const UBYTE *)"\215\266\255\243\256\253\244\263\306\245\243\266\300 FiO2 \?"),((const UBYTE *)"Kalibroi FiO2 \?"),((const UBYTE *)"FiO2 Kalibrering \?"),((const UBYTE *)"FiO2 Kalibrasyonu\?"
#line 189
)};
const UBYTE *const huge cMSG_CalibFiO2Processing[19] = {((const UBYTE *)"\016G\264\273\177\246\255\352\334Y"),((const UBYTE *)"FiO2 kalib|i proces..."),((const UBYTE *)"FiO2 Kalib.|l\332uft..."),((const UBYTE *)"FiO2 calib|Processing..."),((const UBYTE *)"FiO2 calib.|Processing..."),((const UBYTE *)"Calibr.| FiO2 en curso"
#line 190
),((const UBYTE *)"Calib FiO2|en cours..."),((const UBYTE *)"\274\362\370\374\377\375\035\374\367\026\367 \273\371\026\370\367\027\360\024\362|FIO2 \026\366 \366\376\357\373\371\376\367..."),((const UBYTE *)"Calibrazione FiO2 in corso..."),((const UBYTE *)"FiO2 cal\342\362\310"),((const UBYTE *)"FiO2 calib|Processing..."
#line 190
),((const UBYTE *)"FiO2 kalibratie|in werking..."),((const UBYTE *)"FiO2 kalibrering|p\331g\331r..."),((const UBYTE *)"Kalibracja sensora FIO2 w trakcie..."),((const UBYTE *)"Calibr.| FiO2 em curso"),((const UBYTE *)"\207\247\250\266 \255\243\256\253\244\263\306\245\255\243|FiO2"),((const UBYTE *)"FiO2 kalibroituu..."
#line 190
),((const UBYTE *)"FiO2 Kalibrering|p\331g\331r..."),((const UBYTE *)"FiO2 Kalib / \017\016lemde")};


const UBYTE *const huge cMSG_SettingBlock[19] = {((const UBYTE *)"\341\005\370^"),((const UBYTE *)"Indstilling blokeret"),((const UBYTE *)"Einstell. begrenzt"),((const UBYTE *)"Setting limited by"),((const UBYTE *)"Setting limited by"),((const UBYTE *)"Ajuste limitado por"),((const UBYTE *)"R\322glage bloqu\322 par"
#line 193
),((const UBYTE *)"\306\366\024\371\377\024\371\026\374\035\025 \362\023\035"),((const UBYTE *)"Impost Limit da"),((const UBYTE *)"Setting limited by"),((const UBYTE *)"Setting limited by"),((const UBYTE *)"Instel. begrensd door"),((const UBYTE *)"Inst begrenses av"),((const UBYTE *)"Ograniczono przez"
#line 193
),((const UBYTE *)"Ajuste limitado por"),((const UBYTE *)"\214\243\264\266\263\306\254\255\243 \306\246\263\243\240\253\273\250\240\243"),((const UBYTE *)"Asetus rajoitettu"),((const UBYTE *)"Inst begr\332nsas av"),((const UBYTE *)"Limitli Ayarlar")};
const UBYTE *const huge cMSG_BlockedSetting[25][19] = {{((const UBYTE *)"\016\263\t\210,\370"),((const UBYTE *)"IPAP Min"),((const UBYTE *)"IPAP Min"),((const UBYTE *)"PIP Min"),((const UBYTE *)"Low PIP"),((const UBYTE *)"PIP Min"),((const UBYTE *)"Pi Mini"),((const UBYTE *)"PIP Min"),((const UBYTE 
#line 194
*)"P Min"),((const UBYTE *)"P Min"),((const UBYTE *)"PIP Min"),((const UBYTE *)"IPAP min"),((const UBYTE *)"IPAP Min"),((const UBYTE *)"PIP Min"),((const UBYTE *)"PIP Min"),((const UBYTE *)"P\262\253\255 \257\253\240"),((const UBYTE *)"IPAP Minimi"),((const UBYTE *)"IPAP Min"),((const UBYTE *)"PIP Min"
#line 194
)},{((const UBYTE *)"\016\263\t\210*\370"),((const UBYTE *)"IPAP Max"),((const UBYTE *)"IPAP Max"),((const UBYTE *)"PIP Max"),((const UBYTE *)"High PIP"),((const UBYTE *)"PIP Max"),((const UBYTE *)"Pi Maxi"),((const UBYTE *)"PIP Max"),((const UBYTE *)"P Max"),((const UBYTE *)"P Max"),((const UBYTE *
#line 194
)"PIP Max"),((const UBYTE *)"IPAP max"),((const UBYTE *)"IPAP Max"),((const UBYTE *)"PIP Max"),((const UBYTE *)"PIP Max"),((const UBYTE *)"P\262\253\255 \257\243\255\264"),((const UBYTE *)"IPAP Maksimi"),((const UBYTE *)"IPAP Max"),((const UBYTE *)"PIP Max")},{((const UBYTE *)"EPAP"),((const UBYTE *
#line 194
)"EPAP"),((const UBYTE *)"EPAP"),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"Pe"),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"EPAP"),((const UBYTE *)"EPAP"),((const UBYTE *)"Ci\025nienie EPAP"
#line 194
),((const UBYTE *)"PEEP"),((const UBYTE *)"PEEP"),((const UBYTE *)"EPAP"),((const UBYTE *)"EPAP"),((const UBYTE *)"EPAP")},{((const UBYTE *)"VT"),((const UBYTE *)"VT"),((const UBYTE *)"Vt"),((const UBYTE *)"Vt"),((const UBYTE *)"Vt"),((const UBYTE *)"VT"),((const UBYTE *)"Vt"),((const UBYTE *)"Vt"),
#line 194
((const UBYTE *)"VT"),((const UBYTE *)"VT"),((const UBYTE *)"Vt"),((const UBYTE *)"VT"),((const UBYTE *)"VT"),((const UBYTE *)"Obj\030to\025\034 VT"),((const UBYTE *)"VT"),((const UBYTE *)"Vt"),((const UBYTE *)"VT"),((const UBYTE *)"VT"),((const UBYTE *)"VT")},{((const UBYTE *)"\016\263\234\365"),((
#line 194
const UBYTE *)"Insp Tid"),((const UBYTE *)"Insp.-zeit"),((const UBYTE *)"Insp Time"),((const UBYTE *)"Insp Time"),((const UBYTE *)"T. Insp"),((const UBYTE *)"Ti Control"),((const UBYTE *)"Insp Time"),((const UBYTE *)"Tempo Insp"),((const UBYTE *)"\331\256\364\f"),((const UBYTE *)"Insp Time"),((const
#line 194
 UBYTE *)"Insp Tijd"),((const UBYTE *)"Insp Time"),((const UBYTE *)"Insp Time"),((const UBYTE *)"Tempo Insp"),((const UBYTE *)"T \245\247\306\270\243"),((const UBYTE *)"Sis\332\332nhengitysaika"),((const UBYTE *)"Insp Time"),((const UBYTE *)"Insp Time")},{((const UBYTE *)"\021\016\374\303"),((const 
#line 194
UBYTE *)"Fr"),((const UBYTE *)"Af"),((const UBYTE *)"Rate"),((const UBYTE *)"Rate"),((const UBYTE *)"Fr"),((const UBYTE *)"Fr"),((const UBYTE *)"Rate"),((const UBYTE *)"Frequenza"),((const UBYTE *)"\333\361"),((const UBYTE *)"Rate"),((const UBYTE *)"Freq"),((const UBYTE *)"Rate"),((const UBYTE *)"Cz\030sto\025\034 RR"
#line 194
),((const UBYTE *)"Fr"),((const UBYTE *)"\226;"),((const UBYTE *)"Taajuus"),((const UBYTE *)"Fr"),((const UBYTE *)"Frekans")},{((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"
#line 194
),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi"),((const UBYTE *)"Pi")},{((const UBYTE *)"\016\263\300\263\360,\370"),((const 
#line 194
UBYTE *)"VTI Min"),((const UBYTE *)"Vti Min"),((const UBYTE *)"VtI Min"),((const UBYTE *)"Low VTI"),((const UBYTE *)"VTI Min"),((const UBYTE *)"Vti Mini"),((const UBYTE *)"VtI Min"),((const UBYTE *)"Vt I Min"),((const UBYTE *)"VTI Min"),((const UBYTE *)"VtI Min"),((const UBYTE *)"VTI min"),((const 
#line 194
UBYTE *)"VTI Min"),((const UBYTE *)"Obj\030to\025\034 VTI Min"),((const UBYTE *)"VTI Min"),((const UBYTE *)"V \245\247\306\270\243 \257\253\240"),((const UBYTE *)"VTI Minimi"),((const UBYTE *)"VTI Min"),((const UBYTE *)"VTI Min")},{((const UBYTE *)"\016\263\300\263\360*\370"),((const UBYTE *)"VTI Max"
#line 194
),((const UBYTE *)"Vti Max"),((const UBYTE *)"VtI Max"),((const UBYTE *)"High VTI"),((const UBYTE *)"VTI Max"),((const UBYTE *)"Vti Maxi"),((const UBYTE *)"VtI Max"),((const UBYTE *)"Vt I Max"),((const UBYTE *)"VTI Max"),((const UBYTE *)"VtI Max"),((const UBYTE *)"VTI max"),((const UBYTE *)"VTI Max"
#line 194
),((const UBYTE *)"Obj\030to\025\034 VTI Max"),((const UBYTE *)"VTI Max"),((const UBYTE *)"V \245\247\306\270\243 \257\243\255\264"),((const UBYTE *)"VTI Mksimi"),((const UBYTE *)"VTI Max"),((const UBYTE *)"Vt\b Max")},{((const UBYTE *)"\021\263\300\263\360,\370"),((const UBYTE *)"VTE Min"),((const 
#line 194
UBYTE *)"Vte Min"),((const UBYTE *)"VtE Min"),((const UBYTE *)"Low VTE"),((const UBYTE *)"VTE Min"),((const UBYTE *)"Vte Mini"),((const UBYTE *)"VtE Min"),((const UBYTE *)"Vt E Min"),((const UBYTE *)"VTE Min"),((const UBYTE *)"VtE Min"),((const UBYTE *)"VTE min"),((const UBYTE *)"VTE Min"),((const 
#line 194
UBYTE *)"Obj\030to\025\034 VTE Min"),((const UBYTE *)"VTE Min"),((const UBYTE *)"V \245\277\247 \257\253\240"),((const UBYTE *)"VTE Minimi"),((const UBYTE *)"VTE Min"),((const UBYTE *)"VTE Min")},{((const UBYTE *)"\021\263\300\263\360*\370"),((const UBYTE *)"VTE Max"),((const UBYTE *)"Vte Max"),((
#line 194
const UBYTE *)"VtE Max"),((const UBYTE *)"High VTE"),((const UBYTE *)"VTE Max"),((const UBYTE *)"Vte Maxi"),((const UBYTE *)"VtE Max"),((const UBYTE *)"Vt E Max"),((const UBYTE *)"VTE Max"),((const UBYTE *)"VtE Max"),((const UBYTE *)"VTE max"),((const UBYTE *)"VTE Max"),((const UBYTE *)"Obj\030to\025\034 VTE Max"
#line 194
),((const UBYTE *)"VTE Max"),((const UBYTE *)"V \245\277\247 \257\243\255\264"),((const UBYTE *)"VTE Maksimi"),((const UBYTE *)"VTE Max"),((const UBYTE *)"VTE Max")},{((const UBYTE *)"P Support"),((const UBYTE *)"P Support"),((const UBYTE *)"IPAP support"),((const UBYTE *)"P Support"),((const UBYTE 
#line 194
*)"P Support"),((const UBYTE *)"P Soporte"),((const UBYTE *)"Support P"),((const UBYTE *)"P Support"),((const UBYTE *)"P Supporto"),((const UBYTE *)"\240\267\304\254\334"),((const UBYTE *)"P Support"),((const UBYTE *)"P Support"),((const UBYTE *)"P Support"),((const UBYTE *)"P Support"),((const 
#line 194
UBYTE *)"P Suporte"),((const UBYTE *)"P Support"),((const UBYTE *)"Painetuki"),((const UBYTE *)"P Support"),((const UBYTE *)"P Support")},{((const UBYTE *)"\016\263\234\365,\370"),((const UBYTE *)"ITime Min"),((const UBYTE *)"Ti Min"),((const UBYTE *)"ITime Min"),((const UBYTE *)"Low Itime"),((const
#line 194
 UBYTE *)"Ti Min"),((const UBYTE *)"Ti Mini"),((const UBYTE *)"ITime Min"),((const UBYTE *)"Tempo Insp Min"),((const UBYTE *)"ITime Min"),((const UBYTE *)"ITime Min"),((const UBYTE *)"Insp. tijd min"),((const UBYTE *)"I Tid Min"),((const UBYTE *)"Czas Ti Min"),((const UBYTE *)"Ti Min"),((const UBYTE
#line 194
 *)"T \245\247 \257\253\240"),((const UBYTE *)"Minimi sis\332\332nhengitysaika"),((const UBYTE *)"I tid min"),((const UBYTE *)"I Zaman\b Min")},{((const UBYTE *)"\016\263\234\365*\370"),((const UBYTE *)"ITime Max"),((const UBYTE *)"Ti Max"),((const UBYTE *)"ITime Max"),((const UBYTE *)"Max Itime"),(
#line 194
(const UBYTE *)"Ti Max"),((const UBYTE *)"Ti Maxi"),((const UBYTE *)"ITime Max"),((const UBYTE *)"Tempo Insp Max"),((const UBYTE *)"ITime Max"),((const UBYTE *)"ITime Max"),((const UBYTE *)"Insp. tijd max"),((const UBYTE *)"I Tid Max"),((const UBYTE *)"Czas Ti Max"),((const UBYTE *)"Ti Max"),((const
#line 194
 UBYTE *)"T \245\247 \257\243\255\264"),((const UBYTE *)"Maksimi sis\332\332nhengitysaika"),((const UBYTE *)"I tid max"),((const UBYTE *)"I Zaman\b Max")},{((const UBYTE *)"SpO2,\370"),((const UBYTE *)"SpO2 mini"),((const UBYTE *)"SpO2 min"),((const UBYTE *)"SpO2 min"),((const UBYTE *)"Low SpO2"),((
#line 194
const UBYTE *)"SpO2 mini"),((const UBYTE *)"SpO2 mini"),((const UBYTE *)"SpO2 min"),((const UBYTE *)"SpO2 mini"),((const UBYTE *)"SpO2 Min"),((const UBYTE *)"SpO2 min"),((const UBYTE *)"SpO2 min"),((const UBYTE *)"SpO2 min"),((const UBYTE *)"SpO2 Min"),((const UBYTE *)"SpO2 mini"),((const UBYTE *)"SpO2 min"
#line 194
),((const UBYTE *)"SpO2 minimi"),((const UBYTE *)"SpO2 mini"),((const UBYTE *)"SpO2 mini")},{((const UBYTE *)"SpO2*\370"),((const UBYTE *)"SpO2 maxi"),((const UBYTE *)"SpO2 max"),((const UBYTE *)"SpO2 max"),((const UBYTE *)"High SpO2"),((const UBYTE *)"SpO2 maxi"),((const UBYTE *)"SpO2 maxi"),((
#line 194
const UBYTE *)"SpO2 max"),((const UBYTE *)"SpO2 maxi"),((const UBYTE *)"SpO2 Max"),((const UBYTE *)"SpO2 max"),((const UBYTE *)"SpO2 max"),((const UBYTE *)"SpO2 max"),((const UBYTE *)"SpO2 Max"),((const UBYTE *)"SpO2 maxi"),((const UBYTE *)"SpO2 max"),((const UBYTE *)"SpO2 maksimi"),((const UBYTE *)"SpO2 maxi"
#line 194
),((const UBYTE *)"SpO2 maxi")},{((const UBYTE *)"\016\263\335$"),((const UBYTE *)"Insp trigg"),((const UBYTE *)"Trigg I"),((const UBYTE *)"I Sens"),((const UBYTE *)"Insp Sens"),((const UBYTE *)"Trigg I"),((const UBYTE *)"Trigg I"),((const UBYTE *)"I Sens"),((const UBYTE *)"Trigg Insp"),((const 
#line 194
UBYTE *)"\331\256Sens"),((const UBYTE *)"I Sens"),((const UBYTE *)"Trigg Insp."),((const UBYTE *)"Insp Trigg"),((const UBYTE *)"Wyzwalanie I"),((const UBYTE *)"Trigg I"),((const UBYTE *)"\221\263\253\246 \245\247\306\270\243"),((const UBYTE *)"Sis\332\332nhengityksen triggeri"),((const UBYTE *)"Insp trigg"
#line 194
),((const UBYTE *)"Tetik I")},{((const UBYTE *)"\034\211"),((const UBYTE *)"Suk"),((const UBYTE *)"Seufzer"),((const UBYTE *)"Sigh"),((const UBYTE *)"Sigh"),((const UBYTE *)"Suspiro"),((const UBYTE *)"Soupir"),((const UBYTE *)"Sigh"),((const UBYTE *)"Sigh"),((const UBYTE *)"\302\332\331"),((const 
#line 194
UBYTE *)"Sigh"),((const UBYTE *)"Zucht"),((const UBYTE *)"Sukk"),((const UBYTE *)"Westchnienia"),((const UBYTE *)"Suspiro"),((const UBYTE *)"\201\252\247\306\270"),((const UBYTE *)"Huokaisu"),((const UBYTE *)"Suck"),((const UBYTE *)"Sigh")},{((const UBYTE *)"\312\245\300\263\360"),((const UBYTE *)"Vt garanti"
#line 194
),((const UBYTE *)"Ziel Vt"),((const UBYTE *)"Vt Target"),((const UBYTE *)"Vt Target"),((const UBYTE *)"Vt Target"),((const UBYTE *)"Vt Cible"),((const UBYTE *)"Vt Target"),((const UBYTE *)"Vt Target"),((const UBYTE *)"\327\372Vt"),((const UBYTE *)"Vt Target"),((const UBYTE *)"Vt Target"),((const 
#line 194
UBYTE *)"Vt garanti"),((const UBYTE *)"Docelow\023 VT "),((const UBYTE *)"Vt Target"),((const UBYTE *)"Vt \271\250\256\250\245\306\254"),((const UBYTE *)"Tav.Tilavuus"),((const UBYTE *)"Vt garanti"),((const UBYTE *)"Hedef Vt")},{((const UBYTE *)"\321\211\354\263"),((const UBYTE *)"Apnea"),((const 
#line 194
UBYTE *)"Apnoe"),((const UBYTE *)"Apnea"),((const UBYTE *)"Apnea"),((const UBYTE *)"Apnea"),((const UBYTE *)"Apn\322e"),((const UBYTE *)"Apnea"),((const UBYTE *)"Apnea"),((const UBYTE *)"\322\332\331"),((const UBYTE *)"Apnea"),((const UBYTE *)"Apneu"),((const UBYTE *)"Apne"),((const UBYTE *)"Czas Apnea Ta"
#line 194
),((const UBYTE *)"Apneia"),((const UBYTE *)"\177\262\240\306\301"),((const UBYTE *)"Apnea"),((const UBYTE *)"Apne"),((const UBYTE *)"Apne")},{((const UBYTE *)"high FiO2"),((const UBYTE *)"High FiO2"),((const UBYTE *)"High FiO2"),((const UBYTE *)"High FiO2"),((const UBYTE *)"High FiO2"),((const 
#line 194
UBYTE *)"FiO2 Max"),((const UBYTE *)"High FiO2"),((const UBYTE *)"High FiO2"),((const UBYTE *)"High FiO2"),((const UBYTE *)"High FiO2"),((const UBYTE *)"High FiO2"),((const UBYTE *)"High FiO2"),((const UBYTE *)"H\312y FiO2"),((const UBYTE *)"High FiO2"),((const UBYTE *)"FiO2 Alto"),((const UBYTE *)"\201\277\264\306\255\253\254 FiO2"
#line 194
),((const UBYTE *)"High FiO2"),((const UBYTE *)"High FiO2"),((const UBYTE *)"High FiO2")},{((const UBYTE *)"low FiO2"),((const UBYTE *)"Low FiO2"),((const UBYTE *)"Low FiO2"),((const UBYTE *)"Low FiO2"),((const UBYTE *)"Low FiO2"),((const UBYTE *)"FiO2 Min"),((const UBYTE *)"Low FiO2"),((const UBYTE
#line 194
 *)"Low FiO2"),((const UBYTE *)"Low FiO2"),((const UBYTE *)"Low FiO2"),((const UBYTE *)"Low FiO2"),((const UBYTE *)"Low FiO2"),((const UBYTE *)"Lav FiO2"),((const UBYTE *)"Low FiO2"),((const UBYTE *)"FiO2 baixo"),((const UBYTE *)"\214\253\252\255\253\254 FiO2"),((const UBYTE *)"Low FiO2"),((const 
#line 194
UBYTE *)"Low FiO2"),((const UBYTE *)"Low FiO2")},{((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const 
#line 194
UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2")},{((const UBYTE *)"\351\023\354\263\302\207"),((const UBYTE *)"Sikret Fr"),((const UBYTE *)"Backup Af"
#line 194
),((const UBYTE *)"Back up R"),((const UBYTE *)"Bk up R"),((const UBYTE *)"Fr Reserva"),((const UBYTE *)"Fr sec"),((const UBYTE *)"Back up R"),((const UBYTE *)"F Back Up"),((const UBYTE *)"Backup\361"),((const UBYTE *)"Back up R"),((const UBYTE *)"Backup F"),((const UBYTE *)"Backup Fr"),((const 
#line 194
UBYTE *)"Cz\030sto\025\034 Apnea RRa"),((const UBYTE *)"Fr Reserva"),((const UBYTE *)"\226; \243\262\240\306\301"),((const UBYTE *)"Turvataajuus"),((const UBYTE *)"Back up R"),((const UBYTE *)"Back Up R")},{((const UBYTE *)"Pmax"),((const UBYTE *)"Pmax"),((const UBYTE *)"Pmax"),((const UBYTE *)"Pmax"
#line 194
),((const UBYTE *)"Pmax"),((const UBYTE *)"Pmax"),((const UBYTE *)"Pmax"),((const UBYTE *)"Pmax"),((const UBYTE *)"Pmax"),((const UBYTE *)"Pmax"),((const UBYTE *)"Pmax"),((const UBYTE *)"Pmax"),((const UBYTE *)"Pmax"),((const UBYTE *)"Pmax"),((const UBYTE *)"Pmax"),((const UBYTE *)"P \257\243\255\264"
#line 194
),((const UBYTE *)"Pmax"),((const UBYTE *)"Pmax"),((const UBYTE *)"Pmax")}};
#line 221
const UBYTE *const huge cMSG_Vmi[19] = {((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"Vol M"),((const UBYTE *)"Vm"),((const UBYTE *)"M.Vol"),((const UBYTE *)"V Min"),((const UBYTE *)"M.Vol"),((const UBYTE
#line 221
 *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"MVI"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol")};
const UBYTE *const huge cMSG_OutOfLimit[19] = {((const UBYTE *)"\344;\024"),((const UBYTE *)"Uden for omr\331de"),((const UBYTE *)"Au\335erhalb der Anzeige"),((const UBYTE *)"Out Of Range"),((const UBYTE *)"Out Of Range"),((const UBYTE *)"Fuera Limites"),((const UBYTE *)"Hors Limites"),((const UBYTE
#line 222
 *)"Out Of Range"),((const UBYTE *)"Fuori Limite"),((const UBYTE *)"Out Of Range"),((const UBYTE *)"Out Of Range"),((const UBYTE *)"Buiten bereik"),((const UBYTE *)"Utenfor m\331leskala"),((const UBYTE *)"Poza zakresem"),((const UBYTE *)"Fora Limites"),((const UBYTE *)"\201\240\250 \247\306\262\267\264\266 \262\263\250\247\250\256\306\245"
#line 222
),((const UBYTE *)"Rajojen ulkopuolella"),((const UBYTE *)"Utanf\313r m\332tskala"),((const UBYTE *)"Limit D\b\016\b")};


const UBYTE *const huge cMSG_PressureUnit[3][19] = {{((const UBYTE *)"mbar"),((const UBYTE *)"mbar"),((const UBYTE *)"mbar"),((const UBYTE *)"mbar"),((const UBYTE *)"mbar"),((const UBYTE *)"mbar"),((const UBYTE *)"mbar"),((const UBYTE *)"mbar"),((const UBYTE *)"mbar"),((const UBYTE *)"mbar"),((const
#line 225
 UBYTE *)"mbar"),((const UBYTE *)"mbar"),((const UBYTE *)"mbar"),((const UBYTE *)"mbar"),((const UBYTE *)"mbar"),((const UBYTE *)"\257\200\243\263"),((const UBYTE *)"mbar"),((const UBYTE *)"mbar"),((const UBYTE *)"mbar")},{((const UBYTE *)"cmH2O"),((const UBYTE *)"cmH2O"),((const UBYTE *)"cmH2O"),((
#line 225
const UBYTE *)"cmH2O"),((const UBYTE *)"cmH2O"),((const UBYTE *)"cmH2O"),((const UBYTE *)"cmH2O"),((const UBYTE *)"cmH2O"),((const UBYTE *)"cmH2O"),((const UBYTE *)"cmH2O"),((const UBYTE *)"cmH2O"),((const UBYTE *)"cmH2O"),((const UBYTE *)"cmH2O"),((const UBYTE *)"cmH2O"),((const UBYTE *)"cmH2O"),((
#line 225
const UBYTE *)"\264\257H2O"),((const UBYTE *)"cmH2O"),((const UBYTE *)"cmH2O"),((const UBYTE *)"cmH2O")},{((const UBYTE *)"hPa"),((const UBYTE *)"hPa"),((const UBYTE *)"hPa"),((const UBYTE *)"hPa"),((const UBYTE *)"hPa"),((const UBYTE *)"hPa"),((const UBYTE *)"hPa"),((const UBYTE *)"hPa"),((const 
#line 225
UBYTE *)"hPa"),((const UBYTE *)"hPa"),((const UBYTE *)"hPa"),((const UBYTE *)"hPa"),((const UBYTE *)"hPa"),((const UBYTE *)"hPa"),((const UBYTE *)"hPa"),((const UBYTE *)"\246\216\243"),((const UBYTE *)"hPa"),((const UBYTE *)"hPa"),((const UBYTE *)"hPa")}};


const UBYTE *const huge cMSG_VolumeUnit[19] = {((const UBYTE *)"ml"),((const UBYTE *)"mL"),((const UBYTE *)"mL"),((const UBYTE *)"mL"),((const UBYTE *)"mL"),((const UBYTE *)"mL"),((const UBYTE *)"mL"),((const UBYTE *)"mL"),((const UBYTE *)"mL"),((const UBYTE *)"mL"),((const UBYTE *)"mL"),((const 
#line 228
UBYTE *)"mL"),((const UBYTE *)"mL"),((const UBYTE *)"mL"),((const UBYTE *)"mL"),((const UBYTE *)"\257\256"),((const UBYTE *)"mL"),((const UBYTE *)"mL"),((const UBYTE *)"mL")};
const UBYTE *const huge cMSG_VolumeLiterUnit[19] = {((const UBYTE *)"l"),((const UBYTE *)"L"),((const UBYTE *)"L"),((const UBYTE *)"L"),((const UBYTE *)"L"),((const UBYTE *)"L"),((const UBYTE *)"L"),((const UBYTE *)"L"),((const UBYTE *)"L"),((const UBYTE *)"L"),((const UBYTE *)"L"),((const UBYTE *)"L"
#line 229
),((const UBYTE *)"L"),((const UBYTE *)"L"),((const UBYTE *)"L"),((const UBYTE *)"\256"),((const UBYTE *)"L"),((const UBYTE *)"L"),((const UBYTE *)"L")};
const UBYTE *const huge cMSG_PerCentUnit[19] = {((const UBYTE *)"%"),((const UBYTE *)"%"),((const UBYTE *)"%"),((const UBYTE *)"%"),((const UBYTE *)"%"),((const UBYTE *)"%"),((const UBYTE *)"%"),((const UBYTE *)"%"),((const UBYTE *)"%"),((const UBYTE *)"%"),((const UBYTE *)"%"),((const UBYTE *)"%"),
#line 230
((const UBYTE *)"%"),((const UBYTE *)"%"),((const UBYTE *)"%"),((const UBYTE *)"%"),((const UBYTE *)"%"),((const UBYTE *)"%"),((const UBYTE *)"%")};
const UBYTE *const huge cMSG_FlowUnit[19] = {((const UBYTE *)"lpm"),((const UBYTE *)"L/min"),((const UBYTE *)"L/min"),((const UBYTE *)"Lpm"),((const UBYTE *)"Lpm"),((const UBYTE *)"Lpm"),((const UBYTE *)"Lpm"),((const UBYTE *)"Lpm"),((const UBYTE *)"Lpm"),((const UBYTE *)"Lpm"),((const UBYTE *)"Lpm"
#line 231
),((const UBYTE *)"Lpm"),((const UBYTE *)"L/min"),((const UBYTE *)"Lpm"),((const UBYTE *)"Lpm"),((const UBYTE *)"\256/\257\253\240"),((const UBYTE *)"l/min"),((const UBYTE *)"L/min"),((const UBYTE *)"L/dak")};
const UBYTE *const huge cMSG_StandardFlowUnit[19] = {((const UBYTE *)"slpm"),((const UBYTE *)"L/min"),((const UBYTE *)"L/min"),((const UBYTE *)"sLpm"),((const UBYTE *)"sLpm"),((const UBYTE *)"sLpm"),((const UBYTE *)"sLpm"),((const UBYTE *)"sLpm"),((const UBYTE *)"sLpm"),((const UBYTE *)"sLpm"),((
#line 232
const UBYTE *)"sLpm"),((const UBYTE *)"sLpm"),((const UBYTE *)"L/min"),((const UBYTE *)"sLpm"),((const UBYTE *)"sLpm"),((const UBYTE *)"\264.\256/\257\253\240"),((const UBYTE *)"l/min"),((const UBYTE *)"L/min"),((const UBYTE *)"L/dak")};
const UBYTE *const huge cMSG_FrequencyUnit[19] = {((const UBYTE *)"bpm"),((const UBYTE *)"bpm"),((const UBYTE *)"AZ/min"),((const UBYTE *)"bpm"),((const UBYTE *)"bpm"),((const UBYTE *)"c/min"),((const UBYTE *)"c/min"),((const UBYTE *)"bpm"),((const UBYTE *)"bpm"),((const UBYTE *)"bpm"),((const UBYTE
#line 233
 *)"bpm"),((const UBYTE *)"spm"),((const UBYTE *)"bpm"),((const UBYTE *)"bpm"),((const UBYTE *)"c/min"),((const UBYTE *)"\247/\257\253\240"),((const UBYTE *)"bpm"),((const UBYTE *)"bpm "),((const UBYTE *)"n/dak")};
const UBYTE *const huge cMSG_SpeedUnit[19] = {((const UBYTE *)"rpm"),((const UBYTE *)"rpm"),((const UBYTE *)"u/min"),((const UBYTE *)"rpm"),((const UBYTE *)"rpm"),((const UBYTE *)"rpm"),((const UBYTE *)"tr/min"),((const UBYTE *)"rpm"),((const UBYTE *)"rpm"),((const UBYTE *)"rpm"),((const UBYTE *)"rpm"
#line 234
),((const UBYTE *)"rpm"),((const UBYTE *)"rpm"),((const UBYTE *)"rpm"),((const UBYTE *)"rpm"),((const UBYTE *)"\306\244/\257\253\240"),((const UBYTE *)"rpm"),((const UBYTE *)"rpm"),((const UBYTE *)"rpm")};
const UBYTE *const huge cMSG_TensionUnit[19] = {((const UBYTE *)"V"),((const UBYTE *)"V"),((const UBYTE *)"V"),((const UBYTE *)"V"),((const UBYTE *)"V"),((const UBYTE *)"V"),((const UBYTE *)"V"),((const UBYTE *)"V"),((const UBYTE *)"V"),((const UBYTE *)"V"),((const UBYTE *)"V"),((const UBYTE *)"V"),
#line 235
((const UBYTE *)"V"),((const UBYTE *)"V"),((const UBYTE *)"V"),((const UBYTE *)"V"),((const UBYTE *)"V"),((const UBYTE *)"V"),((const UBYTE *)"V")};
const UBYTE *const huge cMSG_PowerUnit[19] = {((const UBYTE *)"mAh"),((const UBYTE *)"mAh"),((const UBYTE *)"mAh"),((const UBYTE *)"mAh"),((const UBYTE *)"mAh"),((const UBYTE *)"mAh"),((const UBYTE *)"mAh"),((const UBYTE *)"mAh"),((const UBYTE *)"mAh"),((const UBYTE *)"mAh"),((const UBYTE *)"mAh"),(
#line 236
(const UBYTE *)"mAh"),((const UBYTE *)"mAh"),((const UBYTE *)"mAh"),((const UBYTE *)"mAh"),((const UBYTE *)"mAh"),((const UBYTE *)"mAh"),((const UBYTE *)"mAh"),((const UBYTE *)"mAh")};
const UBYTE *const huge cMSG_TempUnit[19] = {((const UBYTE *)"\260C"),((const UBYTE *)"\260C"),((const UBYTE *)"\260C"),((const UBYTE *)"\260C"),((const UBYTE *)"\260C"),((const UBYTE *)"\260C"),((const UBYTE *)"\260C"),((const UBYTE *)"\260C"),((const UBYTE *)"\260C"),((const UBYTE *)"\260C"),((
#line 237
const UBYTE *)"\260C"),((const UBYTE *)"\260C"),((const UBYTE *)"\260C"),((const UBYTE *)"\260C"),((const UBYTE *)"\260C"),((const UBYTE *)"\260C"),((const UBYTE *)"\260C"),((const UBYTE *)"\260C"),((const UBYTE *)"C")};
const UBYTE *const huge cMSG_AbsPressUnit[19] = {((const UBYTE *)"mmHg"),((const UBYTE *)"mmHg"),((const UBYTE *)"mmHg"),((const UBYTE *)"mmHg"),((const UBYTE *)"mmHg"),((const UBYTE *)"mmHg"),((const UBYTE *)"mmHg"),((const UBYTE *)"mmHg"),((const UBYTE *)"mmHg"),((const UBYTE *)"mmHg"),((const 
#line 238
UBYTE *)"mmHg"),((const UBYTE *)"mmHg"),((const UBYTE *)"mmHg"),((const UBYTE *)"mmHg"),((const UBYTE *)"mmHg"),((const UBYTE *)"\257\257.\263\266.\264\266."),((const UBYTE *)"mmHg"),((const UBYTE *)"mmHg"),((const UBYTE *)"mmHg")};
const UBYTE *const huge cMSG_PressBarUnit[19] = {((const UBYTE *)"bar"),((const UBYTE *)"bar"),((const UBYTE *)"bar"),((const UBYTE *)"bar"),((const UBYTE *)"bar"),((const UBYTE *)"bar"),((const UBYTE *)"bar"),((const UBYTE *)"bar"),((const UBYTE *)"bar"),((const UBYTE *)"bar"),((const UBYTE *)"bar"
#line 239
),((const UBYTE *)"bar"),((const UBYTE *)"bar"),((const UBYTE *)"bar"),((const UBYTE *)"bar"),((const UBYTE *)"\244\243\263"),((const UBYTE *)"bar"),((const UBYTE *)"bar"),((const UBYTE *)"bar")};
const UBYTE *const huge cMSG_HourUnit[19] = {((const UBYTE *)"h"),((const UBYTE *)"t"),((const UBYTE *)"Std."),((const UBYTE *)"h"),((const UBYTE *)"h"),((const UBYTE *)"h"),((const UBYTE *)"h"),((const UBYTE *)"h"),((const UBYTE *)"h"),((const UBYTE *)"h"),((const UBYTE *)"h"),((const UBYTE *)"uur"
#line 240
),((const UBYTE *)"t"),((const UBYTE *)"h"),((const UBYTE *)"h"),((const UBYTE *)"\273"),((const UBYTE *)"t"),((const UBYTE *)"t"),((const UBYTE *)"sa")};
const UBYTE *const huge cMSG_MinuteUnit[19] = {((const UBYTE *)"min"),((const UBYTE *)"min"),((const UBYTE *)"Min."),((const UBYTE *)"min"),((const UBYTE *)"min"),((const UBYTE *)"min"),((const UBYTE *)"min"),((const UBYTE *)"min"),((const UBYTE *)"min"),((const UBYTE *)"min"),((const UBYTE *)"min")
#line 241
,((const UBYTE *)"min"),((const UBYTE *)"min"),((const UBYTE *)"min"),((const UBYTE *)"min"),((const UBYTE *)"\257\253\240"),((const UBYTE *)"min"),((const UBYTE *)"min"),((const UBYTE *)"dak")};
const UBYTE *const huge cMSG_SecondUnit[19] = {((const UBYTE *)"s"),((const UBYTE *)"s"),((const UBYTE *)"sek"),((const UBYTE *)"s"),((const UBYTE *)"s"),((const UBYTE *)"s"),((const UBYTE *)"s"),((const UBYTE *)"s"),((const UBYTE *)"s"),((const UBYTE *)"s"),((const UBYTE *)"s"),((const UBYTE *)"s")
#line 242
,((const UBYTE *)"s"),((const UBYTE *)"s"),((const UBYTE *)"s"),((const UBYTE *)"ce\255"),((const UBYTE *)"s"),((const UBYTE *)"s"),((const UBYTE *)"s")};
const UBYTE *const huge cMSG_eventUnit[19] = {((const UBYTE *)"\252\'\257/\b\234"),((const UBYTE *)"Ev/t"),((const UBYTE *)"Ev/Std"),((const UBYTE *)"Ev/h"),((const UBYTE *)"Ev/h"),((const UBYTE *)"Ev/h"),((const UBYTE *)"Ev/h"),((const UBYTE *)"Ev/h"),((const UBYTE *)"Ev/h"),((const UBYTE *)"Ev/h")
#line 243
,((const UBYTE *)"Ev/h"),((const UBYTE *)"Ev/uur"),((const UBYTE *)"Ev/t"),((const UBYTE *)"Ev/h"),((const UBYTE *)"Ev/h"),((const UBYTE *)"\264\306\244/\273"),((const UBYTE *)"tap/t"),((const UBYTE *)"Ev/h"),((const UBYTE *)"Ev/ s")};
const UBYTE *const huge cMSG_DayUnit[19] = {((const UBYTE *)"\001"),((const UBYTE *)"dage"),((const UBYTE *)"Tag"),((const UBYTE *)"days"),((const UBYTE *)"days"),((const UBYTE *)"dias"),((const UBYTE *)"Jours"),((const UBYTE *)"days"),((const UBYTE *)"gg"),((const UBYTE *)"days"),((const UBYTE *)"days"
#line 244
),((const UBYTE *)"dagen"),((const UBYTE *)"dager"),((const UBYTE *)"dni"),((const UBYTE *)"dias"),((const UBYTE *)"\247\240\250\254"),((const UBYTE *)"pv"),((const UBYTE *)"dagar"),((const UBYTE *)"g\304n")};
const UBYTE *const huge cMSG_MonthUnit[19] = {((const UBYTE *)"months"),((const UBYTE *)"months"),((const UBYTE *)"Monat"),((const UBYTE *)"months"),((const UBYTE *)"months"),((const UBYTE *)"meses"),((const UBYTE *)"mois"),((const UBYTE *)"months"),((const UBYTE *)"months"),((const UBYTE *)"months"
#line 245
),((const UBYTE *)"months"),((const UBYTE *)"months"),((const UBYTE *)"m\331neder"),((const UBYTE *)"months"),((const UBYTE *)"meses"),((const UBYTE *)"\257\250\264\303\271\250\245"),((const UBYTE *)"months"),((const UBYTE *)"m\331nader"),((const UBYTE *)"months")};
const UBYTE *const huge cMSG_HoursByDayUnit[19] = {((const UBYTE *)"\b\234/\001"),((const UBYTE *)"t/dage"),((const UBYTE *)"Std/T"),((const UBYTE *)"h/days"),((const UBYTE *)"h/days"),((const UBYTE *)"h/dias"),((const UBYTE *)"h/jour"),((const UBYTE *)"h/days"),((const UBYTE *)"hh/gg"),((const 
#line 246
UBYTE *)"h/days"),((const UBYTE *)"h/days"),((const UBYTE *)"uur/dg"),((const UBYTE *)"t/dag"),((const UBYTE *)"h/dob\030"),((const UBYTE *)"h/dias"),((const UBYTE *)"\273/\247\250\240\300"),((const UBYTE *)"h/pv"),((const UBYTE *)"t/dag"),((const UBYTE *)"s/ g\304n")};


const UBYTE *const huge cMSG_Stop[19] = {((const UBYTE *)"\256\254"),((const UBYTE *)"Stop"),((const UBYTE *)"Stop"),((const UBYTE *)"Stop"),((const UBYTE *)"Stop"),((const UBYTE *)"Stop"),((const UBYTE *)"Stop"),((const UBYTE *)"\306\362\036\026\367"),((const UBYTE *)"Stop"),((const UBYTE *)"Stop")
#line 249
,((const UBYTE *)"Stop"),((const UBYTE *)"Stop"),((const UBYTE *)"Stopp"),((const UBYTE *)"Stop"),((const UBYTE *)"Stop"),((const UBYTE *)"\220\266\306\262"),((const UBYTE *)"Stop"),((const UBYTE *)"Stop"),((const UBYTE *)"Stop")};
const UBYTE *const huge cMSG_Wait[19] = {((const UBYTE *)"|wait..."),((const UBYTE *)"|WAIT . . ."),((const UBYTE *)"|Bitte warten.."),((const UBYTE *)"|WAIT . . ."),((const UBYTE *)"|WAIT . . ."),((const UBYTE *)"|Espere  . . ."),((const UBYTE *)"|PATIENTEZ . . ."),((const UBYTE *)"|\273\304\273\303\305\304\277 . . ."
#line 250
),((const UBYTE *)"|Attendere  . . ."),((const UBYTE *)"|WAIT . . ."),((const UBYTE *)"|WAIT . . ."),((const UBYTE *)"|WACHT . . ."),((const UBYTE *)"|VENT . . ."),((const UBYTE *)"|CZEKAJ . . ."),((const UBYTE *)"|Espere  . . ."),((const UBYTE *)"|\215\251\253\247\243\240\253\250 . . ."),((const 
#line 250
UBYTE *)"|ODOTA. . ."),((const UBYTE *)"|V<NTA . . ."),((const UBYTE *)"|WAIT . . .")};
const UBYTE *const huge cMSG_ShortWait[19] = {((const UBYTE *)"wait..."),((const UBYTE *)"WAIT . . ."),((const UBYTE *)"Bitte warten.."),((const UBYTE *)"WAIT . . ."),((const UBYTE *)"WAIT . . ."),((const UBYTE *)"Espere  . . ."),((const UBYTE *)"PATIENTEZ . . ."),((const UBYTE *)"\273\304\273\303\305\304\277 . . ."
#line 251
),((const UBYTE *)"Attendere  . . ."),((const UBYTE *)"WAIT . . ."),((const UBYTE *)"WAIT . . ."),((const UBYTE *)"WACHT . . ."),((const UBYTE *)"VENT . . ."),((const UBYTE *)"CZEKAJ . . ."),((const UBYTE *)"Espere  . . ."),((const UBYTE *)"\215\251\253\247\243\240\253\250 . . ."),((const UBYTE *)"ODOTA . . ."
#line 251
),((const UBYTE *)"V<NTA. . ."),((const UBYTE *)"WAIT . . .")};
const UBYTE *const huge cMSG_No[19] = {((const UBYTE *)"OFF"),((const UBYTE *)"NEJ"),((const UBYTE *)"NEIN"),((const UBYTE *)"OFF"),((const UBYTE *)"OFF"),((const UBYTE *)"NO"),((const UBYTE *)"NON"),((const UBYTE *)"NO"),((const UBYTE *)"NO"),((const UBYTE *)"OFF"),((const UBYTE *)"OFF"),((const 
#line 252
UBYTE *)"UIT"),((const UBYTE *)"AV"),((const UBYTE *)"WY\?"),((const UBYTE *)"NAO"),((const UBYTE *)"\214\204\221"),((const UBYTE *)"EI"),((const UBYTE *)"AV"),((const UBYTE *)"OFF")};
const UBYTE *const huge cMSG_Off[19] = {((const UBYTE *)"OFF"),((const UBYTE *)"AF"),((const UBYTE *)"AUS"),((const UBYTE *)"OFF"),((const UBYTE *)"OFF"),((const UBYTE *)"OFF"),((const UBYTE *)"NON"),((const UBYTE *)"OFF"),((const UBYTE *)"OFF"),((const UBYTE *)"OFF"),((const UBYTE *)"OFF"),((const 
#line 253
UBYTE *)"UIT"),((const UBYTE *)"AV"),((const UBYTE *)"WY\?"),((const UBYTE *)"OFF"),((const UBYTE *)"\201\230@]"),((const UBYTE *)"POIS"),((const UBYTE *)"AV"),((const UBYTE *)"OFF")};
const UBYTE *const huge cMSG_Yes[19] = {((const UBYTE *)"YES"),((const UBYTE *)"JA"),((const UBYTE *)"JA"),((const UBYTE *)"YES"),((const UBYTE *)"YES"),((const UBYTE *)"SI"),((const UBYTE *)"OUI"),((const UBYTE *)"YES"),((const UBYTE *)"SI"),((const UBYTE *)"YES"),((const UBYTE *)"YES"),((const 
#line 254
UBYTE *)"JA"),((const UBYTE *)"JA"),((const UBYTE *)"TAK"),((const UBYTE *)"SIM"),((const UBYTE *)";A"),((const UBYTE *)"KYLL"),((const UBYTE *)"JA"),((const UBYTE *)"EVET")};
const UBYTE *const huge cMSG_On[19] = {((const UBYTE *)"ON"),((const UBYTE *)"TIL"),((const UBYTE *)"EIN"),((const UBYTE *)"ON"),((const UBYTE *)"ON"),((const UBYTE *)"ON"),((const UBYTE *)"ON"),((const UBYTE *)"ON"),((const UBYTE *)"ON"),((const UBYTE *)"ON"),((const UBYTE *)"ON"),((const UBYTE *)"AAN"
#line 255
),((const UBYTE *)"P>"),((const UBYTE *)"ZA\?"),((const UBYTE *)"ON"),((const UBYTE *)"B@]"),((const UBYTE *)"P<<L"),((const UBYTE *)"P>"),((const UBYTE *)"A=IK")};
const UBYTE *const huge cMSG_NoneUnit[19] = {((const UBYTE *)""),((const UBYTE *)""),((const UBYTE *)""),((const UBYTE *)""),((const UBYTE *)""),((const UBYTE *)""),((const UBYTE *)""),((const UBYTE *)""),((const UBYTE *)""),((const UBYTE *)" "),((const UBYTE *)""),((const UBYTE *)""),((const UBYTE 
#line 256
*)""),((const UBYTE *)""),((const UBYTE *)""),((const UBYTE *)""),((const UBYTE *)""),((const UBYTE *)""),((const UBYTE *)"")};
const UBYTE *const huge cMSG_Slash[19] = {((const UBYTE *)"/"),((const UBYTE *)"/"),((const UBYTE *)"/"),((const UBYTE *)"/"),((const UBYTE *)"/"),((const UBYTE *)"/"),((const UBYTE *)"/"),((const UBYTE *)"/"),((const UBYTE *)"/"),((const UBYTE *)"/"),((const UBYTE *)"/"),((const UBYTE *)"/"),((
#line 257
const UBYTE *)"/"),((const UBYTE *)"/"),((const UBYTE *)"/"),((const UBYTE *)"/"),((const UBYTE *)"/"),((const UBYTE *)"/"),((const UBYTE *)"/")};
const UBYTE *const huge cMSG_Colon[19] = {((const UBYTE *)":"),((const UBYTE *)":"),((const UBYTE *)":"),((const UBYTE *)":"),((const UBYTE *)":"),((const UBYTE *)":"),((const UBYTE *)":"),((const UBYTE *)":"),((const UBYTE *)":"),((const UBYTE *)":"),((const UBYTE *)":"),((const UBYTE *)":"),((
#line 258
const UBYTE *)":"),((const UBYTE *)":"),((const UBYTE *)":"),((const UBYTE *)":"),((const UBYTE *)":"),((const UBYTE *)":"),((const UBYTE *)":")};
const UBYTE *const huge cMSG_Sup[19] = {((const UBYTE *)">>"),((const UBYTE *)">>"),((const UBYTE *)">>"),((const UBYTE *)">>"),((const UBYTE *)">>"),((const UBYTE *)">>"),((const UBYTE *)">>"),((const UBYTE *)">>"),((const UBYTE *)">>"),((const UBYTE *)">>"),((const UBYTE *)">>"),((const UBYTE *)">>"
#line 259
),((const UBYTE *)">>"),((const UBYTE *)">>"),((const UBYTE *)">>"),((const UBYTE *)">>"),((const UBYTE *)">>"),((const UBYTE *)">>"),((const UBYTE *)">>")};
const UBYTE *const huge cMSG_MoreOrLess[19] = {((const UBYTE *)"\261"),((const UBYTE *)"\261"),((const UBYTE *)"\261"),((const UBYTE *)"\261"),((const UBYTE *)"\261"),((const UBYTE *)"\261"),((const UBYTE *)"\261"),((const UBYTE *)"\261"),((const UBYTE *)"\261"),((const UBYTE *)"\261"),((const UBYTE
#line 260
 *)"\261"),((const UBYTE *)"\261"),((const UBYTE *)"\261"),((const UBYTE *)"\261"),((const UBYTE *)"\261"),((const UBYTE *)"\261"),((const UBYTE *)"\261"),((const UBYTE *)"\261"),((const UBYTE *)"\261")};
const UBYTE *const huge cMSG_Auto[19] = {((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"
#line 261
),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"ABTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"AUTO"),((const UBYTE *)"OTO")};
const UBYTE *const huge cMSG_IEHeader[19] = {((const UBYTE *)"1/"),((const UBYTE *)"1/"),((const UBYTE *)"1/"),((const UBYTE *)"1/"),((const UBYTE *)"1/"),((const UBYTE *)"1/"),((const UBYTE *)"1/"),((const UBYTE *)"1/"),((const UBYTE *)"1/"),((const UBYTE *)"1/"),((const UBYTE *)"1/"),((const UBYTE
#line 262
 *)" "),((const UBYTE *)"1/"),((const UBYTE *)"1/"),((const UBYTE *)"1/"),((const UBYTE *)"1/"),((const UBYTE *)"1/"),((const UBYTE *)"1/"),((const UBYTE *)"1/")};
const UBYTE *const huge cMSG_Pediatric[19] = {((const UBYTE *)"1 (P)"),((const UBYTE *)"1 (P)"),((const UBYTE *)"1 (P)"),((const UBYTE *)"1 (P)"),((const UBYTE *)"1 (P)"),((const UBYTE *)"1 (P)"),((const UBYTE *)"1 (P)"),((const UBYTE *)"1 (P)"),((const UBYTE *)"1 (P)"),((const UBYTE *)"1 (P)"),((
#line 263
const UBYTE *)"1 (P)"),((const UBYTE *)"1 (P)"),((const UBYTE *)"1 (P)"),((const UBYTE *)"1(P)"),((const UBYTE *)"1 (P)"),((const UBYTE *)"1 (\216)"),((const UBYTE *)"1 (P)"),((const UBYTE *)"1 (P)"),((const UBYTE *)"1(P)")};
const UBYTE *const huge cMSG_Am[19] = {((const UBYTE *)"am"),((const UBYTE *)"am"),((const UBYTE *)"am"),((const UBYTE *)"am"),((const UBYTE *)"am"),((const UBYTE *)"am"),((const UBYTE *)"am"),((const UBYTE *)"\023\374"),((const UBYTE *)"am"),((const UBYTE *)"am"),((const UBYTE *)"am"),((const UBYTE
#line 264
 *)"am"),((const UBYTE *)"am"),((const UBYTE *)"am"),((const UBYTE *)"am"),((const UBYTE *)"am"),((const UBYTE *)"am"),((const UBYTE *)"am"),((const UBYTE *)"am")};
const UBYTE *const huge cMSG_Pm[19] = {((const UBYTE *)"pm"),((const UBYTE *)"pm"),((const UBYTE *)"pm"),((const UBYTE *)"pm"),((const UBYTE *)"pm"),((const UBYTE *)"pm"),((const UBYTE *)"pm"),((const UBYTE *)"\374\374"),((const UBYTE *)"pm"),((const UBYTE *)"pm"),((const UBYTE *)"pm"),((const UBYTE
#line 265
 *)"pm"),((const UBYTE *)"pm"),((const UBYTE *)"pm"),((const UBYTE *)"pm"),((const UBYTE *)"pm"),((const UBYTE *)"pm"),((const UBYTE *)"pm"),((const UBYTE *)"pm")};
const UBYTE *const huge cMSG_Original[19] = {((const UBYTE *)"Original(louder)"),((const UBYTE *)"ORIGINAL(H\330JERE)"),((const UBYTE *)"Original (lauter)"),((const UBYTE *)"Original(louder)"),((const UBYTE *)"Original(louder)"),((const UBYTE *)"Original (+ alto)"),((const UBYTE *)"Original/fort"),(
#line 266
(const UBYTE *)"\306\307\211\312\305\311(\313\245.)"),((const UBYTE *)"Originale(alto)"),((const UBYTE *)"Original(louder)"),((const UBYTE *)"Original(louder)"),((const UBYTE *)"Oorspr. (hard)"),((const UBYTE *)"Orig (kraft.)"),((const UBYTE *)"Orygin. (g^.)"),((const UBYTE *)"Original (mais alto)")
#line 266
,((const UBYTE *)"\215\217\207\202.(\202\217\215\213@\207\210)"),((const UBYTE *)"Alk.p. (kova)"),((const UBYTE *)"Original (h}gre)"),((const UBYTE *)"ORJ. (Y\334KSEK)")};
const UBYTE *const huge cMSG_Compliant[19] = {((const UBYTE *)"Compliant(softer)"),((const UBYTE *)"TILPAS(LAVERE)"),((const UBYTE *)"Angepasst (leiser)"),((const UBYTE *)"Compliant(softer)"),((const UBYTE *)"Compliant(softer)"),((const UBYTE *)"Conf. (+ bajo)"),((const UBYTE *)"Adaptative/faible"),
#line 267
((const UBYTE *)"\273\306\302[\311(\316\273\303.)"),((const UBYTE *)"Tono Confort(low)"),((const UBYTE *)"Compliant(softer)"),((const UBYTE *)"Compliant(softer)"),((const UBYTE *)"Norm (zacht)"),((const UBYTE *)"Komp. (svak.)"),((const UBYTE *)"Zgodny (mi{kszy)"),((const UBYTE *)"Cmpt. (+ suave)"),(
#line 267
(const UBYTE *)"\220\221\177\214;.(\221\207\227\204)"),((const UBYTE *)"Std. (vaimea)"),((const UBYTE *)"Komp. (mjuk.)"),((const UBYTE *)"UYUMLU (YUM.)")};


const UBYTE *const huge cMSG_MenuGraphConfig[19] = {((const UBYTE *)"\356\367\374\370"),((const UBYTE *)"KURVE INDSTILLING"),((const UBYTE *)"KURVENKONFIGURATION"),((const UBYTE *)"WAVEFORM SETUP"),((const UBYTE *)"WAVEFORM SETUP"),((const UBYTE *)"CONFIGURACION CURVA"),((const UBYTE *)"CONFIGURATION COURBE"
#line 270
),((const UBYTE *)"\307\313\300\303\250\311\276\250\311 \301\313\303\273\312\305\303\305\307\314\277\311"),((const UBYTE *)"TIPOLOGIA CURVE"),((const UBYTE *)"WAVEFORM SETUP"),((const UBYTE *)"CURVE SETUP"),((const UBYTE *)"CURVES INSTELLEN"),((const UBYTE *)"KURVEOPPSETT"),((const UBYTE *)"USTAWIENIA WYKRES\323W"
#line 270
),((const UBYTE *)"CONFIGURA=AO CURVA"),((const UBYTE *)"\214\177\220\221\217\215\210@\177 @\217\207\201\215\210"),((const UBYTE *)"K<YR< S<<D\326T"),((const UBYTE *)"SETUP KURVOR"),((const UBYTE *)"DALGA FORMU AYARLARI")};
const UBYTE *const huge cMSG_Visualisation[19] = {((const UBYTE *)"\235\316"),((const UBYTE *)"Skaerm"),((const UBYTE *)"Anzeige"),((const UBYTE *)"Display"),((const UBYTE *)"Display"),((const UBYTE *)"Visualizacion"),((const UBYTE *)"Visualisation"),((const UBYTE *)"\273\023\366\371\372\035\375\371\026\367"
#line 271
),((const UBYTE *)"Visualizzazione"),((const UBYTE *)"\253\225\244\265\301\304"),((const UBYTE *)"Display"),((const UBYTE *)"Display"),((const UBYTE *)"Display"),((const UBYTE *)"Typ wykresu"),((const UBYTE *)"Visualiza\325ao"),((const UBYTE *)";\253\264\262\256\250\254"),((const UBYTE *)"N\332ytt\313"
#line 271
),((const UBYTE *)"Display"),((const UBYTE *)"Ekran")};
const UBYTE *const huge cMSG_PressionMax[19] = {((const UBYTE *)"\210`\237\fQ"),((const UBYTE *)"Max tryk"),((const UBYTE *)"Bargraph Druck"),((const UBYTE *)"Max pressure"),((const UBYTE *)"Max pressure"),((const UBYTE *)"Presion max"),((const UBYTE *)"Pression max"),((const UBYTE *)"\303\366\364. \306\361\366\026\367"
#line 272
),((const UBYTE *)"Pressione Max"),((const UBYTE *)"Max pressure"),((const UBYTE *)"Max pressure"),((const UBYTE *)"Max druk"),((const UBYTE *)"Max trykk"),((const UBYTE *)"Skala Ci\025nienia"),((const UBYTE *)"Pressao max"),((const UBYTE *)"\213\243\255\264 \247\243\245\256\250\240\253\250"),((
#line 272
const UBYTE *)"Maksimipaine"),((const UBYTE *)"Max tryck"),((const UBYTE *)"Max Bas\bn\325")};
const UBYTE *const huge cMSG_DebitMax[19] = {((const UBYTE *)"\271\360\237\fQ"),((const UBYTE *)"Max flow"),((const UBYTE *)"Bargraph Flow"),((const UBYTE *)"Max flow"),((const UBYTE *)"Max flow"),((const UBYTE *)"Flujo max"),((const UBYTE *)"D\322bit max"),((const UBYTE *)"\303\366\364. \307\377\360"
#line 273
),((const UBYTE *)"Flusso Max"),((const UBYTE *)"Max flow"),((const UBYTE *)"Max flow"),((const UBYTE *)"Max flow"),((const UBYTE *)"Max flow"),((const UBYTE *)"Skala Przep\033ywu"),((const UBYTE *)"Fluxo max"),((const UBYTE *)"\213\243\255\264 \262\306\266\306\255"),((const UBYTE *)"Maksimivirtaus"
#line 273
),((const UBYTE *)"Max fl\313de"),((const UBYTE *)"Max Ak\b\016")};
const UBYTE *const huge cMSG_VtMax[19] = {((const UBYTE *)"\300\263\360\237\fQ"),((const UBYTE *)"Vt max"),((const UBYTE *)"Bargraph Volumen"),((const UBYTE *)"Vt max"),((const UBYTE *)"Vt max"),((const UBYTE *)"Vt max"),((const UBYTE *)"Vt max"),((const UBYTE *)"\303\366\364. Vt"),((const UBYTE *)"Vt Max"
#line 274
),((const UBYTE *)"Vt max"),((const UBYTE *)"Vt max"),((const UBYTE *)"Vt max"),((const UBYTE *)"Vt Max"),((const UBYTE *)"Skala Obj\030to\025ci"),((const UBYTE *)"Vt max"),((const UBYTE *)"\213\243\255\264 Vt"),((const UBYTE *)"Vt maksimi"),((const UBYTE *)"Vt Max"),((const UBYTE *)"Vt Max")};
const UBYTE *const huge cMSG_TempsMax[19] = {((const UBYTE *)"\234\365\237\fQ"),((const UBYTE *)"Max tid"),((const UBYTE *)"Bargraph Zeit"),((const UBYTE *)"Max time"),((const UBYTE *)"Max time"),((const UBYTE *)"Tiempo max"),((const UBYTE *)"Temps max"),((const UBYTE *)"\303\366\364. \353\024\035\375\377\025"
#line 275
),((const UBYTE *)"Tempo Massimo"),((const UBYTE *)"Max time"),((const UBYTE *)"Max time"),((const UBYTE *)"Max tijd"),((const UBYTE *)"Max tid"),((const UBYTE *)"Skala Czasu"),((const UBYTE *)"Tempo max"),((const UBYTE *)"\213\243\255\264 \245\263\250\257\303"),((const UBYTE *)"Maksimiaika"),((
#line 275
const UBYTE *)"Max tid"),((const UBYTE *)"Max zaman")};
const UBYTE *const huge cMSG_Representation[19] = {((const UBYTE *)"\236\325\324\027"),((const UBYTE *)"Kurve type"),((const UBYTE *)"Kurventyp"),((const UBYTE *)"Waveform type"),((const UBYTE *)"Waveform type"),((const UBYTE *)"Representacion"),((const UBYTE *)"Repr\322sentation"),((const UBYTE *)"\312\036\023\377\025 \372\030\374\362\027\377\374\377\024\031\360\025"
#line 276
),((const UBYTE *)"Tipo Curva"),((const UBYTE *)"\257\350\247\226\265"),((const UBYTE *)"Waveform type"),((const UBYTE *)"Type curve"),((const UBYTE *)"Kurvetype"),((const UBYTE *)"Rodzaj wykresu"),((const UBYTE *)"Representa\325ao"),((const UBYTE *)"\221\253\262 \255\263\253\245\306\254"),((const 
#line 276
UBYTE *)"K\332yr\332n muoto"),((const UBYTE *)"Kurv typ"),((const UBYTE *)"Dalga \016ekli ")};
const UBYTE *const huge cMSG_CurveVisualisation1[19] = {((const UBYTE *)"\343\341+\365\376"),((const UBYTE *)"TRYK+FLOW"),((const UBYTE *)"DRUCK UND FLOW"),((const UBYTE *)"PRESSURE+FLOW"),((const UBYTE *)"PRESSURE+FLOW"),((const UBYTE *)"PRESION+FLUJO"),((const UBYTE *)"PRESSION+DEBIT"),((const 
#line 277
UBYTE *)"\306\250\276\311\277+\307\305\277"),((const UBYTE *)"PRESS / FLUSSO"),((const UBYTE *)"PRESSURE+FLOW"),((const UBYTE *)"PRESSURE+FLOW"),((const UBYTE *)"DRUK+ FLOW"),((const UBYTE *)"TRYKK+FLOW"),((const UBYTE *)"CI\024N+PRZEP\?YW"),((const UBYTE *)"PRESSAO+FLUXO"),((const UBYTE *)";\177\201]\204\214\207\204+\216\215\221\215@"
#line 277
),((const UBYTE *)"PAINE+VIRTAUS"),((const UBYTE *)"TRYCK+FL\326DE"),((const UBYTE *)"BASIN=+AKI\t")};
const UBYTE *const huge cMSG_CurveVisualisation2[19] = {((const UBYTE *)"\366"),((const UBYTE *)"KURVE"),((const UBYTE *)"LOOPS"),((const UBYTE *)"LOOP"),((const UBYTE *)"LOOP"),((const UBYTE *)"BUCLE"),((const UBYTE *)"BOUCLE"),((const UBYTE *)"\274\307\305\316\305\311"),((const UBYTE *)"LOOP"),((
#line 278
const UBYTE *)"\037\236\033"),((const UBYTE *)"LOOP"),((const UBYTE *)"LOOP"),((const UBYTE *)"KURVE"),((const UBYTE *)"P\027TLA"),((const UBYTE *)"BUCLE"),((const UBYTE *)"\216\204\221]\242"),((const UBYTE *)"LOOP"),((const UBYTE *)"KURVA"),((const UBYTE *)"HALKA")};
const UBYTE *const huge cMSG_CurveRepresentation1[19] = {((const UBYTE *)"\367"),((const UBYTE *)"LINIE"),((const UBYTE *)"LINIE"),((const UBYTE *)"LINE"),((const UBYTE *)"LINE"),((const UBYTE *)"TRAZO"),((const UBYTE *)"TRAIT"),((const UBYTE *)"\254\307\273\303\303\277"),((const UBYTE *)"LINEA"),((
#line 279
const UBYTE *)"\036\004\235"),((const UBYTE *)"LINE"),((const UBYTE *)"LIJN"),((const UBYTE *)"LINJE"),((const UBYTE *)"LINIA"),((const UBYTE *)"LINHA"),((const UBYTE *)"@\217\207\201\177\242"),((const UBYTE *)"LINJA"),((const UBYTE *)"LINJE"),((const UBYTE *)"=\017ZG\017")};
const UBYTE *const huge cMSG_CurveRepresentation2[19] = {((const UBYTE *)"\347"),((const UBYTE *)"HISTOGRAM"),((const UBYTE *)"HISTOGRAMM"),((const UBYTE *)"HISTOGRAM"),((const UBYTE *)"HISTOGRAM"),((const UBYTE *)"HISTOGRAMA"),((const UBYTE *)"HISTOGRAMME"),((const UBYTE *)"\250\311\312\305\254\307\273\303\303\273"
#line 280
),((const UBYTE *)"ISTOGRAMMA"),((const UBYTE *)"\025\007\023\006\036\035"),((const UBYTE *)"HISTOGRAM"),((const UBYTE *)"HISTOGRAM"),((const UBYTE *)"HISTOGRAM"),((const UBYTE *)"HISTOGRAM"),((const UBYTE *)"HISTOGRAMA"),((const UBYTE *)"\202\207\220\221\215\202\217\177\213\213\177"),((const UBYTE 
#line 280
*)"HISTOGRAMMI"),((const UBYTE *)"HISTOGRAM"),((const UBYTE *)"H\017STOGRAM")};


const UBYTE *const huge cMSG_ReportTitle[19] = {((const UBYTE *)"\361\362\375\363\352\346"),((const UBYTE *)"VENTILATION RAPPORT"),((const UBYTE *)"BEATMUNGSREPORT"),((const UBYTE *)"VENTILATION REPORT"),((const UBYTE *)"VENTILATION REPORT"),((const UBYTE *)"INFORME DE VENTILACION"),((const UBYTE *)"RAPPORT VENTILATION"
#line 283
),((const UBYTE *)"\273\304\273\314\305\307\273 \273\276\307\250\311\303\305\313"),((const UBYTE *)"REPORT VENTILAZIONE"),((const UBYTE *)"VENTILATION REPORT"),((const UBYTE *)"VENTILATION REPORT"),((const UBYTE *)"VENTILATIERAPPORT"),((const UBYTE *)"VENTILASJONSRAPPORT"),((const UBYTE *)"RAPORT WENTYLACJI"
#line 283
),((const UBYTE *)"INFORME DE VENTILA=AO"),((const UBYTE *)"\215\221\226\204\221 \215 \201\204\214\221\207]\242\225\207\207"),((const UBYTE *)"VENTILAATIO RAPORTTI"),((const UBYTE *)"VENTILATION RAPPORT"),((const UBYTE *)"VENTILASYON RAPORU")};
const UBYTE *const huge cMSG_VentTimeReport[19] = {((const UBYTE *)"~\026\354\263\234\365"),((const UBYTE *)"Vent gennemsnit"),((const UBYTE *)"Beatmungszeit"),((const UBYTE *)"Vent Time"),((const UBYTE *)"Vent Time"),((const UBYTE *)"Promedio Vent"),((const UBYTE *)"Dur\322e de ventilation"),((
#line 284
const UBYTE *)"\303.\305. \353\024\360\026\367\025"),((const UBYTE *)"Media Vent/gg"),((const UBYTE *)"Vent Time"),((const UBYTE *)"Vent Time"),((const UBYTE *)"Vent. tijd "),((const UBYTE *)"Vent. Tid"),((const UBYTE *)"Wentylacja \025rednio"),((const UBYTE *)"Prom\322dio Vent"),((const UBYTE *)"\201\263\250\257\303 \207\201]"
#line 284
),((const UBYTE *)"Vent.Keskiarvo."),((const UBYTE *)"Genomsn vent"),((const UBYTE *)"Averaj vent")};
const UBYTE *const huge cMSG_ReportDay[19] = {((const UBYTE *)"on"),((const UBYTE *)"on"),((const UBYTE *)"am"),((const UBYTE *)"on"),((const UBYTE *)"on"),((const UBYTE *)"el"),((const UBYTE *)"le"),((const UBYTE *)"on"),((const UBYTE *)"il"),((const UBYTE *)"on"),((const UBYTE *)"on"),((const 
#line 285
UBYTE *)"aan"),((const UBYTE *)"p\331"),((const UBYTE *)"od"),((const UBYTE *)"el"),((const UBYTE *)" "),((const UBYTE *)"P\332\332ll\332"),((const UBYTE *)"on"),((const UBYTE *)"on")};
const UBYTE *const huge cMSG_ReportTableTitle[19] = {((const UBYTE *)"\237\350=\001\310\272[\006"),((const UBYTE *)"Sidste monitoreringsdag"),((const UBYTE *)"Monitoring letzter Tag"),((const UBYTE *)"Last day monitoring"),((const UBYTE *)"Last day monitoring"),((const UBYTE *)"Monitorizacion ultimo dia"
#line 286
),((const UBYTE *)"Monitorages sur la derni\324re journ\322e"),((const UBYTE *)"\312\366\373\366\030\027\362\361\362 \367\374\357\024\362 \023\362\024\362\372\377\373\377\036\370\367\026\367\025"),((const UBYTE *)"Ultimo gg Monitorato"),((const UBYTE *)"Last day monitoring"),((const UBYTE *)"Last day monitoring"
#line 286
),((const UBYTE *)"Laatste monitoring dag"),((const UBYTE *)"Sist overv\331ket"),((const UBYTE *)"Dane z ostatniego dnia"),((const UBYTE *)"Monitoriza\325ao ultimo dia"),((const UBYTE *)"\213\306\240\253\266\306\263\253\240\246 \252\243 \264\267\266\255\253"),((const UBYTE *)"Viimeinen monitorointip\332iv\332"
#line 286
),((const UBYTE *)"Senast \313vervakad "),((const UBYTE *)"Son monit\313rizasyon bilgileri")};
const UBYTE *const huge cMSG_VtiReport[19] = {((const UBYTE *)"Vti"),((const UBYTE *)"VTI"),((const UBYTE *)"Vti"),((const UBYTE *)"VtI"),((const UBYTE *)"VtI"),((const UBYTE *)"VTI"),((const UBYTE *)"Vti"),((const UBYTE *)"VtI"),((const UBYTE *)"Vt I"),((const UBYTE *)"VTI"),((const UBYTE *)"VTI"),
#line 287
((const UBYTE *)"VTI"),((const UBYTE *)"VTI"),((const UBYTE *)"VTI"),((const UBYTE *)"VTI"),((const UBYTE *)"Vt \245\247\306\270\243"),((const UBYTE *)"VTI"),((const UBYTE *)"VTI"),((const UBYTE *)"VTI")};
const UBYTE *const huge cMSG_VteReport[19] = {((const UBYTE *)"Vte"),((const UBYTE *)"VTE"),((const UBYTE *)"Vte"),((const UBYTE *)"VtE"),((const UBYTE *)"VtE"),((const UBYTE *)"VTE"),((const UBYTE *)"Vte"),((const UBYTE *)"VtE"),((const UBYTE *)"Vt E"),((const UBYTE *)"VTE"),((const UBYTE *)"VTE"),
#line 288
((const UBYTE *)"VTE"),((const UBYTE *)"VTE"),((const UBYTE *)"VTE"),((const UBYTE *)"VTE"),((const UBYTE *)"Vt \245\277\247\306\270\243"),((const UBYTE *)"VTE"),((const UBYTE *)"VTE"),((const UBYTE *)"VTE")};
const UBYTE *const huge cMSG_VmReport[19] = {((const UBYTE *)"Vm"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"Vol M"),((const UBYTE *)"Vm"),((const UBYTE *)"M.Vol"),((const UBYTE *)"Vol Min"),((const UBYTE *)"M.Vol"),((const 
#line 289
UBYTE *)"M.Vol"),((const UBYTE *)"AMV"),((const UBYTE *)"M.Vol"),((const UBYTE *)"MVI"),((const UBYTE *)"Vol M"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"M.Vol"),((const UBYTE *)"D Hac")};
const UBYTE *const huge cMSG_Spo2Report[19] = {((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE
#line 290
 *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2"),((const UBYTE *)"SpO2")};
const UBYTE *const huge cMSG_IAReport[19] = {((const UBYTE *)"\321\211\220\232"),((const UBYTE *)"Al"),((const UBYTE *)"Apnoe Index"),((const UBYTE *)"AI"),((const UBYTE *)"AI"),((const UBYTE *)"I Apnea"),((const UBYTE *)"IA"),((const UBYTE *)"AI"),((const UBYTE *)"AI"),((const UBYTE *)"\322\332\331\355\361"
#line 291
),((const UBYTE *)"AI"),((const UBYTE *)"AI"),((const UBYTE *)"Al"),((const UBYTE *)"AI"),((const UBYTE *)"I Apneia"),((const UBYTE *)"\207\240\247 \243\262\240\306\301"),((const UBYTE *)"AI"),((const UBYTE *)"AI"),((const UBYTE *)"Apne")};
const UBYTE *const huge cMSG_SpontReport[19] = {((const UBYTE *)"Spont"),((const UBYTE *)"Spontan"),((const UBYTE *)"Spontan"),((const UBYTE *)"Spont cyc"),((const UBYTE *)"Spont cyc"),((const UBYTE *)"Espont"),((const UBYTE *)"Spont"),((const UBYTE *)"Spont cyc"),((const UBYTE *)"Spont"),((const 
#line 292
UBYTE *)"Spont"),((const UBYTE *)"Spont cyc"),((const UBYTE *)"Spont. Cycli"),((const UBYTE *)"Spontan"),((const UBYTE *)"SPONT"),((const UBYTE *)"Espon."),((const UBYTE *)"% \220\262\306\240\266"),((const UBYTE *)"Spontaanit syklit %"),((const UBYTE *)"Spontan"),((const UBYTE *)"Spont")};
const UBYTE *const huge cMSG_FrReport[19] = {((const UBYTE *)"\021\016\374\303"),((const UBYTE *)"Fr"),((const UBYTE *)"Af"),((const UBYTE *)"Rate"),((const UBYTE *)"Rate"),((const UBYTE *)"Fr"),((const UBYTE *)"Fr "),((const UBYTE *)"Rate"),((const UBYTE *)"Freq"),((const UBYTE *)"\333\361"),((
#line 293
const UBYTE *)"Rate"),((const UBYTE *)"Frequentie"),((const UBYTE *)"Fr"),((const UBYTE *)"RR"),((const UBYTE *)"Fr"),((const UBYTE *)"\226;"),((const UBYTE *)"Taajuus"),((const UBYTE *)"Fr"),((const UBYTE *)"F")};
const UBYTE *const huge cMSG_LeakReport[19] = {((const UBYTE *)"\277\263"),((const UBYTE *)"Laekager"),((const UBYTE *)"Leckagen"),((const UBYTE *)"Leak"),((const UBYTE *)"Leak"),((const UBYTE *)"Fuga"),((const UBYTE *)"Fuite"),((const UBYTE *)"Leak"),((const UBYTE *)"Leak"),((const UBYTE *)"\277\304\235"
#line 294
),((const UBYTE *)"Leak"),((const UBYTE *)"Lekkage"),((const UBYTE *)"Lekkasje"),((const UBYTE *)"Przeciek"),((const UBYTE *)"Fuga"),((const UBYTE *)"\222\266\250\273\255\253"),((const UBYTE *)"Vuoto"),((const UBYTE *)"L\332ck"),((const UBYTE *)"Ka\325ak")};
const UBYTE *const huge cMSG_PipReport[19] = {((const UBYTE *)"\263\355\t\210"),((const UBYTE *)"IPAP"),((const UBYTE *)"PIP"),((const UBYTE *)"Paw"),((const UBYTE *)"Paw"),((const UBYTE *)"Pi media"),((const UBYTE *)"Pi "),((const UBYTE *)"Paw"),((const UBYTE *)"Press"),((const UBYTE *)"Paw"),((
#line 295
const UBYTE *)"Paw"),((const UBYTE *)"IPAP"),((const UBYTE *)"IPAP"),((const UBYTE *)"PIP"),((const UBYTE *)"Pi media"),((const UBYTE *)"P \245\247\306\270\243 \264\263"),((const UBYTE *)"IPAP"),((const UBYTE *)"IPAP"),((const UBYTE *)"PIP")};
const UBYTE *const huge cMSG_TapneaReport[19] = {((const UBYTE *)"\321\211\234\365"),((const UBYTE *)"Apnea tid"),((const UBYTE *)"Apnoezeit"),((const UBYTE *)"Apnea Ti"),((const UBYTE *)"Apnea Ti"),((const UBYTE *)"T Apnea"),((const UBYTE *)"Tapn\322e "),((const UBYTE *)"Apnea Ti"),((const UBYTE *)"T Apnea"
#line 296
),((const UBYTE *)"\346\370\322\332\331\364\f"),((const UBYTE *)"Apnea Ti"),((const UBYTE *)"Apneutijd"),((const UBYTE *)"Apnea tid"),((const UBYTE *)"Ta Apnea"),((const UBYTE *)"T. Apneia"),((const UBYTE *)"T \243\262\240\306\301"),((const UBYTE *)"Apnea-aika"),((const UBYTE *)"Apnea tid"),((const 
#line 296
UBYTE *)"Apnea T")};
const UBYTE *const huge cMSG_ContrReport[19] = {((const UBYTE *)"\225^\354\263"),((const UBYTE *)"Kontrol"),((const UBYTE *)"% Kontrollierte Beatmung"),((const UBYTE *)"Contr cyc"),((const UBYTE *)"Contr cyc"),((const UBYTE *)"Controlad"),((const UBYTE *)"Contr"),((const UBYTE *)"Contr cyc"),((const
#line 297
 UBYTE *)"% Atti Contr"),((const UBYTE *)"Control"),((const UBYTE *)"Contr cyc"),((const UBYTE *)"Gecontrolleerde. Cycli"),((const UBYTE *)"Kontroll "),((const UBYTE *)"KONTR"),((const UBYTE *)"Controlad"),((const UBYTE *)"% \216\263\253\240\267\247"),((const UBYTE *)"Kontrolloidut syklit %"),((
#line 297
const UBYTE *)"Kontroll "),((const UBYTE *)"Kontr")};


const UBYTE *const huge cMSG_TitleUSB[19] = {((const UBYTE *)"USB MEMORY DEVICE"),((const UBYTE *)"USB MEMORY DEVICE"),((const UBYTE *)"USB MEMORY STICK"),((const UBYTE *)"USB MEMORY DEVICE"),((const UBYTE *)"USB MEMORY DEVICE"),((const UBYTE *)"DISPOSITIVO USB"),((const UBYTE *)"USB MEMORY DEVICE")
#line 300
,((const UBYTE *)"USB MEMORY DEVICE"),((const UBYTE *)"USB MEMORY DEVICE"),((const UBYTE *)"USB MEMORY DEVICE"),((const UBYTE *)"USB MEMORY DEVICE"),((const UBYTE *)"USB MEMORY DEVICE"),((const UBYTE *)"USB MINNEBRIKKE"),((const UBYTE *)"ZARZ\022DZANIE PAMI\027CI\022 USB"),((const UBYTE *)"DISPOSITIVO USB"
#line 300
),((const UBYTE *)"USB @\177\217\221\177 \216\177\213\242\221\207"),((const UBYTE *)"USB MEMORY DEVICE"),((const UBYTE *)"USB MEMORY DEVICE"),((const UBYTE *)"USB  B\326L\334M\334")};
const UBYTE *const huge cMSG_EraseKey[19] = {((const UBYTE *)"erase key"),((const UBYTE *)"Slette noegle"),((const UBYTE *)"USB l\313schen"),((const UBYTE *)"Erase Key"),((const UBYTE *)"Erase Key"),((const UBYTE *)"Borrar Disp"),((const UBYTE *)"Effacer cl\322 USB"),((const UBYTE *)"\311\363\030\026\371\374\035 \301\373\366\371\365\371\377\036"
#line 301
),((const UBYTE *)"Cancellazione Chiave"),((const UBYTE *)"\262\330\234\304"),((const UBYTE *)"Erase Key"),((const UBYTE *)"USB stick wissen"),((const UBYTE *)"Slettetast"),((const UBYTE *)"Skasuj Pami\030\034 USB"),((const UBYTE *)"Apagar Disp."),((const UBYTE *)"@\240\306\262\255\243 \267\247\243\256\250\240\253\303"
#line 301
),((const UBYTE *)"TYHJENN< MUISTITIKKU"),((const UBYTE *)"Radera nyckel"),((const UBYTE *)"Silme Tu\016u")};
const UBYTE *const huge cMSG_TransferOnUSB[19] = {((const UBYTE *)"transfer settings on"),((const UBYTE *)"Optage indstilling til"),((const UBYTE *)"Einstellungen Transfer ein"),((const UBYTE *)"Transfer settings on"),((const UBYTE *)"Transfer settings on"),((const UBYTE *)"Transferencia ajustes"),(
#line 302
(const UBYTE *)"Transf\322rer R\322glages sur"),((const UBYTE *)"\303\366\027\362\031\377\024\356 \307\030\370\374\361\026\366\034\375"),((const UBYTE *)"Impostazioni Trasferimento"),((const UBYTE *)"Transfer settings on"),((const UBYTE *)"Transfer settings on"),((const UBYTE *)"Overdracht instelling aan"
#line 302
),((const UBYTE *)"Overf\312rt innstilling p\331"),((const UBYTE *)"Transfer ustawie\037 do"),((const UBYTE *)"Transferencia ajustes"),((const UBYTE *)"\216\250\263\250\240\250\264\266\253 \247\243\240\240\277\250 \240\243"),((const UBYTE *)"Siirtoasetukset p\332\332lle"),((const UBYTE *)"\326verf\313r inst\332llning p\331"
#line 302
),((const UBYTE *)"Transfer Ayarlar\b A\325\bk")};
const UBYTE *const huge cMSG_TransferToVentil[19] = {((const UBYTE *)"VENT"),((const UBYTE *)"VENT"),((const UBYTE *)"RESP"),((const UBYTE *)"VENT"),((const UBYTE *)"VENT"),((const UBYTE *)"VENT"),((const UBYTE *)"VENT"),((const UBYTE *)"\273\276\307."),((const UBYTE *)"VENT"),((const UBYTE *)"VENT"
#line 303
),((const UBYTE *)"VENT"),((const UBYTE *)"VENT"),((const UBYTE *)"VENT"),((const UBYTE *)"RESP"),((const UBYTE *)"VENT"),((const UBYTE *)"\207\201]"),((const UBYTE *)"VENT"),((const UBYTE *)"VENT"),((const UBYTE *)"VENT")};
const UBYTE *const huge cMSG_TransferToKey[19] = {((const UBYTE *)"KEY"),((const UBYTE *)"USB"),((const UBYTE *)"USB"),((const UBYTE *)"KEY"),((const UBYTE *)"KEY"),((const UBYTE *)"DISP"),((const UBYTE *)"CLE"),((const UBYTE *)"\301\302\276\250"),((const UBYTE *)"KEY"),((const UBYTE *)"KEY"),((
#line 304
const UBYTE *)"KEY"),((const UBYTE *)"USB"),((const UBYTE *)"USB"),((const UBYTE *)"USB"),((const UBYTE *)"DISP"),((const UBYTE *)"@]\233\226"),((const UBYTE *)"KEY"),((const UBYTE *)"USB"),((const UBYTE *)"USB ")};
const UBYTE *const huge cMSG_ContRecordUSB[19] = {((const UBYTE *)"transfer continuously"),((const UBYTE *)"Optage uafbrudt"),((const UBYTE *)"Kontin. Transfer"),((const UBYTE *)"Transfer Continuously"),((const UBYTE *)"Transfer Continuously"),((const UBYTE *)"Transfer Tiempo Real"),((const UBYTE *)"Enregistrer en continu"
#line 305
),((const UBYTE *)"\311\030\375. \303\366\027\362\031\377\024\356"),((const UBYTE *)"Trasferimento Continuo"),((const UBYTE *)"Transfer Continuously"),((const UBYTE *)"Transfer Continuously"),((const UBYTE *)"Continu overdracht"),((const UBYTE *)"Overf\312r kontinuerlig"),((const UBYTE *)"Ci\023g\033y transfer danych"
#line 305
),((const UBYTE *)"Transfer. Tempo Real"),((const UBYTE *)"\216\306\264\266\306\303\240\240\277\254 \262\250\263\250\240\306\264"),((const UBYTE *)"Jatkuva siirto"),((const UBYTE *)"\326verf\313r kontinuerligt"),((const UBYTE *)"S\304rekli Transfer")};
const UBYTE *const huge cMSG_TransferMonitUSB[19] = {((const UBYTE *)"transfer monitorings"),((const UBYTE *)"Optage monitoreringer"),((const UBYTE *)"Monitoring Transfer"),((const UBYTE *)"Transfer Monitorings"),((const UBYTE *)"Transfer Monitorings"),((const UBYTE *)"Transfer Monitoriz"),((const 
#line 306
UBYTE *)"Transf\322rer Monitorages"),((const UBYTE *)"\303\366\027. \306\362\024\362\372\377\373\377\036\370\367\026\367\025"),((const UBYTE *)"Trasferimento Monit"),((const UBYTE *)"Transfer Monitorings"),((const UBYTE *)"Transfer Monitorings"),((const UBYTE *)"Overdracht monitoring"),((const UBYTE
#line 306
 *)"Overf\312r overv\331kning"),((const UBYTE *)"Transfer Monitoringu"),((const UBYTE *)"Transf. Monitoriz."),((const UBYTE *)"\216\250\263\250\240\306\264 \247\243\240\240\277\270 \257\306\240\253\266\306\263\253\240\246\243"),((const UBYTE *)"Siirretyt tallennukset"),((const UBYTE *)"\326verf\313r \313vervakning"
#line 306
),((const UBYTE *)"Monit\313r Transferi")};
const UBYTE *const huge cMSG_TransferTrendUSB[19] = {((const UBYTE *)"transfer trends"),((const UBYTE *)"Optage trends"),((const UBYTE *)"Trends Transfer"),((const UBYTE *)"Transfer Trends"),((const UBYTE *)"Transfer Trends"),((const UBYTE *)"Transfer Tendencias"),((const UBYTE *)"Transf\322rer Tendances"
#line 307
),((const UBYTE *)"\303\366\027. \254\024\362\364. \306\362\024\362\026."),((const UBYTE *)"Trasferimento Trend"),((const UBYTE *)"Transfer Trends"),((const UBYTE *)"Transfer Trends"),((const UBYTE *)"Overdracht trends"),((const UBYTE *)"Overf\312r trender"),((const UBYTE *)"Transfer Trend\314w"),((
#line 307
const UBYTE *)"Transfer Tendencias"),((const UBYTE *)"\216\250\263\250\240\306\264 \266\263\250\240\247\306\245"),((const UBYTE *)"Siirretyt trendit"),((const UBYTE *)"\326verf\313r trender"),((const UBYTE *)"Trend Transferi")};
const UBYTE *const huge cMSG_TransferEventsUSB[19] = {((const UBYTE *)"transfer events "),((const UBYTE *)"Optage haendelser"),((const UBYTE *)"Ereigniss Transfer"),((const UBYTE *)"Transfer Events "),((const UBYTE *)"Transfer Events "),((const UBYTE *)"Transfer Eventos"),((const UBYTE *)"Transf\322rer Ev\322nements"
#line 308
),((const UBYTE *)"\303\366\027. \311\030\374\363\356\375\027\034\375"),((const UBYTE *)"Eventi Trasferimento"),((const UBYTE *)"Transfer Events "),((const UBYTE *)"Transfer Events "),((const UBYTE *)"Overdracht events"),((const UBYTE *)"Overf\312r hendelser"),((const UBYTE *)"Transfer Zdarze\037"),
#line 308
((const UBYTE *)"Transfer Eventos"),((const UBYTE *)"\216\250\263\250\240\306\264 \264\306\244\277\266\253\254"),((const UBYTE *)"Siirretyt tapahtumat"),((const UBYTE *)"\326verf\313r h\332ndelser"),((const UBYTE *)"Olay Transferi")};


const UBYTE *const huge cMSG_UsbErrDisconnect[19] = {((const UBYTE *)"transfer error|key disconnection"),((const UBYTE *)"OPTAGE FEJL|NOEGLE FRAKOBLET"),((const UBYTE *)"TRANSFER FEHLER|USB FEHLT"),((const UBYTE *)"TRANSFER ERROR|USB DISCONNECTION"),((const UBYTE *)"TRANSFER ERROR|KEY DISCONNECTION"
#line 311
),((const UBYTE *)"ERROR DE TRANSF|DESCONEXION DISP"),((const UBYTE *)"ERREUR DE TRANSFERT|DECONNEXION CLE"),((const UBYTE *)"\311\314\273\302\303\273 \303\276\312\273\314\305\307\273\311|\273\306\305\311\313\304\275\276\311\277 \301\302\276\250\275\250\305" "\313"),((const UBYTE *)"Errore Trasferimento|USB Disconnessa"
#line 311
),((const UBYTE *)"Trancfer\231\276\304|USB DISCONNECTION"),((const UBYTE *)"TRANSFER ERROR|KEY DISCONNECTION"),((const UBYTE *)"OVERDRACHT FOUT|STICK DISCONNECTIE"),((const UBYTE *)"OVERF\330RINGSFEIL|USB-STICK FRAKOBLET"),((const UBYTE *)"B\021\022D TRANSFERU|OD\021\022CZENIE PAMI\027CI USB"),((
#line 311
const UBYTE *)"ERRO DE TRANSF.|DESCONEXAO DISP"),((const UBYTE *)"\215\274\253\244\255\243 \262\250\263\250\240\306\264\243|\215\266\264\306\250\247 USB"),((const UBYTE *)"SIIRROSSA VIRHE|USB IRTI"),((const UBYTE *)"\326verf\313rings fel|USB Nyckel urkopplad"),((const UBYTE *)"TRANSFER HATASIUSB  BA\vLANTISIZLI\vI"
#line 311
)};
const UBYTE *const huge cMSG_UsbErrFullKey[19] = {((const UBYTE *)"transfer error|key full"),((const UBYTE *)"OPTAGE FEJL|NOEGLE FULD"),((const UBYTE *)"TRANSFER FEHLER|USB VOLL"),((const UBYTE *)"TRANSFER ERROR|USB FULL"),((const UBYTE *)"TRANSFER ERROR|KEY FULL"),((const UBYTE *)"ERROR DE TRANSF|DISPOS LLENO"
#line 312
),((const UBYTE *)"ERREUR DE TRANSFERT|CLE PLEINE"),((const UBYTE *)"\311\314\273\302\303\273 \303\276\312\273\314\305\307\273\311|\301\302\276\250\275\250 \306\302\277\307\276\311"),((const UBYTE *)"Errore Trasferimento|Chiave Piena"),((const UBYTE *)"Trancfer\231\276\304|USB FULL"),((const UBYTE *
#line 312
)"TRANSFER ERROR|KEY FULL"),((const UBYTE *)"OVERDRACHTFOUT|STICK VOL"),((const UBYTE *)"OVERF\330RINGSFEIL|USB-STICK FULL"),((const UBYTE *)"B\021\022D TRANSFERU|PE\021NA PAMI\027\026 USB"),((const UBYTE *)"ERRO DE TRANSF.|DISPOS. CHEIO"),((const UBYTE *)"\215\274\253\244\255\243 \262\250\263\250\240\306\264\243|USB \262\250\263\250\262\306\256\240\250\240"
#line 312
),((const UBYTE *)"SIIRROSSA VIRHE|USB T<YSI"),((const UBYTE *)"\326verf\313rings fel|USB Nyckel full"),((const UBYTE *)"TRANSFER HATASI|USB DOLU")};
const UBYTE *const huge cMSG_UsbErrTooManyKeys[19] = {((const UBYTE *)"transfer not allowed|remove a key"),((const UBYTE *)"OPTAGNING IKKE TILLADT|FJERN NOEGLE"),((const UBYTE *)"TRANSFER NICHT ERLAUBT|USB ENTFERNEN"),((const UBYTE *)"TRANSFER NOT ALLOWED|REMOVE A KEY"),((const UBYTE *)"TRANSFER NOT ALLOWED|REMOVE A KEY"
#line 313
),((const UBYTE *)"TRANSF NO PERMITIDA|SACAR UN DISPOS"),((const UBYTE *)"TRANSFERT IMPOSSIBLE|ENLEVER UNE CLE"),((const UBYTE *)"\303\277 \276\343\305\313\311\250\305\275\305\312\277\303\276\304\277 \303\276\312\273\314\305\307\273|\273\306\305\303\273\301\307" "\313\304\311\277 \301\302\276\250\275\250\305\313"
#line 313
),((const UBYTE *)"Trasferimento Non consentito|Problemi Tecnici"),((const UBYTE *)"TRANSFER NOT ALLOWED|REMOVE A KEY"),((const UBYTE *)"TRANSFER NOT ALLOWED|REMOVE A KEY"),((const UBYTE *)"OVERDRACHT NIET MOGELIJK|VERWIJDER STICK"),((const UBYTE *)"OVERF\330RING IKKE|TILLATT FJERN USB-STICK"),((
#line 313
const UBYTE *)"TRANSFER NIEDOZWOLONY|OD\021\022CZ PAMI\027\026 USB"),((const UBYTE *)"TRANSF.NO PERMITIDA|TIRAR UM DISPOS."),((const UBYTE *)"\216\250\263\250\240\306\264 \240\250\245\306\252\257\306\251\250\240|\207\252\245\256\250\273\300 USB"),((const UBYTE *)"SIIRTO EI MAHD|IRROITA USB"),((const
#line 313
 UBYTE *)"\326verf\313ring ej till\331ten|ta bort USB nyckel"),((const UBYTE *)"TRANSFERE \017Z\017N YOK|USB \307IKARIN ")};
const UBYTE *const huge cMSG_UsbErrTransfer[19] = {((const UBYTE *)"transfer error|technical problem"),((const UBYTE *)"OPTAGE FEJL|TEKNISK PROBLEM"),((const UBYTE *)"TRANSFERFEHLER|TECHNISCHES PROBLEM"),((const UBYTE *)"TRANSFER ERROR|TECHNICAL PROBLEM"),((const UBYTE *)"TRANSFER ERROR|TECHNICAL PROBLEM"
#line 314
),((const UBYTE *)"ERROR DE TRANSF|FALLO TECNICO"),((const UBYTE *)"ERREUR DE TRANSFERT|PROBLEME TECHNIQUE"),((const UBYTE *)"\311\314\273\302\303\273 \303\276\312\273\314\305\307\273\311|\312\276\353\304\250\301\305 \306\307\305\274\302\277\303\273"),((const UBYTE *)"Errore Trasferimento|Problema Tecnico"
#line 314
),((const UBYTE *)"Trancfer\231\276\304|TECHNICAL PROBLEM"),((const UBYTE *)"TRANSFER ERROR|TECHNICAL PROBLEM"),((const UBYTE *)"OVERDRACHT FOUT|TECHNISCH PROBLEEM"),((const UBYTE *)"OVERF\330RINGSFEIL|TEKNISK PROBLEM"),((const UBYTE *)"B\021\022D TRANSFERU|PROBLEM TECHNICZNY"),((const UBYTE *)"ERRO DE TRANSF.|FALHA TECNICA"
#line 314
),((const UBYTE *)"\215\274\253\244\255\243 \262\250\263\250\240\306\264\243|\221\250\270\240\253\273. \262\263\306\244\256\250\257\243"),((const UBYTE *)"SIIRROSSA VIRHE|TEKNINEN ONGELMA"),((const UBYTE *)"\326verf\313rings fel|tekniska problem"),((const UBYTE *)"TRANSFER HATASI|TEKN\017K PROBLEM")
#line 314
};
const UBYTE *const huge cMSG_UsbErrErase[19] = {((const UBYTE *)"erase error|technical problem"),((const UBYTE *)"SLET FEJL|TEKNISK PROBLEM"),((const UBYTE *)"L\326SCHFEHLER|TECHNISCHES PROBLEM"),((const UBYTE *)"ERASE ERROR|TECHNICAL PROBLEM"),((const UBYTE *)"ERASE ERROR|TECHNICAL PROBLEM"),((
#line 315
const UBYTE *)"ERROR DE BORRADO|FALLO TECNICO"),((const UBYTE *)"ERREUR D\'EFFACEMENT|PROBLEME TECHNIQUE"),((const UBYTE *)"\311\314\273\302\303\273 \275\250\273\254\307\273\314\277\311|\312\276\353\304\250\301\305 \306\307\305\274\302\277\303\273"),((const UBYTE *)"Errore Cancellazione|Problema Tecnico"
#line 315
),((const UBYTE *)"ERASE ERROR|TECHNICAL PROBLEM"),((const UBYTE *)"ERASE ERROR|TECHNICAL PROBLEM"),((const UBYTE *)"WIS FOUT|TECHNISCH PROBLEEM"),((const UBYTE *)"PROBLEM \305|SLETTE TEKNISK FEIL"),((const UBYTE *)"B\021\022D KASOWANIA|PROBLEM TECHNICZNY"),((const UBYTE *)"ERRO DE APAGAR|FALHA TECNICA"
#line 315
),((const UBYTE *)"\215\274\253\244\255\243 \267\247\243\256\250\240\253\303|\221\250\270\240\253\273. \262\263\306\244\256\250\257\243"),((const UBYTE *)"POISTA VIRHE|TEKNINEN ONGELMA"),((const UBYTE *)"Problem att radera|tekniska problem"),((const UBYTE *)"S\017LME HATASI|TEKN\017K PROBLEM")};
const UBYTE *const huge cMSG_UsbErrFile[19] = {((const UBYTE *)"transfer not allowed|file not found or wrong"),((const UBYTE *)"OPTAGNING IKKE TILLADT|FIL IKKE FUNDET EL. FORKERT"),((const UBYTE *)"TRANSFER NICHT ERLAUBT|DATEI FEHLT ODER FALSCH"),((const UBYTE *)"TRANSFER NOT ALLOWED|FILE NOT FOUND OR WRONG"
#line 316
),((const UBYTE *)"TRANSFER NOT ALLOWED|FILE NOT FOUND OR WRONG"),((const UBYTE *)"TRANSF NO PERMITIDA|ARCHIVO DA\321ADO O AUSENTE"),((const UBYTE *)"TRANSFERT IMPOSSIBLE|FICHIER INTROUVABLE OU ERRONE"),((const UBYTE *)"\303\277 \276\343\305\313\311\250\305\275\305\312\277\303\276\304\277 \303\276\312\273\314\305\307\273|\273\306\305\313\311\250\273"
#line 316
 " \324 \311\314\273\302\303\273 \273\307\353\276\250\305\313"),((const UBYTE *)"Trasferimento Non Consentito|File Non Trovato o Errato"),((const UBYTE *)"TRANSFER NOT ALLOWED|FILE NOT FOUND OR WRONG"),((const UBYTE *)"TRANSFER NOT ALLOWED|FILE NOT FOUND OR WRONG"),((const UBYTE *)"OVERDRACHT NIET MOGELIJK|BESTAND NIET GEVONDEN OF FOUT"
#line 316
),((const UBYTE *)"OVERF\330RING IKKE|TILLATT  FINNER IKKE FILER"),((const UBYTE *)"TRANSFER NIEDOZWOLONY|PLIK NIEODNALEZIONY LUB USZKODZONY"),((const UBYTE *)"TRANSF.NAO PERMITIDA|ARQUIVO ESTRAGADO O AUSENTE"),((const UBYTE *)"\216\250\263\250\240\306\264 \240\250\245\306\252\257\306\251\250\240|\223\243\254\256 \240\250 \240\243\254\247\250\240 \253\256"
#line 316
 "\253 \240\250\245\250\263\250\240"),((const UBYTE *)"SIIRTO EI MAHDOLLINEN|TIEDOSTOA EI L\326YDY TAI V<<R<"),((const UBYTE *)"\326verf\313ring ej till\331ten|filerna hittas ej"),((const UBYTE *)"TRANSFERE \017Z\017N YOK|DOSYA BULUNAMADI YANLI\t DOSYA")};
const UBYTE *const huge cMSG_UsbErrPortability[19] = {((const UBYTE *)"transfer not allowed|incompatible settings "),((const UBYTE *)"OPTAGNING IKKE TILLADT|UKOMPATIBLE INDSTILLINGER"),((const UBYTE *)"TRANSFER NICHT ERLAUBT|INKOMPATIBLE EINSTELLUNGEN"),((const UBYTE *)"TRANSFER NOT ALLOWED|INCOMPATIBLE SETTINGS "
#line 317
),((const UBYTE *)"TRANSFER NOT ALLOWED|INCOMPATIBLE SETTINGS "),((const UBYTE *)"TRANSF NO PERMITIDA|AJUSTES INCOMPATIBLES"),((const UBYTE *)"TRANSFERT IMPOSSIBLE|REGLAGES ET VENT INCOMPATIBLES"),((const UBYTE *)"\303\277 \276\343\305\313\311\250\305\275\305\312\277\303\276\304\277 \303\276\312\273\314\305\307\273|\273\311\313\303\274\273\312"
#line 317
 "\276\311 \307\313\335\303\250\311\276\250\311"),((const UBYTE *)"Trasferimento Non Consentito|Impostazioni Non Compatibili"),((const UBYTE *)"TRANSFER NOT ALLOWED|INCOMPATIBLE SETTINGS "),((const UBYTE *)"TRANSFER NOT ALLOWED|INCOMPATIBLE SETTINGS "),((const UBYTE *)"OVERDRACHT NIET MOGELIJK|ONVERENIGBARE INSTELLINGEN"
#line 317
),((const UBYTE *)"OVERF\330RING IKKE TILLATT|IKKE KOMPATIBLE INNSTILLINGER "),((const UBYTE *)"TRANSFER NIEDOZWOLONY|NIEKOMPATYBILNE USTAWIENIA"),((const UBYTE *)"TRANSF.NAO PERMITIDA|AJUSTES INCOMPATIVEIS"),((const UBYTE *)"\216\250\263\250\240\306\264 \240\250\245\306\252\257\306\251\250\240|\214\250\264\306\245\257\250\264\266\253\257\277\250 \240\243"
#line 317
 "\264\266\263\306\254\255\253"),((const UBYTE *)"SIIRTO EI MAHDOLLINEN|V<<R<T ASETUKSET"),((const UBYTE *)"\326verf\313ring ej till\331ten|icke kompatibla inst\332llningar"),((const UBYTE *)"TRANSFERE \017Z\017N YOK|UYUMSUZ AYARLAMA")};
const UBYTE *const huge cMSG_SettingsOverWrite[19] = {((const UBYTE *)"caution this function erases|the precedent settings"),((const UBYTE *)"ADVARSEL FUNKTION SLETTER|FORUDGAAENDE INDSTILLINGS FILE"),((const UBYTE *)"ACHTUNG DIESE FUNKTION L\326SCHT|VORHERIGE EINSTELLDATEI"),((const UBYTE *)"CAUTION THIS FUNCTION ERASES|THE PREVIOUS SETTINGS"
#line 318
),((const UBYTE *)"CAUTION THIS FUNCTION ERASES|THE PRECEDENT SETTINGS"),((const UBYTE *)"PRECAUCION BORRADO|DE AJUSTES ANTERIORES"),((const UBYTE *)"ATTENTION CETTE FONCTION|ECRASE LES REGLAGES PRECEDENTS "),((const UBYTE *)"\306\307\305\311\305\353\277  \275\250\273\254\307.|\273\307\353\276\250\305\313 \306\307\305\301\273\335. \307\313\335\303."
#line 318
),((const UBYTE *)"Questa Funzione Elimina|i File di Impostazione"),((const UBYTE *)"CAUTION THIS FUNCTION ERASES|THE PREVIOUS SETTINGS"),((const UBYTE *)"CAUTION THIS FUNCTION ERASES|THE PRECEDENT SETTINGS"),((const UBYTE *)"PAS OP DEZE FUNCTIE WIST|VOORGAAND INSTELLINGENBESTAND"),((const UBYTE *)"ADVARSEL DENNE FUNKSJONEN SLETTER|TIDLIGERE INNSTILLINGER"
#line 318
),((const UBYTE *)"UWAGA TA FUNKCJA|KASUJE PLIK Z NASTAWAMI"),((const UBYTE *)"PRECAU\307AO. APAGADO|DE AJUSTES ANTERIORES"),((const UBYTE *)"\201\240\253\257\243\240\253\250 \301\266\243 \223\267\240\255\271\253\303 \264\266\253\263\243\250\266|\262\263\250\247\277\247" "\267\275\253\250 \240\243\264\266\263\306\254\255\253"
#line 318
),((const UBYTE *)"VAROITUS T<M< TOIMINTO POISTAA|ENNAKKOASETUSKANSION"),((const UBYTE *)"Varning denna funktion raderar|tidigare inst\332llningar"),((const UBYTE *)"UYARI BU FONKS\017YON|MEVCUT DOSYAYI S\017LER")};
const UBYTE *const huge cMSG_VentilCompatible[19] = {((const UBYTE *)"ventilators compatibles|of the settings are:"),((const UBYTE *)"VENTILATOR KOMPATIBLE|AF INDSTILLINGER ER:"),((const UBYTE *)"KOMPATIBLE RESPIRATOREN|DER EINSTELLUNGEN SIND:"),((const UBYTE *)"VENTILATORS COMPATIBLE|OF THE SETTINGS ARE:"
#line 319
),((const UBYTE *)"VENTILATORS COMPATIBLE|OF THE SETTINGS ARE:"),((const UBYTE *)"VENTILADORES COMPATIBLES|CON LOS AJUSTES SON: "),((const UBYTE *)"VENTILATEURS COMPATIBLES|DES REGLAGES:"),((const UBYTE *)"\311\313\303\274\273\312\305\312\277\312\273 \273\304\273\306\304\276\313\311\312\277\307\273|\273\306\305 \312\250\311 \307\313"
#line 319
 "\335\303. \276\250\304\273\250:"),((const UBYTE *)"Ventilatori Compatibili|le Impostazioni Sono:"),((const UBYTE *)"VENTILATORS COMPATIBLE|OF THE SETTINGS ARE:"),((const UBYTE *)"VENTILATORS COMPATIBLES|OF THE SETTINGS ARE:"),((const UBYTE *)"VENTILATOREN VERENIGBAAR|MET INSTELLINGEN:"),((const 
#line 319
UBYTE *)"VENTILATOR KOMPATIBEL|MED INSTILLINGER ER:"),((const UBYTE *)"RESPIRATORY KOMPATYBILNE|Z PLIKIEM NASTAW:"),((const UBYTE *)"VENTILADORES COMPATIVEIS|COM OS AJUSTES SOM:"),((const UBYTE *)"\220\306\245\257\250\264\266\253\257\306\264\266\300|\240\243\264\266\263\306\250\255 \243\262\262\243\263\243\266\243 \207\201]"
#line 319
 ":"),((const UBYTE *)"ASETUKSIIN SOPIVAT VENTILAATTORIT:"),((const UBYTE *)"Ventilatorer kompatibla|med inst\332lln \332r:"),((const UBYTE *)"VENT\017L\017AT\326R UYUMLU|AYARLAMALAR :")};
const UBYTE *const huge cMSG_NotEnoughKeySpace[19] = {((const UBYTE *)"transfer not allowed| key capacity insufficient"),((const UBYTE *)"OPTAGNING IKKE TILLADT| NOEGLE KAPACITET UDUELIG"),((const UBYTE *)"TRANSFER NICHT ERLAUBT|USB UNZUREICHEND"),((const UBYTE *)"TRANSFER NOT ALLOWED|USB CAPACITY INSUFFICIENT"
#line 320
),((const UBYTE *)"TRANSFER NOT ALLOWED|USB CAPACITY INSUFFICIENT"),((const UBYTE *)"TRANSF NO PERMITIDA|CAPACIDAD DISPOS INSUFICIENTE"),((const UBYTE *)"TRANSFERT IMPOSSIBLE|CAPACITE CLE INSUFFISANTE"),((const UBYTE *)"\303\277 \276\343\305\313\311\250\305\275\305\312\277\303\276\304\277 \303\276\312\273\314\305\307\273|\273\304\276\306\273\307\301"
#line 320
 "\277\311 \353\355\307\277\312\250\301\305\312\277\312\273 \301\302\276\250\275\250\305\313"),((const UBYTE *)"Trasferimento Non Consentito|Capacit\333 Memoria Insufficiente"),((const UBYTE *)"TRANSFER NOT ALLOWED|USB CAPACITY INSUFFICIENT"),((const UBYTE *)"TRANSFER NOT ALLOWED| KEY CAPACITY INSUFFICIENT"
#line 320
),((const UBYTE *)"OVERDRACHT NIET MOGELIJK|STICK CAPACITEIT NIET VOLDOENDE"),((const UBYTE *)"OVERF\330RING IKKE TILLATT| UTILSTREKKELIG USB-MINNE"),((const UBYTE *)"TRANSFER NIEDOZWOLONY|POJEMNO\024\026 PAMI\027CI ZA MA\021A"),((const UBYTE *)"TRANSF.NAO PERMITIDA|CAPACIDADE DISPOS. INSUFICIENTE")
#line 320
,((const UBYTE *)"\216\250\263\250\240\306\264 \240\250\245\306\252\257\306\251\250\240|\214\250\247\306\264\266\243\266\306\273\240\243\303 \250\257" "\255\306\264\266\300 USB"),((const UBYTE *)"SIIRTO EI MAHDOLLINEN|USB KAPASITEETTI EI RIIT<"),((const UBYTE *)"\326verf\313ring ej till\331ten|Otillr\332cklig USB kapacitiet"
#line 320
),((const UBYTE *)"TRANSFERE \017Z\017N YOK|USB KAPAS\017TES\017 YETERS\017Z")};
const UBYTE *const huge cMSG_UsbErrTransfProcessing[19] = {((const UBYTE *)"transfer in progress...|remaining time :"),((const UBYTE *)"OPTAGNING I PROCES...|Remaining Time :"),((const UBYTE *)"TRANSFER L<UFT...|Restzeit :"),((const UBYTE *)"TRANSFER IN PROGRESS...|Remaining Time :"),((const UBYTE *
#line 321
)"TRANSFER IN PROGRESS...|Remaining Time :"),((const UBYTE *)"TRANSFERANCIA EN PROGRESO|Tiempo restante :"),((const UBYTE *)"TRANSFERT EN COURS...|Temps restant :"),((const UBYTE *)"\303\276\312\273\314\305\307\273 \311\276 \276\343\276\302\250\343\277...|\313\023\377\373\366\371\023\035\374\366\375\377\025 \353"
#line 321
 "\024\035\375\377\025 :"),((const UBYTE *)"Trasferimento in Corso...|Tempo Rimanente :"),((const UBYTE *)"TRANSFER IN PROGRESS...|Remaining Time :"),((const UBYTE *)"TRANSFER IN PROGRESS...|Remaining Time :"),((const UBYTE *)"OVERDRACHT IN WERKING...|Resterende Tijd :"),((const UBYTE *)"OVERF\330RING P\305G\305R...|Gjenst\331ende tid :"
#line 321
),((const UBYTE *)"TRANSFER DANYCH W TOKU...|POZOSTA\021Y CZAS:"),((const UBYTE *)"TRANSFERANCIA EM PROGRESO|TEMPO QUE FALTA"),((const UBYTE *)"\207\247\250\266 \262\250\263\250\240\306\264...|\215\264\266\243\256\306\264\300:"),((const UBYTE *)"SIIRTO K<YNNISS<...|aikaa j\332ljell\332 :"),((const 
#line 321
UBYTE *)"\326verf\313ring p\331g\331r...|\305terst\331ende tid :"),((const UBYTE *)"TRANSFER YAPILIYOR...|Remaining Time :")};
const UBYTE *const huge cMSG_UsbErrEraseProcessing[19] = {((const UBYTE *)"erase in progress...|remaining time :"),((const UBYTE *)"SLET I PROCES...|Remaining Time :"),((const UBYTE *)"L\326SCHEN L<UFT...|Restzeit :"),((const UBYTE *)"ERASE IN PROGRESS...|Remaining Time :"),((const UBYTE *)"ERASE IN PROGRESS...|Remaining Time :"
#line 322
),((const UBYTE *)"BORRADO EN PROGRESO|Tiempo restante :"),((const UBYTE *)"EFFACEMENT EN COURS...|Temps restant :"),((const UBYTE *)"\275\250\273\254\307\273\314\277 \311\276 \276\343\276\302\250\343\277...|\313\023\377\373\366\371\023\035\374\366\375\377\025 \353" "\024\035\375\377\025 :"),((const
#line 322
 UBYTE *)"Cancellazione in Corso...|Tempo Rimanente :"),((const UBYTE *)"ERASE IN PROGRESS...|Remaining Time :"),((const UBYTE *)"ERASE IN PROGRESS...|Remaining Time :"),((const UBYTE *)"WISSEN IN WERKING...|Resterende Tijd :"),((const UBYTE *)"SLETTING P\305G\305R...|Gjenst\331ende tid:"),((const 
#line 322
UBYTE *)"KASOWANIE DANYCH W TOKU...|POZOSTA\021Y CZAS:"),((const UBYTE *)"APAGAR EM PROGRESSO|TEMPO QUE FALTA"),((const UBYTE *)"\207\247\250\266 \306\273\253\264\266\255\243...|\215\264\266\243\256\306\264\300:"),((const UBYTE *)"POISTO K<YNNISS<...|aikaa j\332ljell\332:"),((const UBYTE *)"Radering p\331g\331r...|\305terst\331ende tid :"
#line 322
),((const UBYTE *)"S\017LME  YAPILIYOR...|Remaining Time :")};
