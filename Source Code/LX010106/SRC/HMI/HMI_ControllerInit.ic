// v_2.45.2, Mon Mar 30 17:40:25 2020
#line 1 "..\\..\\SRC\\HMI\\HMI_ControllerInit.cpp"
struct __T51439500;
#line 37 "..\\..\\SRC\\GENERAL\\enum.h"
enum e_SYMBOL {
LOGO_LEGENDAIR,
KEY_WHITE,
BAT,
BLACK_SQUARES,
FREE_SQUARE,
KEY,
LOS,
BLACK_LOS,
LESS_OR_MORE,
RAMPE1,
RAMPE2,
RISETIME1,
RISETIME2,
RISETIME3,
RISETIME4,
TRIGGER,
TRIGGERINV,
VENTIL,
LOCKS,
PAUSE,
VALVE_BLACK,
VALVE_WHITE,
CADRE_WHITE_BG,
CADRE_WHITE_HD,
CADRE_BLACK_BG,
CADRE_BLACK_HD,
TRIANGLE_BLACK,
TRIANGLE_WHITE,
FLECHE_GRAPH_HAUT,
FLECHE_GRAPH_DROITE,
CADRE_WHITE_HG,
CADRE_WHITE_BD,
CADRE_BLACK_HG,
CADRE_BLACK_BD,
BAT_INV,
CADRE_BLACK_BGw,
CADRE_BLACK_BDw,
CADRE_BLACK_HGw,
CADRE_BLACK_HDw,
CADRE_WHITE_HGw,
CADRE_WHITE_HDw,
CADRE_WHITE_BDw,
CADRE_WHITE_BGw,
BELL_BLACK,
ALARM_TRIANGLE_BLACK,
EQUAL,
HEART,
CADRE_WHITE_ALARM_HGw,
CADRE_WHITE_ALARM_HDw,
CADRE_WHITE_ALARM_BDw,
CADRE_WHITE_ALARM_BGw,
HEART_INVERSE_VIDEO,
ALARM_TRIANGLE_BLACK_DOT,
RAMPE3,
LOGO_M2,
LOGO_XL2,
LOGO_S2,
LOGO_XL2_US,


CHART_VERSION,
TRADEMARK,
COMPANY,
WHITE_SQUARE,
WHITE_LOCK,
NO};
#line 112
enum e_HMI_LANG {
HMI_LANG_CHINESE,
HMI_LANG_DANISH,
HMI_LANG_GERMAN,
HMI_LANG_ENGLISH,
HMI_LANG_ENGLISH_US,
HMI_LANG_SPANISH,
HMI_LANG_FRENCH,
HMI_LANG_GREEK,
HMI_LANG_ITALIAN,
HMI_LANG_JAPANESE,
HMI_LANG_KOREAN,
HMI_LANG_DUTCH,
HMI_LANG_NORWISH,
HMI_LANG_POLISH,
HMI_LANG_PORTUGUESE,
HMI_LANG_RUSSIAN,
HMI_LANG_FINNISH,
HMI_LANG_SWEDISH,
HMI_LANG_TURKISH};
#line 137
enum e_TI {
TIMIN,
TIMAX,
end_of_e_TI};



enum e_ActiveModeState {
ACTIVATED,

EXHALATION,
INSPIRATION,

PSV_EXHALATION,
PSV_INSPIRATION,
CC_EXHALATION,
CC_INSPIRATION,

SIMV_VSIMV_EXHALATION,
SIMV_CAV_INSPIRATION,
SIMV_PSV_INSPIRATION,
SIMV_CV_EXHALATION,
SIMV_CV_INSPIRATION,
SIMV_VSIMV_EXHALATION_APNEA,
SIMV_CV_INSPIRATION_APNEA,

SIMV_PSIMV_EXHALATION,
SIMV_CAP_INSPIRATION,
SIMV_CP_EXHALATION,
SIMV_CP_INSPIRATION,
SIMV_PSIMV_EXHALATION_APNEA,
SIMV_CP_INSPIRATION_APNEA,

CPAP_EXHALATION,
CPAP_INSPIRATION};




enum e_DB_ALARM_LEVEL_PRIORITY {



TEC,



WP,



VLP,



LP,



MPR,



HP,



VHP,



UA,



IA};




enum e_ALARM_ERROR {
NO_ERR_AL,
ERR_AL_DISCONNECTION,
ERR_AL_HIGH_PRESSURE,
ERR_AL_APNEA,
ERR_AL_HIGH_VTI,
ERR_AL_LOW_VTI,
ERR_AL_LOW_VTE,
ERR_AL_HIGH_VTE,
ERR_AL_HIGH_VM,
ERR_AL_LOW_VM,
ERR_AL_LOW_RATE,
ERR_AL_HIGH_RATE,
ERR_AL_POWER_SUPPLY_LOSS,
ERR_AL_AC_POWER_FAIL,
ERR_AL_DC_POWER_FAIL,
ERR_AL_CHECK_SUPPLY,
ERR_AL_PERIODICAL_SIGNAL,
ERR_AL_LOW_BATTERY,
ERR_AL_END_OF_BATTERY,
ERR_AL_CHECK_BATTERY,
ERR_AL_NO_BATTERY,
ERR_AL_CHECK_BUZZER,
ERR_AL_BUZZER_BATTERY_LOW,
ERR_AL_BUZZER_BATTERY_FAILURE,
ERR_AL_BUZZER_BATTERY_CHARGE_FAILURE,
ERR_AL_TECHNICAL_PROBLEM,
ERR_AL_EEPROM_OUT_OF_RANGE,
ERR_AL_EEPROM_LOOSING_PARAM,
ERR_AL_NEW_VERSION,
ERR_AL_ERROR_VERSION,
ERR_AL_REVERSED_IE,
ERR_AL_CHECK_PRESSURE,
ERR_AL_CHECK_PROXIMAL,
ERR_AL_PROXI_DISCONNECTION,
ERR_AL_NO_PROXIMAL,
ERR_AL_NO_VALVE_DETECTION,
ERR_AL_CHECK_VALVE,
ERR_AL_CHECK_VOLUME,
ERR_AL_VALVE_LEAKAGE,
ERR_AL_CHECK_REMOTE_ALARM,
ERR_AL_UNKNOW_BATTERY,
ERR_AL_CHECK_BATTERY_CHARGE,
ERR_AL_COOLING_FAN,
ERR_AL_AMBIENT_TEMP,
ERR_AL_BAT_TEMP,
ERR_AL_FAILURE_24V,
ERR_AL_SUPPLY_MEASURE,
ERR_AL_TURBINE_OVERHEAT,
ERR_AL_OCCLUSION,
ERR_AL_CPU_REFERENCE,
ERR_AL_CONTROLLED_CYCLES,
ERR_AL_CHECK_VALVE_PRESSURE,
ERR_AL_CHECK_PIPE,
ERR_AL_LEAKAGE,
ERR_AL_CHECK_FIO2,
ERR_AL_LOW_FIO2,
ERR_AL_HIGH_FIO2,
ERR_AL_NO_FIO2_SENSOR,
ERR_AL_CHECK_O2_SUPPLY,
ERR_AL_MISSING_O2_SUPPLY,
ERR_AL_CHECK_O2,
ERR_AL_O2_LEAKAGE,
ERR_AL_BREATH_TIME_CYCLED,
ERR_AL_INSP_FLOW_FAILURE,
ERR_AL_LEAK_OCCLUSION,
ERR_AL_VOLUNTARY_STOP,
ERR_AL_NEEDED_FIO2_CALIB,
end_of_error_alarm_table};




enum e_DB_ALARMS_STATE {
ALARM_FALSE,
ALARM_DETECTED,
ALARM_TRUE,
ALARM_DISPLAYED,
ALARM_CANCELED,
end_of_alarms_state_table};




enum e_DB_ALARMS_INDICATION_STATE {
ALARM_FALSE_STATE,
ALARM_DETECTED_STATE,
ALARM_INHIBITED_STATE,
end_of_alarms_indication_state_table};
#line 311
enum e_DB_VERSION {
VERSION_NUMBER_0,
VERSION_NUMBER_1,
VERSION_NUMBER_2,
VERSION_NUMBER_3,
SERIAL_NUMBER_1,
SERIAL_NUMBER_2,
SERIAL_NUMBER_3,
SERIAL_NUMBER_4,
SERIAL_NUMBER_5,
SERIAL_NUMBER_6,
end_of_db_version_table};




enum e_DB_Trend {
DB_TREND_VENTIL_HOUR,
DB_TREND_VENTIL_MIN,
DB_TREND_AVG_VTI,
DB_TREND_AVG_VTE,
DB_TREND_AVG_VM,
DB_TREND_AVG_FR,
DB_TREND_LEAK_MODE,
DB_TREND_AVG_LEAK,
DB_TREND_AVG_PI,
DB_TREND_IA,
DB_TREND_APNEA,
DB_TREND_PERCENT_CONTROLLED,
DB_TREND_PERCENT_TRIGGERED,
DB_TREND_SAVE_RTC_DAY,
DB_TREND_SAVE_RTC_MONTH,
DB_TREND_SAVE_RTC_YEAR,
DB_TREND_SAVE_PC_HOUR,
DB_TREND_SAVE_PC_MIN,
DB_TREND_NB_APNEA,
DB_TREND_APNEA_TIME,
DB_TREND_NB_CYCLE_COUNTER_MSB,
DB_TREND_NB_CYCLE_COUNTER_LSB,
DB_TREND_NB_CYCLE_TRIGERRED_MSB,
DB_TREND_NB_CYCLE_TRIGERRED_LSB,
DB_TREND_NB_CYCLE_CONTROLLED_MSB,
DB_TREND_NB_CYCLE_CONTROLLED_LSB,
DB_TREND_VENTIL_REPORT_UPD,
DB_TREND_IHM_VENTIL_HOUR,
DB_TREND_IHM_VENTIL_MIN,
DB_TREND_IHM_AVG_VTI,
DB_TREND_IHM_AVG_VTE,
DB_TREND_IHM_AVG_VM,
DB_TREND_IHM_AVG_FR,
DB_TREND_IHM_LEAK_MODE,
DB_TREND_IHM_AVG_LEAK,
DB_TREND_IHM_AVG_PI,
DB_TREND_IHM_IA,
DB_TREND_IHM_APNEA,
DB_TREND_IHM_PERCENT_CONTROLLED,
DB_TREND_IHM_PERCENT_TRIGGERED,
DB_TREND_IHM_SAVE_RTC_DAY,
DB_TREND_IHM_SAVE_RTC_MONTH,
DB_TREND_IHM_SAVE_RTC_YEAR,
end_of_db_trend_table};




enum e_TYPE_OF_DB_TARGET {
ADJUST,
CONTROL,
COMPUTE,
VERSION,
CONFIG,
RTC,
ALARMS,
POWER_SUPPLY,
KEYBOARD,
USB,
TREND,
CURRENT,
REVISION,
end_of_type_of_db_target};




enum e_DATA_OPERATION {
READ,
WRITE,
DECREASE,
INCREASE,
MIN,
MAX,
STEP,
READ_INFO,
WRITE_INFO};




enum e_MODE_TYPES {
VOL,
PRES,
PSVT,
VSIMV,
PSIMV,
CPAP,
nb_of_mode};



enum e_TRIGGER_LEVELS {
TRIGGER_LEVEL_OFF,
TRIGGER_LEVEL_0P,
TRIGGER_LEVEL_1P,
TRIGGER_LEVEL_2,
TRIGGER_LEVEL_3,
TRIGGER_LEVEL_4,
TRIGGER_LEVEL_5,
nb_of_trigger_levels};



enum e_TEST_STATES {
TEST_STATE_NOT_RUN,
TEST_STATE_RUNNING,
TEST_STATE_ABORTED,
TEST_STATE_PASS,
TEST_STATE_FAIL,
nb_of_test_states};




enum e_VEN_SIMVCycle {
CAV_Cycle,
CV_Cycle,
PSV_Cycle,
CAP_Cycle,
CP_Cycle};




enum e_SupplyInfo {
NONE,
AC,
DC,
BATTERY};




enum e_RTC_OPERATION {
NO_REQUEST,
ADJUST_DATE,
ADJUST_HOUR};




enum e_BadEraseState {
ERASE_OK,
BAD_TOTAL_ERASE};




enum e_RampType {
RAMP_DECELERATED,
RAMP_RECTANGLE,
RAMP_SINUS,
nb_of_ramps};
#line 487
enum e_VEN_ControllerType {
NO_CONTROL,
CONTROL_SPEED,
CONTROL_PRESSURE,
CONTROL_PRESSURE_VALVE,
CONTROL_PRESSURE_MAINT,
CONTROL_FLOW,
CONTROL_FLOW_EXH,
CONTROL_FLOW_O2,
CONTROL_FLOW_O2_MANUEL,
CONTROL_PRESSURE_O2};



enum e_VEN_Controller_Phase {
VEN_EXH_PLAT,
VEN_INSP_RISE,
VEN_INSP_PLAT,
VEN_EXH_FALL};




enum e_CalibrationCommand {
NO_CALIB,
SEGMENT_1,
SEGMENT_2,
SEGMENT_3,
SEGMENT_4,
SEGMENT_5,
SEGMENT_6,
SEGMENT_7,
SEGMENT_8,
TEST_LIMITES_REQUEST,
TEST_LIMITES_OK,
TEST_LIMITES_FALSE,
AUTOCALIB_SEG_1,
AUTOCALIB_SEG_2,
AUTOCALIB_SEG_3,
AUTOCALIB_SEG_4,
AUTOCALIB_SEG_5,
AUTOCALIB_SEG_6,
AUTOCALIB_SEG_7,
AUTOCALIB_SEG_8,
END_AUTOCALIB};




enum e_CalibrationType {
SYS_PATIENT_PRESS_CALIB,
SYS_VALVE_PRESS_CALIB,
SYS_INSP_FLOW_CALIB,
SYS_EXH_FLOW_CALIB,
SYS_EXH_FLOW_VERIF,
SYS_FIO2_CALIB,
SYS_O2_FLOW_CALIB,
SYS_O2_PRESSURE_CALIB,
end_of_sys_calib};
#line 552
enum e_VentilState {
VEN_EXHALATION = 251,
VEN_INSPIRATION_CONTROLED,
VEN_INSPIRATION_TRIGGERED,
VEN_VENTIL_DISABLE};



enum e_InspDetectType {
CONTROLLED,
TRIGGERED,
NO_INSP};




enum e_SYS_KeyboardInput {
KEY_NO_KEYBOARD,
KEY_CODE_MONIT_AND_DOWN,
KEY_CODE_MONIT_AND_UP,
KEY_CODE_UP_AND_DOWN,
Mark_Begin_Simple_Touch,
KEY_CODE_UP,
KEY_CODE_DOWN,
KEY_CODE_VALID,
KEY_CODE_MONIT,
KEY_CODE_STARTSTOPVENTIL,
KEY_CODE_100_O2,
KEY_CODE_NAVIG,
Number_of_key};
#line 587
enum e_TIM_TABLE_ID {
KEY_LONGPUSH_KEY_NO_KEYBOARD,
KEY_LONGPUSH_KEY_CODE_MONIT_AND_DOWN,
KEY_LONGPUSH_KEY_CODE_MONIT_AND_UP,
KEY_LONGPUSH_KEY_CODE_UP_AND_DOWN,
KEY_LONGPUSH_KEY_CODE_UP,
KEY_LONGPUSH_KEY_CODE_DOWN,
KEY_LONGPUSH_KEY_CODE_VALID,
KEY_LONGPUSH_KEY_CODE_MONIT,
KEY_LONGPUSH_KEY_CODE_STARTSTOPVENTIL,
end_of_keyboard_longpush_decnt,
KEY_AUTOREPEAT_KEY_NO_KEYBOARD,
KEY_AUTOREPEAT_KEY_CODE_MONIT_AND_DOWN,
KEY_AUTOREPEAT_KEY_CODE_MONIT_AND_UP,
KEY_AUTOREPEAT_KEY_CODE_UP_AND_DOWN,
KEY_AUTOREPEAT_KEY_CODE_UP,
KEY_AUTOREPEAT_KEY_CODE_DOWN,
KEY_AUTOREPEAT_KEY_CODE_VALID,
KEY_AUTOREPEAT_KEY_CODE_MONIT,
KEY_AUTOREPEAT_KEY_CODE_STARTSTOPVENTIL,
end_of_keyboard_autorepeat_decnt,
KEY_ANO_KEYB,
KEY_DELAY_BETWEEN_LONG_AUTOREPEAT,
KEY_DOUBLE_PULSE_TIME_OUT,
KEY_CONFIRM_VENT_STOP_TIMER,
VEN_TI_COUNT,
VEN_TE_COUNT,
VEN_SIMV_PERIOD_COUNT,
VEN_CONTROLLED_CYCLE_PERIOD_COUNT,
VEN_TIME_CALIB_FIO2,
VEN_VALVE_TIM,
VEN_VENTILATION_BIP,
VEN_END_COUNT0,
VEN_END_COUNT1,
VEN_END_COUNT2,
VEN_END_COUNT3,
VEN_END_COUNT4,
VEN_END_COUNT5,
SYS_TIME_OUT_SPEED,
SYS_1MINPAT,
SYS_TIME_OUT_CALIB,
SYS_TIME_AUTO_CALIB,
SYS_TIME_FAS_VALVE_CALIB,
SYS_TIME_SUPPLY_CHANGE,
SYS_TIME_DETECT_FIO2,
SYS_TIME_BACKLIGHT,
SYS_PRESSURE_CHOICE,
SYS_PRESSURE_CHOICE_INT,
SYS_PROXIMAL_TO_INTERNAL_SWITCH,
SYS_CHECK_PRESSURE,
SYS_CHECK_PROXIMAL,
SYS_VALVE_TIM,
SEC_PRESSURE_CHOICE,
SEC_LOW_PRESS,
SEC_HIGH_PRESSURE,
SEC_HIGH_PRESSURE_DETECT,
SEC_CPAP_HIGH_PRESSURE,
SEC_HIGH_PRESSURE_ALARM,
SEC_FLAG_HIGH_PRESSURE,
SEC_APNEA,
SEC_CHECK_PRESSURE,
SEC_CHECK_PROXIMAL,
SEC_NO_BATTERY_TIM,
SEC_CHECK_FIO2_TIM,
SEC_KEYBOARD_TIM,
SEC_SPEED_BLOW_TIM,
SEC_START_BIP_SOUND,
SEC_STOP_BIP_SOUND,
SEC_LOW_FIO2_TIM,
SEC_CPU_REFERENCE_FAILURE_TIM,
SEC_FLOW,
SEC_TIME_WAIT_STARTING,
SEC_HIGH_FIO2_TIM,
SEC_BAT_LOW_LEVEL,
SEC_HIGH_SPO2_TIM,
SEC_LOW_SPO2_TIM,
SEC_BAT_VERY_LOW_LEVEL,
SEC_BUZ_READ,
SEC_BATTERY_FAILURE_CO_BUZ,
SEC_DETECTION_BATTERY_FAILURE_CO_BUZ,
SEC_FAIL_AC_TIM,
SEC_FAIL_DC_TIM,
SEC_VALVE_CST,
SEC_PROXI_CST,
SEC_INT_CST,
SEC_CHECK_VALVE,
SEC_VALVE_PRESS,
SEC_INHIB_CHECK_FIO2,
SEC_INHIB_LOW_FIO2,
SEC_INHIB_HIGH_FIO2,
SEC_INHIB_CHECK_REMOTE,
SEC_CANCEL_HIGH_PRESSURE,
SEC_CHECK_SUPPLY,
SEC_PPC_APNEA,
SEC_PROX_DISC,
SEC_RAZ_CHECK_BAT,
SEC_CHECK_PRESS,
SEC_CHECK_PRESS2,
SEC_CHECK_PROXI,
SEC_CHECK_REMOTE,
SEC_BAT_P_S_TIM,
SEC_INHIB_BUZZER,
SEC_LOW_PRIORITY_BURST,
SEC_MEDIUM_PRIORITY_BURST,
SEC_HIGH_PRIORITY_BURST,
SEC_BUZZER_PULSE,
SEC_BUZZER_SILENCE,
SEC_BUZZER_SOUND_MAX,
SET_VALIDATION_BIP,
SEC_NO_PROXIMAL,
SET_HISTO_BIP,
SEC_BLOWER_OVERHEAT,
ACT_MIN_FLOW,
ACT_STOP_ADAPTATION,
WAIT_USB_BUSY,
USB_CONNECT_DISCONNECT_KEY,
USB_WAIT_READ_FIFO,
SPI_FRAME_TIME,
SPI_WAIT_DISPLAY_BATTERY_GAUGE,
TIM_COM_RECORDING_MONIT,
TIM_USB_RECORDING_MONIT,
SEC_CHECK_VALVE_PRESSURE,
SEC_LEAKAGE,
SEC_CHECK_O2_SUPPLY,
SEC_O2_LEAKAGE,
SEC_100_FIO2_TIM,
INT_MEASURE_BUZZER,
SEC_CANCEL_BATTERY_FAILURE_CO_BUZ,
ACT_BOOST_FREQ,
SEC_LEAK_OCCLUSION,
SEC_CPU_REF_FAILURE,
SEC_APNEA_FLAG,
SEC_OCCLUSION_TIMER,
end_of_table_cnt_decnt};



enum e_TIM_MINUTE_TABLE_ID {
TimerWelcomeEvent,
TimerHideLoupe,
TimerBlinkEvent,
TimeOutModifEvent,
TimerQuitHistoAlarme,
TimerQuitPreferences,
TimerQuitGraphConfig,
TimerRefresh,
TimerStopModifMode,
TimerAutoCalibTest,
TimerRefreshAlarm,
TimerSwapAlarm,
TimerTriggerOk,
TimerSpyPraram,
TimerHideAlarmMessage,
TimerHideStopVentMess,
TimerAddToBlinkEvent,
TimerWaitCalibVerif,
TimerHistoAlarmSeek,
TimerHistoAnoSeek,
TimerWaitCalibQExp,
TimerWaitCalibFiO2,
TimerUsbMessage,
TimerUsbProcessing,
Timer100PrCentO2,
TimerVenRecordingApnea,
TimerUsbRecordingDetailledHorodatage,
TimerUsbCommandTooLong,
TimerQuitVentilReport,
SEC_PERIODICAL_BIP,
TimerEndLongDownKey,
TimerEndLongUpKey,
TimerDoubleAlarm,
SEC_BATTERY_FAILURE_CHARGE_BUZ_READ,
SEC_LOW_BATTERY_BUZ_READ,
SEC_BATTERY_FAILURE_CC_BUZ,
TimerLeakTest,
end_of_minute_ihm_table_decnt,
end_of_minute_table_cnt_decnt};



enum e_TYPE_USE_TIMER {
COUNT,
DECOUNT};




enum e_DRV_RTC_ACCESS_STATE {
FREE_RTC,
READ_RTC,
WRITE_RTC,
ERROR_RTC};




enum e_DRV_RTC_REGISTER {
RTC_SECOND,
RTC_MINUTE,
RTC_HOUR,
RTC_DAY,
RTC_DATE,
RTC_MONTH,
RTC_YEAR,
RTC_SEC_ALARM1,
RTC_MIN_ALARM1,
RTC_HOURS_ALARM1,
RTC_DAY_ALARM1,
RTC_SEC_ALARM2,
RTC_MIN_ALARM2,
RTC_HOURS_ALARM2,
RTC_DAY_ALARM2,
RTC_CONTROL,
RTC_STATUS,
RTC_CHARGER,
RTC_BEGIN_RAM};



enum e_DRV_RTC_ERROR {
DRV_RTC_NO_ERROR,
DRV_RTC_TIME_OUT_TRANSMIT};



enum e_EEP_ACCESS_STATE {
READ_EEP,
WRITE_EEP,
FREE_EEP,
ERROR_EEP};



enum e_DRV_EVENT_STATE {
DRV_EVENT_FREE,
DRV_EVENT_ERASE,
DRV_EVENT_WRITE};
#line 829
enum e_DRV_EEP_WRITE_ERROR {
DRV_EEP_NO_ERROR,
DRV_EEP_TIME_OUT_WRITE,
DRV_EEP_TIME_OUT_TRANSMIT};



enum e_STATE_OF_DRIVE_EEP {
DRV_EEP_WRITE_PENDING,
DRV_EEP_FREE};
#line 844
enum e_DRV_DISPLAY_FUNCTION {
DRV_INIT,
DRV_LOAD_TABLE,
DRV_BRITHNESSAJUST,
DRV_NEGATIVE_CAR,
DRV_DISPLAY_PAGE,
DRV_STRING,
DRV_NUMBER,
DRV_SYMBOL,
DRV_PIXEL,
DRV_LINE,
DRV_BOX,
DRV_ERASE_ZONE,
DRV_ERASE_PAGE,
DRV_BACKLIHGHTADJUST};




enum e_TYPE_SOUND {
NO_SOUND,
BIP_SHORT_SOUND,
BIP_LONG_SOUND,
BIP_VERY_LONG_SOUND,
START_BIP_SOUND,
STOP_BIP_SOUND,
BATTERY_SOUND,
VERY_SLOW_SOUND,
SLOW_SOUND,
FAST_SOUND,
USB_CONNECT,
USB_DISCONNECT,
CONTINU_SOUND};




enum e_TYPE_TEST_BUZ {
NO_BUZ,
BUZ};




enum e_TYPE_BACKLIGHT_LEVEL {
SWITCH_OFF,
WEAK,
SWITCH_ON};




enum e_NUMBER_BUZ {
BUZ_CARD,
BUZ_SEC,
BUZ_ALL,
BUZ_VOLUME};




enum e_TYPE_BLINK {
NO_LED,
BLINK_LED,
CONTINU_LED};




enum e_VALIDATION_BIP {
NO_BIP,
BIP_SHORT,
BIP_LONG,
BIP_VERY_LONG,
BIP_START_VENTIL,
BIP_STOP_VENTIL,
BURST,
BIP_USB_CONNECT,
BIP_USB_DISCONNECT,
BIP_SHORT_VALID,
BIP_BATTERY_PERIODICAL};




enum e_VALIDATION_BIP_TYPE {
NO_CLOC_BIP,
CLOC,
BIP,
BIP_AND_CLOC};



enum e_SPI_ACCESS {
SPI_EEPROM,
SPI_RTC,
SPI_POWER};



enum e_SIMV {
PIM,
VIM,
PSV,
end_of_e_SIMV};




enum e_SIMV_PS_End {
PS_FLOW_END,
PS_HIGH_PRESS_END,
PS_TIMED_END,
end_of_e_SIMV_PS_End};




enum e_Month {
Month_start,
JANUARY,
FEBRUARY,
MARSH,
APRIL,
MAY,
JUNE,
JULY,
AUGUST,
SEPTEMBER,
OCTOBER,
NOVEMBER,
DECEMBER};



enum e_DataBaseType {
DB_RTC,
DB_CURRENT,
DB_CONFIG,
DB_CONTROL,
DB_COMPUTE,
DB_POWERSUPPLY,
DB_NULL};
#line 992
enum e_OUTPUT_NAME {
OUT_LED_VENTIL,
OUT_LED_O2,
FREE_1Q3,
CE_EEP,
CE_RTC1,
CE_RTC2,
CE_INT_PRES_SENS,
CE_PROX_PRES_SENS,
CE_VALVE_PRES_SENS,
CE_SPI_USB,
CE_SPI_PIC,
CE_FLOW_INSP_SENS,
CE_FLOW_EXP_SENS,
CE_SPI_PIC_IC44,
FREE_2Q7,
FREE_2Q8};
#line 1019
enum e_SPI_POWER_TRANSMIT {
SPI_POWER_TRANSMIT_START_FRAME_MSB,
SPI_POWER_TRANSMIT_START_FRAME_LSB,
SPI_POWER_TRANSMIT_VENTIL_AUTHORIZATION,
SPI_POWER_TRANSMIT_MAINTENANCE_MODE,
SPI_POWER_TRANSMIT_CALIBRATION_MODE,
SPI_POWER_TRANSMIT_CRC,
SPI_POWER_TRANSMIT_END_FRAME,
SPI_POWER_TRANSMIT_EndOfFrame};
#line 1033
enum e_SPI_POWER_RECEIVE {
SPI_POWER_RECEIVE_MSB_START_FRAME,
SPI_POWER_RECEIVE_LSB_START_FRAME,
SPI_POWER_RECEIVE_MSB_V_BAT_U16,
SPI_POWER_RECEIVE_LSB_V_BAT_U16,
SPI_POWER_RECEIVE_MSB_TEMP_BAT_S16,
SPI_POWER_RECEIVE_LSB_TEMP_BAT_S16,
SPI_POWER_RECEIVE_MSB_BAT_CYCLES_U16,
SPI_POWER_RECEIVE_LSB_BAT_CYCLES_U16,
SPI_POWER_RECEIVE_LSB_BAT_STATE_U16,
SPI_POWER_RECEIVE_LSB_POWER_TYPE_U16,
SPI_POWER_RECEIVE_MSB_JAUGE_MINUTE_U16,
SPI_POWER_RECEIVE_LSB_JAUGE_MINUTE_U16,
SPI_POWER_RECEIVE_LSB_JAUGE_AVALAIBLE_U16,
SPI_POWER_RECEIVE_LSB_PER_CENT_BAT_U16,
SPI_POWER_RECEIVE_LSB_NO_PRESENCE_BAT_U16,
SPI_POWER_RECEIVE_LSB_BAT_KO_U16,
SPI_POWER_RECEIVE_LSB_CHARGE_KO_U16,
SPI_POWER_RECEIVE_LSB_UNKNOWN_BATTERY_U16,
SPI_POWER_RECEIVE_MSB_AMBIENT_TEMP_S16,
SPI_POWER_RECEIVE_LSB_AMBIENT_TEMP_S16,
SPI_POWER_RECEIVE_LSB_BATTERY_END_U16,
SPI_POWER_RECEIVE_LSB_BATTERY_LOW_U16,
SPI_POWER_RECEIVE_LSB_FIRST_DATE_DAY_U16,
SPI_POWER_RECEIVE_LSB_FIRST_DATE_MONTH_U16,
SPI_POWER_RECEIVE_LSB_FIRST_DATE_YEAR_U16,
SPI_POWER_RECEIVE_LSB_BAT_TEMP_OVERFLOW,
SPI_POWER_RECEIVE_LSB_SUPPLY_MEASURE_FAILURE,
SPI_POWER_RECEIVE_LSB_FAILURE_24V_FLAG,
SPI_POWER_RECEIVE_LSB_AMBIENT_TEMP_OUTOFBOUNDS,
SPI_POWER_RECEIVE_LSB_COOLING_FAN_FAILURE_FLAG,
SPI_POWER_RECEIVE_LSB_FIRST_VERSION_IDENTIFIANT,
SPI_POWER_RECEIVE_LSB_SECOND_VERSION_IDENTIFIANT,
SPI_POWER_RECEIVE_LSB_THIRD_VERSION_IDENTIFIANT,
SPI_POWER_RECEIVE_LSB_BAT_FIRST_DATE_HOUR_U16,
SPI_POWER_RECEIVE_LSB_BAT_FIRST_DATE_MINUTE_U16,
SPI_POWER_RECEIVE_LSB_BAT_FIRST_DATE_SECOND_U16,
SPI_POWER_RECEIVE_LSB_BAT_AGEING_U16,
SPI_POWER_RECEIVE_LSB_BAT_SUPPLIER_U16,
SPI_POWER_RECEIVE_LSB_BAT_TYPICAL_CAPACITY_U16,
SPI_POWER_RECEIVE_CRC,
SPI_POWER_RECEIVE_END_FRAME,
SPI_POWER_RECEIVE_EndOfTable,
SPI_POWER_RECEIVE_BufferSize = 70};
#line 1082
enum e_DRV_SPI_POWER_ERROR {
DRV_SPI_POWER_NO_ERROR,
DRV_SPI_POWER_TIME_OUT_TRANSMIT,
DRV_SPI_POWER_NO_FRAME,
DRV_SPI_POWER_BAD_FRAME};
#line 1093
enum e_MODE_COM {
COM_VOL_A,
COM_PSVT,
COM_PRES_A,
COM_VSIMV,
COM_CPAP,
COM_VOL_C,
COM_PSV,
COM_PRES_C,
COM_VOL_US,
COM_PRES_US,
COM_PSV_US,
COM_VSIMV_US,
COM_PSIMV_US,
COM_CPAP_US,
COM_PSIMV,
End_of_Table_Mode_COM};




enum e_Monit_Buffer_Data_Type {
MONITORAGE,
HORODATAGE};
#line 1122
enum e_FrameUART1 {
DATA_FRAME0,
DATA_FRAME1,
DATA_FRAME2,
SIZE_FRAME_UART1};



enum e_Flash_Read_Status {
REQUEST,
RUNNING,
ENDED};



enum e_Cycling_Mode {
I_T,
I_E};




enum e_Alarm_Tone {
ORIGINAL,
COMPLIANT};
#line 1155
enum e_DIRECT_MONITORING {
MONIT_MSB_PRESSURE,
MONIT_LSB_PRESSURE,
MONIT_MSB_CORRECTED_FLOW_INSP,
MONIT_LSB_CORRECTED_FLOW_INSP,
MONIT_MSB_CORRECTED_FLOW_EXHAL,
MONIT_LSB_CORRECTED_FLOW_EXHAL,
MONIT_CORRECTED_VT_LEAK,
MONIT_SPO2,
MONIT_HR,
MONIT_ALARM_1,
MONIT_ALARM_2,
MONIT_ALARM_3,
MONIT_ALARM_4,
MONIT_ALARM_5,
MONIT_ALARM_6,
MONIT_ALARM_7,
MONIT_ALARM_8,
MONIT_ALARM_9,
MONIT_SYMBOL,
MONIT_VENTIL_MODE,
End_Of_Table_Direct_Monitoring};
#line 1185
enum e_DETAILLED_MONITORING {
DETAILLED_DATA_TYPE,

DETAILLED_DAY,
DETAILLED_VENTIL_STATE = 1,

DETAILLED_MONTH,
DETAILLED_PATIENT_PRESSURE_MSB = 2,

DETAILLED_YEAR,
DETAILLED_PATIENT_PRESSURE_LSB = 3,

DETAILLED_HOUR,
DETAILLED_INSP_FLOW_MSB = 4,

DETAILLED_MINUTE,
DETAILLED_INSP_FLOW_LSB = 5,

DETAILLED_SECOND,
DETAILLED_EXH_FLOW_MSB = 6,

DETAILLED_RESERVED1,
DETAILLED_EXH_FLOW_LSB = 7,

DETAILLED_RESERVED2,
DETAILLED_LEAK = 8,

End_Of_Table_Detailled_Monitoring};
#line 1222
enum e_TREND {
TREND_DAY,
TREND_MONTH,
TREND_YEAR,
TREND_HOUR,
TREND_MINUTE,
TREND_SECOND,
TREND_VENTIL_MODE,
TREND_VENTIL_TYPE,
TREND_MSB_P_MAX,
TREND_LSB_P_MAX,
TREND_MSB_AV_PEP,
TREND_LSB_AV_PEP,
TREND_MSB_LEAKAGE,
TREND_LSB_LEAKAGE,
TREND_MSB_AV_VOLUME,
TREND_LSB_AV_VOLUME,
TREND_IE_RATIO_NUMERATOR,
TREND_IE_RATIO_DENOMINATOR,
TREND_FREQUENCY,
TREND_MSB_INSPIRATED_VOLUME,
TREND_LSB_INSPIRATED_VOLUME,
TREND_MSB_EXHALED_VOLUME,
TREND_LSB_EXHALED_VOLUME,
TREND_HEART_RATE,
TREND_SPO2,
End_Of_Table_Trends};
#line 1257
enum e_EVENT_PARAMETERS {

EVENT_NB_ID,
EVENT_DAY_ID,
EVENT_MON_ID,
EVENT_YEA_ID,
EVENT_HOU_ID,
EVENT_MIN_ID,
EVENT_SCD_ID,
EVENT_CPTMACHHOURMSB_ID,
EVENT_CPTMACHHOURLSB_ID,
EVENT_MODE_ID,
EVENT_TYPE_ID,
EVENT_TRIGECONV_ID,
EVENT_PUNITCONV_ID,
EVENT_CYCL_ID,
EVENT_24VMSB_ID,
EVENT_24VLSB_ID,
EVENT_5VMSB_ID,
EVENT_5VLSB_ID,
EVENT_WTDMSB_ID,
EVENT_WTDLSB_ID,
EVENT_TINTMSB_ID,
EVENT_TINTLSB_ID,
EVENT_VBATMSB_ID,
EVENT_VBATLSB_ID,
EVENT_TBATMSB_ID,
EVENT_TBATLSB_ID,
EVENT_QBATMSB_ID,
EVENT_QBATLSB_ID,
EVENT_MBATMSB_ID,
EVENT_MBATLSB_ID,
EVENT_FIO2_ID,
EVENT_SPO2_ID,
EVENT_FREQCAR_ID,
EVENT_PMAXMSB_ID,
EVENT_PMAXLSB_ID,
EVENT_PEPMSB_ID,
EVENT_PEPLSB_ID,
EVENT_RAPIT_ID,
EVENT_RAPIEMSB_ID,
EVENT_RAPIELSB_ID,
EVENT_FREQ_ID,
EVENT_VTIMSB_ID,
EVENT_VTILSB_ID,
EVENT_VTEMSB_ID,
EVENT_VTELSB_ID,
EVENT_VMMSB_ID,
EVENT_VMLSB_ID,
EVENT_LEAK_ID,
EVENT_TIMSB_ID,
EVENT_TILSB_ID,
EVENT_TEMSB_ID,
EVENT_TELSB_ID,
EVENT_SUPPLY_TYPE,
EVENT_BATLEVEL_ID,
EVENT_SETRELATIVE_PRESSURE_ID,
EVENT_SETBAROMETRIC_COMP_ID,
EVENT_SETSOUND_LEVEL_ID,
EVENT_SETPEDIATRIC_CIRCUIT_ID,
EVENT_SETDISCONNECTION_DELAY_ID,
EVENT_SETAPNEA_ALARM_ID,
EVENT_SETSPO2MIN_ID,
EVENT_SETSPO2MAX_ID,
EVENT_SETFIO2_ID,
EVENT_SETFIO2MIN_ID,
EVENT_SETFIO2MAX_ID,


EVENT_SPECPAR_1_ID,
EVENT_SPECPAR_2_ID,
EVENT_SPECPAR_3_ID,
EVENT_SPECPAR_4_ID,
EVENT_SPECPAR_5_ID,
EVENT_SPECPAR_6_ID,
EVENT_SPECPAR_7_ID,
EVENT_SPECPAR_8_ID,
EVENT_SPECPAR_9_ID,
EVENT_SPECPAR_10_ID,
EVENT_SPECPAR_11_ID,
EVENT_SPECPAR_12_ID,
EVENT_SPECPAR_13_ID,
EVENT_SPECPAR_14_ID,
EVENT_SPECPAR_15_ID,
EVENT_SPECPAR_16_ID,
EVENT_SPECPAR_17_ID,
EVENT_SPECPAR_18_ID,
EVENT_SPECPAR_19_ID,
EVENT_SPECPAR_20_ID,
EVENT_SPECPAR_21_ID,
EVENT_SPECPAR_22_ID,
EVENT_SPECPAR_23_ID,
EVENT_SPECPAR_24_ID,
EVENT_SPECPAR_25_ID,
EVENT_SPECPAR_26_ID,
EVENT_SPECPAR_27_ID,
EVENT_SPECPAR_28_ID,
EVENT_SPECPAR_29_ID,
EVENT_SPECPAR_30_ID,
EVENT_SPECPAR_31_ID,
EVENT_STATE_ID,
EVENT_Last_Event_Parameter = 96,
End_Of_Table_Events};
#line 1369
enum e_Settings {

SETTINGS_COMPATIBILITY,
SETTINGS_MODE,
SETTINGS_CYCLING_MODE_LSB,
SETTINGS_CYCLING_MODE_MSB,
SETTINGS_PRESSURE_UNIT_LSB,
SETTINGS_PRESSURE_UNIT_MSB,
SETTINGS_LOW_SPO2_LSB,
SETTINGS_LOW_SPO2_MSB,
SETTINGS_SPO2_LOW_SELECT_LSB,
SETTINGS_SPO2_LOW_SELECT_MSB,
SETTINGS_HIGH_SPO2_LSB,
SETTINGS_HIGH_SPO2_MSB,
SETTINGS_SPO2_HIGH_SELECT_LSB,
SETTINGS_SPO2_HIGH_SELECT_MSB,
SETTINGS_VOL_CONTROL_LSB,
SETTINGS_VOL_CONTROL_MSB,
SETTINGS_P_CONTROL_LSB,
SETTINGS_P_CONTROL_MSB,
SETTINGS_P_SUPPORT_LSB,
SETTINGS_P_SUPPORT_MSB,
SETTINGS_PEEP_LSB,
SETTINGS_PEEP_MSB,
SETTINGS_PEEP_NO_SELECT_LSB,
SETTINGS_PEEP_NO_SELECT_MSB,
SETTINGS_RISE_TIME_LSB,
SETTINGS_RISE_TIME_MSB,
SETTINGS_RAMP_LSB,
SETTINGS_RAMP_MSB,
SETTINGS_I_T_LSB,
SETTINGS_I_T_MSB,
SETTINGS_IE_NUMERATOR_LSB,
SETTINGS_IE_NUMERATOR_MSB,
SETTINGS_IE_DENOMINATOR_LSB,
SETTINGS_IE_DENOMINATOR_MSB,
SETTINGS_CONTROL_R_LSB,
SETTINGS_CONTROL_R_MSB,
SETTINGS_BACKUP_R_LSB,
SETTINGS_BACKUP_R_MSB,
SETTINGS_BACKUP_R_NO_SELECT_LSB,
SETTINGS_BACKUP_R_NO_SELECT_MSB,
SETTINGS_APNEA_LSB,
SETTINGS_APNEA_MSB,
SETTINGS_AUTO_APNEA_SELECT_LSB,
SETTINGS_AUTO_APNEA_SELECT_MSB,
SETTINGS_INSP_SENS_LSB,
SETTINGS_INSP_SENS_MSB,
SETTINGS_INSP_SENS_NO_SELECT_LSB,
SETTINGS_INSP_SENS_NO_SELECT_MSB,
SETTINGS_EXH_SENS_LSB,
SETTINGS_EXH_SENS_MSB,
SETTINGS_AUTO_EXH_SENS_SELECT_LSB,
SETTINGS_AUTO_EXH_SENS_SELECT_MSB,
SETTINGS_TARGET_VT_LSB,
SETTINGS_TARGET_VT_MSB,
SETTINGS_TARGET_VT_SELECT_LSB,
SETTINGS_TARGET_VT_SELECT_MSB,
SETTINGS_MAX_PRESSURE_LSB,
SETTINGS_MAX_PRESSURE_MSB,
SETTINGS_LOW_VTI_LSB,
SETTINGS_LOW_VTI_MSB,
SETTINGS_LOW_VTI_NO_SELECT_LSB,
SETTINGS_LOW_VTI_NO_SELECT_MSB,
SETTINGS_HIGH_VTI_LSB,
SETTINGS_HIGH_VTI_MSB,
SETTINGS_HIGH_VTI_NO_SELECT_LSB,
SETTINGS_HIGH_VTI_NO_SELECT_MSB,
SETTINGS_LOW_VTE_LSB,
SETTINGS_LOW_VTE_MSB,
SETTINGS_LOW_VTE_NO_SELECT_LSB,
SETTINGS_LOW_VTE_NO_SELECT_MSB,
SETTINGS_HIGH_VTE_LSB,
SETTINGS_HIGH_VTE_MSB,
SETTINGS_HIGH_VTE_NO_SELECT_LSB,
SETTINGS_HIGH_VTE_NO_SELECT_MSB,
SETTINGS_HIGH_PIP_LSB,
SETTINGS_HIGH_PIP_MSB,
SETTINGS_LOW_PIP_LSB,
SETTINGS_LOW_PIP_MSB,
SETTINGS_HIGH_R_LSB,
SETTINGS_HIGH_R_MSB,
SETTINGS_HIGH_R_NO_SELECT_LSB,
SETTINGS_HIGH_R_NO_SELECT_MSB,
SETTINGS_HIGH_LEAK_LSB,
SETTINGS_HIGH_LEAK_MSB,
SETTINGS_HIGH_LEAK_SELECT_LSB,
SETTINGS_HIGH_LEAK_SELECT_MSB,
SETTINGS_TI_MIN_LSB,
SETTINGS_TI_MIN_MSB,
SETTINGS_TI_MIN_AUTO_SELECT_LSB,
SETTINGS_TI_MIN_AUTO_SELECT_MSB,
SETTINGS_TI_MAX_LSB,
SETTINGS_TI_MAX_MSB,
SETTINGS_TI_MAX_AUTO_SELECT_LSB,
SETTINGS_TI_MAX_AUTO_SELECT_MSB,
SETTINGS_DISCONNECTION_DELAY_LSB,
SETTINGS_DISCONNECTION_DELAY_MSB,
SETTINGS_DISCONNECTION_DELAY_AUTO_LSB,
SETTINGS_DISCONNECTION_DELAY_AUTO_MSB,
SETTINGS_SIGH_SELECT_LSB,
SETTINGS_SIGH_SELECT_MSB,
SETTINGS_SIGH_VT_COEF_LSB,
SETTINGS_SIGH_VT_COEF_MSB,
SETTINGS_SIGH_CPT_LSB,
SETTINGS_SIGH_CPT_MSB,
SETTINGS_APNEA_ALARM_ACTIVATION_LSB,
SETTINGS_APNEA_ALARM_ACTIVATION_MSB,
SETTINGS_PEDIATRIC_CIRCUIT_LSB,
SETTINGS_PEDIATRIC_CIRCUIT_MSB,
SETTINGS_PRESSURE_SUPPORT_RELATIVE_LSB,
SETTINGS_PRESSURE_SUPPORT_RELATIVE_MSB,
End_Of_Table_Settings};
#line 1492
enum e_USB_SerialNumberAndDate_Frame {

USB_SETTING_SERIAL_NUMBER_1,
USB_SETTING_SERIAL_NUMBER_2,
USB_SETTING_SERIAL_NUMBER_3,
USB_SETTING_SERIAL_NUMBER_4,
USB_SETTING_SERIAL_NUMBER_5,
USB_SETTING_SERIAL_NUMBER_6,
USB_SETTING_SERIAL_NUMBER_7,
USB_SETTING_SERIAL_NUMBER_8,
USB_SETTING_SERIAL_NUMBER_9,
USB_SETTING_SERIAL_NUMBER_10,
USB_SETTING_SERIAL_NUMBER_11,
USB_SETTING_SERIAL_NUMBER_12,

USB_SETTING_DATE_YEAR,
USB_SETTING_DATE_MONTH,
USB_SETTING_DATE_DAY,
USB_SETTING_DATE_HOUR,
USB_SETTING_DATE_MINUTE,
USB_SETTING_DATE_SECOND,
End_of_e_usb_frame_serialNumberAndDate};




enum e_USB_SerialNumber_Frame {

USB_SERIAL_NUMBER_1,
USB_SERIAL_NUMBER_2,
USB_SERIAL_NUMBER_3,
USB_SERIAL_NUMBER_4,
USB_SERIAL_NUMBER_5,
USB_SERIAL_NUMBER_6,
USB_SERIAL_NUMBER_7,
USB_SERIAL_NUMBER_8,
USB_SERIAL_NUMBER_9,
USB_SERIAL_NUMBER_10,
USB_SERIAL_NUMBER_11,
USB_SERIAL_NUMBER_12,
End_of_e_usb_frame_serialNumber};
#line 1538
enum e_USB_Settings_Frame {

USB_SETTINGS_DATA,
USB_SETTINGS_MSB_CRC_FRAME,
USB_SETTINGS_LSB_CRC_FRAME,
End_of_e_usb_frame_setting};




enum e_USB_Transfer_Apply {
Usb_FirstStep,
Usb_ReadCurrentDirectoryNext,
Usb_OpenFile,
Usb_CreateFile,
Usb_ReadFile,
Usb_WriteSerialNumberAndDateAtIndex,
Usb_WriteSerialNumberAndDateAtEndOfFile,
Usb_WriteSerialNumberAtEndOfFile,
Usb_WriteFileAtIndex,
Usb_WriteAtTheEndOfFile,
Usb_UpadateDateAndTime,
Usb_WriteCRC,
Usb_CloseFile,
End_of_e_usb_transfer_apply};
#line 1569
enum e_USB_File_Settings {
FileSettingNext,
FileSettingNotFound,
FileSettingFound,
end_of_e_usb_file_setting};
#line 1579
enum e_USB_File_Type {
SettingsType,
ContinuousRecordingType,
MonitoringTransferType,
TrendsTransferType,
EventsTransferType,
end_of_e_usb_file_type};




enum e_USB_Continuous_Frame {
USB_ID_FRAME,

USB_DATA,
USB_End_Of_Continuous_Frame};




enum e_NAND_FLASH_STATE {
NAND_FREE,
NAND_ERASE,
NAND_MONIT_WRITE,
NAND_MONIT_READ,
NAND_TREND_WRITE,
NAND_TREND_READ};
#line 95 "..\\..\\SRC\\HMI\\HMI_IhmType.hpp"
enum e_TYPE_OF_LED {
LED_ALARM_RED,
LED_ALARM_ORANGE,
LED_VENTIL,
LED_WHITE,
LED_AC,
LED_DC,
LED_BAT};



struct AlarmEvent;
#line 167
enum EventId {
ProgExhalFlowUsed,
ProgExhalFlowUnused,
ProgInspControlEvent,
ProgInspTrigEvent,
ProgExhEvent,
ProgHideBatEvent,
ProgStartVentilOk,
ProgStartVentilKo,
ProgShowBatEvent,
ProgInibAlarmOK,
ProgInibAlarmNOK,
ProgCancelAlarmOK,
ProgCancelAlarmNOK,
ProgRemoveHighPressureAlarm,
ProgValveMissing,
ProgValveDetected,
ProgBlocExpiMissing,
ProgBlocExpiDetected,
ProgSpo2SensorNoError,
ProgSpo2SensorError,
ProgFio2SensorOK,
ProgFio2SensorNOK,
ProgCheckSupplyNoError,
ProgCheckSupplyError,
ProgUsbKeyDetected,
ProgUsbKeyNotDetected,
ProgUsbErrorCodeReady,
ProgUsbNewModeDetected,
ProgStartMonitoring,
ProgSupplyBusFailure,
ProgSupplyBusOK};
#line 39 "..\\..\\SRC\\HMI\\HMI_MenuObject.hpp"
struct MenuObject;
#line 41 "..\\..\\SRC\\HMI\\HMI_DisplayObject.hpp"
struct DisplayObject;
#line 33 "..\\..\\SRC\\DATABASE\\Db_PowerSupply.h"
enum e_DB_POWERSUPPLY {
V_BAT_U16,
TEMP_BAT_S16,
BAT_CYCLES_U16,
BAT_STATE_U16,
POWER_TYPE_U16,
JAUGE_MINUTE_U16,
JAUGE_HOUR_DISPLAY_U16,
JAUGE_MINUTE_DISPLAY_U16,
JAUGE_AVALAIBLE_U16,
PER_CENT_BAT_U16,
NO_PRESENCE_BAT_U16,
BAT_KO_U16,
CHARGE_KO_U16,
UNKNOWN_BATTERY_U16,
AMBIENT_TEMP_S16,
BATTERY_END_U16,
BATTERY_LOW_U16,
FIRST_DATE_DAY_U16,
FIRST_DATE_MONTH_U16,
FIRST_DATE_YEAR_U16,
COOLING_FAN_FAILURE_FLAG_U16,
AMBIENT_TEMP_OUTOFBOUNDS_U16,
FAILURE_24V_FLAG_U16,
BAT_TEMP_OUTOFBOUNDS_U16,
SUPPLY_MEASURE_FAILURE_U16,
POWER_SUPPLY_VERSION_NUMBER_0,
POWER_SUPPLY_VERSION_NUMBER_1,
POWER_SUPPLY_VERSION_NUMBER_2,
SUPPLIER_U16,
CAPACITY_U16,
CAPACITY_THEORICAL_U16,
FIRST_DATE_HOUR_U16,
FIRST_DATE_MINUTE_U16,
FIRST_DATE_SECOND_U16,
AGING_U16,
end_of_db_powersupply_table};
#line 47 "..\\..\\SRC\\HMI\\HMI_Tools.hpp"
enum ePANIC_MODULE {
PANIC_MODULE_VENTIL,
PANIC_MODULE_ALARM,
PANIC_MODULE_GRAPH,
PANIC_MODULE_EVENT_NODE_VENTIL,
PANIC_MODULE_EVENT_NODE_ALARM,
PANIC_MODULE_EVENT_NODE_MAINT_CALIB,
PANIC_MODULE_FRAME_GRAPH,
PANIC_MODULE_UNKNOWN,
PANIC_MODULE_MAX};
#line 39 "..\\..\\SRC\\HMI\\HMI_FieldObject.hpp"
struct FieldObject;
#line 34 "..\\..\\SRC\\HMI\\HMI_ValueField.hpp"
struct ValueField;
#line 34 "..\\..\\SRC\\HMI\\HMI_TextField.hpp"
struct TextField;
#line 34 "..\\..\\SRC\\HMI\\HMI_GraphicBox.hpp"
struct GraphicBox;
#line 34 "..\\..\\SRC\\HMI\\HMI_SymbolField.hpp"
struct SymbolField;
#line 40 "..\\..\\SRC\\HMI\\HMI_MessageDialog.hpp"
struct MessageDialog;
#line 42 "..\\..\\SRC\\HMI\\HMI_Loupe.hpp"
enum DataType {
eValue,
eString,
eValueSign};


struct Loupe;
#line 37 "..\\..\\SRC\\HMI\\HMI_Label.hpp"
struct Label;
#line 34 "..\\..\\SRC\\HMI\\HMI_EditableObject.hpp"
struct EditableObject;
#line 34 "..\\..\\SRC\\HMI\\HMI_ValueTextField.hpp"
struct ValueTextField;
#line 39 "..\\..\\SRC\\HMI\\HMI_LabelOneValue.hpp"
struct LabelOneValue;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelOneValueSign.hpp"
struct LabelOneValueSign;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelOneValueDbRT.hpp"
struct LabelOneValueDbRT;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelOneValueSignDefault.hpp"
struct LabelOneValueSignDefault;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelOneValueSignFlag.hpp"
struct LabelOneValueSignFlag;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelOneValueDefault.hpp"
struct LabelOneValueDefault;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelOneValueThreeDefault.hpp"
struct LabelOneValueThreeDefault;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelOneValueFourDefault.hpp"
struct LabelOneValueFourDefault;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelOneValueFlag.hpp"
struct LabelOneValueFlag;
#line 35 "..\\..\\SRC\\HMI\\HMI_LabelOneValueTrig.hpp"
struct LabelOneValueTrig;
#line 36 "..\\..\\SRC\\HMI\\HMI_LabelProgressBar.hpp"
struct LabelProgressBar;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelTwoValue.hpp"
struct LabelTwoValue;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelTwoValueLock.hpp"
struct LabelTwoValueLock;
#line 42 "..\\..\\SRC\\HMI\\HMI_LabelTabOneValue.hpp"
struct LabelTabOneValue;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelTabOneValueDefault.hpp"
struct LabelTabOneValueDefault;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelTabOneValueFlag.hpp"
struct LabelTabOneValueFlag;
#line 36 "..\\..\\SRC\\HMI\\HMI_LabelTabTwoValue.hpp"
struct LabelTabTwoValue;
#line 35 "..\\..\\SRC\\HMI\\HMI_LabelTabTwoValueTwoLabels.hpp"
struct LabelTabTwoValueTwoLabels;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelTabTwoValueDefault.hpp"
struct LabelTabTwoValueDefault;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelTabTwoValueFlag.hpp"
struct LabelTabTwoValueFlag;
#line 35 "..\\..\\SRC\\HMI\\HMI_LabelValueString.hpp"
struct LabelValueString;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelStringTwoItems.hpp"
struct LabelStringTwoItems;
#line 35 "..\\..\\SRC\\HMI\\HMI_LabelStringNItems.hpp"
struct LabelStringNItems;
#line 33 "..\\..\\SRC\\HMI\\HMI_LabelLanguage.hpp"
struct LabelLanguage;
#line 36 "..\\..\\SRC\\HMI\\HMI_LabelMode.hpp"
struct LabelMode;
#line 36 "..\\..\\SRC\\HMI\\HMI_LabelSymbol.hpp"
struct LabelSymbol;
#line 35 "..\\..\\SRC\\HMI\\HMI_Rampe.hpp"
struct Rampe;
#line 34 "..\\..\\SRC\\HMI\\HMI_RiseTime.hpp"
struct RiseTime;
#line 34 "..\\..\\SRC\\HMI\\HMI_AutoCalibValue.hpp"
struct AutoCalibValue;
#line 35 "..\\..\\SRC\\HMI\\HMI_ManualCalibValue.hpp"
struct ManualCalibValue;
#line 35 "..\\..\\SRC\\HMI\\HMI_ManualCalibTwoValue.hpp"
struct ManualCalibTwoValue;
#line 34 "..\\..\\SRC\\HMI\\HMI_VDate.hpp"
enum e_VDATE_FORMAT {
VDATE_EUR_FORMAT,
VDATE_US_FORMAT};
#line 43
struct VDate;
#line 34 "..\\..\\SRC\\HMI\\HMI_VTime.hpp"
enum e_VTIME_FORMAT {
VTIME_24H_FORMAT,
VTIME_12H_FORMAT};
#line 47
enum __Q2_5VTime8e_PERIOD { AM__5VTime, PM__5VTime};
#line 42
struct VTime;
#line 40 "..\\..\\SRC\\HMI\\HMI_BlinkTable.hpp"
struct BlinkTable;
#line 36 "..\\..\\SRC\\HMI\\HMI_RefreshTable.hpp"
struct RefreshTable;
#line 41 "..\\..\\SRC\\HMI\\HMI_ParameterSpy.hpp"
struct ParameterSpy;
#line 39 "..\\..\\SRC\\HMI\\HMI_VTimer.hpp"
struct VTimer;
#line 46 "..\\..\\SRC\\HMI\\HMI_AlarmTable.hpp"
struct AlarmTable;
#line 36 "..\\..\\SRC\\HMI\\HMI_AlarmManager.hpp"
enum eAMANAGER_DOUBLE { AMANAGER_DOUBLE_ACTIVE,
AMANAGER_DOUBLE_INACTIVE};




struct AlarmManager;
#line 36 "..\\..\\SRC\\HMI\\HMI_LoupeAlarm.hpp"
struct LoupeAlarm;
#line 45 "..\\..\\SRC\\HMI\\HMI_MonitoringObject.hpp"
struct MonitoringObject;
#line 231 "..\\..\\SRC\\HMI\\HMI_Config.hpp"
struct tInfo;




enum e_OBJECT {
OBJECT_VENTIL_LOVPIP,
OBJECT_VENTIL_LOVVTI,
OBJECT_VENTIL_LOVVTE,
OBJECT_VENTIL_LOVVM,
OBJECT_VENTIL_LOVR,
OBJECT_VENTIL_LOVFUITE,
OBJECT_VENTIL_LOVFIO2,
OBJECT_VENTIL_LOVSPO2,
OBJECT_VENTIL_LTVIE,
OBJECT_VENTIL_LTVIT,
OBJECT_VENTIL_OBJECT_MAX,
OBJECT_ALARM_LOVPIP = 0,
OBJECT_ALARM_LOVVTI,
OBJECT_ALARM_LOVMAP,
OBJECT_ALARM_LOVPEEP,
OBJECT_ALARM_LTVIE,
OBJECT_ALARM_LOVIT,
OBJECT_ALARM_LOVR,
OBJECT_ALARM_LOVM,
OBJECT_ALARM_OBJECT_MAX,
OBJECT_GRAPH_MOFIO2 = 0,
OBJECT_GRAPH_MOSPO2,
OBJECT_GRAPH_MOPULSE,
OBJECT_GRAPH_MOTI,
OBJECT_GRAPH_MOTE,
OBJECT_GRAPH_MOIE,
OBJECT_GRAPH_MOIT,
OBJECT_GRAPH_MOFR,
OBJECT_GRAPH_MOVM,
OBJECT_GRAPH_MOVTE,
OBJECT_GRAPH_MOVTI,
OBJECT_GRAPH_MOPE,
OBJECT_GRAPH_MOPI,
OBJECT_GRAPH_MOFUITE,
OBJECT_GRAPH_OBJECT_MAX};
#line 41 "..\\..\\SRC\\HMI\\HMI_VFrame.hpp"
struct VFrame;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelVersion.hpp"
struct LabelVersion;
#line 41 "..\\..\\SRC\\HMI\\HMI_FrameWelcome.hpp"
struct FrameWelcome;
#line 35 "..\\..\\SRC\\HMI\\HMI_FrameConfiguration.hpp"
struct FrameConfiguration;
#line 35 "..\\..\\SRC\\HMI\\HMI_FramePreference.hpp"
struct FramePreference;
#line 38 "..\\..\\SRC\\HMI\\HMI_FrameCircuitCheck.hpp"
struct FrameCircuitCheck;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelSerial.hpp"
struct LabelSerial;
#line 42 "..\\..\\SRC\\HMI\\HMI_FrameMaintenance.hpp"
struct FrameMaintenance;
#line 34 "..\\..\\SRC\\HMI\\HMI_FrameHistoAno.hpp"
enum e_ANO_DATE_FORMAT {
ANO_EUR_FORMAT,
ANO_US_FORMAT};


enum e_ANO_TIME_FORMAT {
ANO_24H_FORMAT,
ANO_12H_FORMAT};


struct FrameHistoAno;
#line 36 "..\\..\\SRC\\HMI\\HMI_FrameVoltControl.hpp"
struct FrameVoltControl;
#line 35 "..\\..\\SRC\\HMI\\HMI_LabelTwoValueTrig.hpp"
struct LabelTwoValueTrig;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelAlarme.hpp"
struct LabelAlarme;
#line 34 "..\\..\\SRC\\HMI\\HMI_BarGraph.hpp"
struct BarGraph;
#line 46 "..\\..\\SRC\\HMI\\HMI_MessageList.hpp"
struct __Q2_11MessageList8TMessage;
#line 41
struct MessageList;
#line 37 "..\\..\\SRC\\HMI\\HMI_LabelAlarmeTwoLine.hpp"
struct LabelAlarmeTwoLine;
#line 38 "..\\..\\SRC\\HMI\\HMI_BatteryObject.hpp"
struct BatteryObject;
#line 53 "..\\..\\SRC\\HMI\\HMI_FrameVentilation.hpp"
struct FrameVentilation;
#line 51 "..\\..\\SRC\\HMI\\HMI_GraphicTable.hpp"
struct tGraphTableConfig;
#line 59
struct GraphicTable;
#line 55 "..\\..\\SRC\\HMI\\HMI_FrameAlarme.hpp"
enum e_ALARM_DATE_FORMAT {
ALARM_EUR_FORMAT,
ALARM_US_FORMAT};


enum e_ALARM_TIME_FORMAT {
ALARM_24H_FORMAT,
ALARM_12H_FORMAT};



struct FrameAlarme;
#line 37 "..\\..\\SRC\\HMI\\HMI_FrameHistoAlarme.hpp"
struct FrameHistoAlarme;
#line 36 "..\\..\\SRC\\HMI\\HMI_MonitoringObjectTwoValue.hpp"
struct MonitoringObjectTwoValue;
#line 35 "..\\..\\SRC\\HMI\\HMI_GraphTitle.hpp"
struct GraphTitle;
#line 39 "..\\..\\SRC\\HMI\\HMI_DataBaseLink.hpp"
struct DataBaseLink;
#line 36 "..\\..\\SRC\\HMI\\HMI_Scale.hpp"
enum TOrientation { eHOR, eVERT};

enum TSide { eTOP, eBOTTOM};



struct Scale;
#line 39 "..\\..\\SRC\\HMI\\HMI_VPoint.hpp"
struct VPoint;
#line 39 "..\\..\\SRC\\HMI\\HMI_Pen.hpp"
struct Pen;
#line 38 "..\\..\\SRC\\HMI\\HMI_CurveData.hpp"
struct CurveData;
#line 41 "..\\..\\SRC\\HMI\\HMI_Graph.hpp"
enum TKind {
eLINE,
eBAR};
#line 49
struct Graph;
#line 35 "..\\..\\SRC\\HMI\\HMI_GraphControl.hpp"
struct GraphControl;
#line 34 "..\\..\\SRC\\HMI\\HMI_PerformanceGraphControl.hpp"
struct PerformanceGraphControl;
#line 35 "..\\..\\SRC\\HMI\\HMI_WobGraphControl.hpp"
struct WobGraphControl;
#line 65 "..\\..\\SRC\\HMI\\HMI_FrameGraph.hpp"
struct FrameGraph;
#line 38 "..\\..\\SRC\\HMI\\HMI_FrameGraphConfig.hpp"
struct FrameGraphConfig;
#line 40 "..\\..\\SRC\\HMI\\HMI_FrameBatteryMenu.hpp"
struct FrameBatteryMenu;
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelTwoValueCentered.hpp"
struct LabelTwoValueCentered;
#line 45 "..\\..\\SRC\\HMI\\HMI_FrameUSB.hpp"
struct FrameUSB;
#line 36 "..\\..\\SRC\\HMI\\HMI_TendanceTable.hpp"
struct TendanceTable;
#line 38 "..\\..\\SRC\\HMI\\HMI_FrameTendance.hpp"
struct FrameTendance;
#line 42 "..\\..\\SRC\\HMI\\HMI_MessageDelayed.hpp"
struct __Q2_14MessageDelayed11FifoMessage;
#line 38
struct MessageDelayed;
#line 34 "..\\..\\SRC\\DATABASE\\DB_Config.h"
enum e_DB_CONFIG {
ADJUST_LANGUAGE_U16,
ADJUST_MODE_U16,
ADJUST_KEYLOCK_U16,
VENTIL_REQ_U16,
OFFSET_INSP_FLOW_1_U16,
OFFSET_INSP_FLOW_2_U16,
OFFSET_INSP_FLOW_3_U16,
OFFSET_INSP_FLOW_4_U16,
OFFSET_INSP_FLOW_5_U16,
OFFSET_INSP_FLOW_6_U16,
OFFSET_INSP_FLOW_7_U16,
OFFSET_INSP_FLOW_8_U16,
OFFSET_EXH_FLOW_1_U16,
OFFSET_EXH_FLOW_2_U16,
OFFSET_EXH_FLOW_3_U16,
OFFSET_EXH_FLOW_4_U16,
OFFSET_EXH_FLOW_5_U16,
OFFSET_EXH_FLOW_6_U16,
OFFSET_EXH_FLOW_7_U16,
OFFSET_EXH_FLOW_8_U16,
OFFSET_O2_FLOW_1,
OFFSET_O2_FLOW_2,
OFFSET_O2_FLOW_3,
OFFSET_O2_FLOW_4,
OFFSET_O2_FLOW_5,
OFFSET_O2_FLOW_6,
OFFSET_O2_FLOW_7,
OFFSET_PATIENT_PRESS_1_U16,
OFFSET_PATIENT_PRESS_2_U16,
OFFSET_PATIENT_PROX_PRESS_1_U16,
OFFSET_PATIENT_PROX_PRESS_2_U16,
OFFSET_PRESS_O2,
I_VALVE_REF_U16,
OFFSET_FAS_VALVE_1_U16,
OFFSET_FAS_VALVE_2_U16,
OFFSET_FAS_VALVE_3_U16,
OFFSET_FAS_VALVE_4_U16,
OFFSET_FAS_VALVE_5_U16,
OFFSET_FAS_VALVE_6_U16,
OFFSET_FAS_VALVE_7_U16,
OFFSET_FAS_VALVE_8_U16,
OFFSET_FAS_VALVE_9_U16,
OFFSET_VALVE_PRESS_U16,
OFFSET_VALVE_PRESS_2_U16,
OFFSET_FIO2,
ADJUST_BRIGHTNESS_U16,
ADJUST_BACKLIGHT_U16,

SAVED_PATIENT_COUNTER_HOUR_U16,

SAVED_PATIENT_COUNTER_MIN_U16,

SAVED_MACHINE_COUNTER_HOUR_U16,

SAVED_MACHINE_COUNTER_MIN_U16,

RETRIEVAL_EVENT_ADRESS_MSB_U16,

RETRIEVAL_EVENT_ADRESS_LSB_U16,

FLASH_MONIT_WRITE_BLOCK_U16,

FLASH_MONIT_WRITE_PAGE_U16,

FLASH_MONIT_WRITE_COLUMN_U16,

FLASH_TREND_WRITE_BLOCK_U16,

FLASH_TREND_WRITE_PAGE_U16,

FLASH_TREND_WRITE_COLUMN_U16,

FLASH_FIRST_PARTITION_FULL_U16,

FLASH_SECOND_PARTITION_FULL_U16,

SPEED_COM_U16,
RAZ_COUNTER_PAT_DATE_U16,
RAZ_COUNTER_PAT_MONTH_U16,
RAZ_COUNTER_PAT_YEAR_U16,
RAZ_COUNTER_PAT_HOUR_U16,
RAZ_COUNTER_PAT_MIN_U16,
BAD_ERASE_U16,
SOUND_LEVEL_SELECT_U16,
PREVIOUS_SOUND_LEVEL_SELECT_U16,
CURVE_DISPLAY_TYPE_MODE_U16,
CURVE_MAX_PRESSURE_U16,
CURVE_MAX_FLOW_U16,
CURVE_MAX_VT_U16,
CURVE_MAX_TIME_U16,
CURVE_DRAW_MODE_U16,
ADJUST_CYCLING_MODE_U16,
ADJUST_KEY_TONE_U16,
ADJUST_WAVEFORM_DISPLAY_U16,
ADJUST_BAROMETRIC_CORRECTOR_U16,
ADJUST_FIO2,
ADJUST_FIO2_SELECT,
ADJUST_LOW_FIO2,
ADJUST_HIGH_FIO2,
ADJUST_LOW_SPO2,
ADJUST_HIGH_SPO2,
SPO2_LOW_SELECT,
SPO2_HIGH_SELECT,
FIO2_LOW_SELECT,
FIO2_HIGH_SELECT,
PRESSURE_UNIT_U16,
TRIGG_E_POSITIVE,
APNEA_ALARM_ACTIVATION,
FLASH_MEMORY_MANUFACTURER,
FLASH_MEMORY_DEVICE,
FLASH_MEMORY_FIVE_ADDRESS_CYCLES,
PARAM_COMPATIBILITY,
IHM_LOCKED_FRAME_ID,
ADJUST_PEDIATRIC_CIRCUIT_U16,
PREVIOUS_MODE_U16,
PRESSURE_SUPPORT_RELATIVE_U16,
PRESSURE_SUPPORT_CHANGED_U16,
VOLUNTARY_STOP_ALARM_ACTIVATION,
SOUND_TYPE_SELECT_U16,
end_of_db_config_table};
#line 34 "..\\..\\SRC\\DATABASE\\DB_Control.h"
enum e_DB_CONTROL {
VENTIL_AUTHORIZATION_U16,
CURRENT_MODE_U16,
CHANGE_MODE_U16,
VENTIL_STATE_U16,
SIMV_CYCLES_U16,
CALIB_PATIENT_PRESS_REQ_U16,
CALIB_FLOW_INSP_REQ_U16,
CALIB_FLOW_EXH_REQ_U16,
CALIB_VALVE_PRESS_REQ_U16,
CALIB_FAS_VALVE_REQ_U16,
INHIBITED_BUZZER_U16,
INHIBITION_AUTHORIZATION_U16,
CANCELLED_ALARM_U16,
BUZZER_CMD_U16,
CALIB_ADJUST_CMD_U16,
SETUP_CONTROL_SET_POINT_U16,
SETUP_CONTROL_TYPE_U16,
SUPPLY_AC_DC_BAT_U16,
DISPLAY_BATTERY_U16,
CURRENT_PATIENT_COUNTER_HOUR_U16,
CURRENT_PATIENT_COUNTER_MIN_U16,
CURRENT_MACHINE_COUNTER_HOUR_U16,
CURRENT_MACHINE_COUNTER_MIN_U16,
CONTROL_BUZZER_U16,
VALVE_DETECTED_U16,
AC_SELECTED_U16,
DC_SELECTED_U16,
REMOTE_STATE_U16,
PROXI_DETECTED_U16,
ALARM_DETECTED_U16,
NEW_ALARM_HP_DETECTED_U16,
Start_Limit_Setting,
LIMIT_LOW_PIP_U16,
LIMIT_HIGH_PIP_U16,
LIMIT_PEEP_U16,
LIMIT_VOL_CONTROL_U16,
LIMIT_TI_CONTROL_U16,
LIMIT_CONTROL_R_U16,
LIMIT_PI_U16,
LIMIT_LOW_VTI_U16,
LIMIT_HIGH_VTI_U16,
LIMIT_LOW_VTE_U16,
LIMIT_HIGH_VTE_U16,
LIMIT_P_SUPPORT_U16,
LIMIT_TI_MIN_U16,
LIMIT_TI_MAX_U16,
LIMIT_SPO2_MINI_U16,
LIMIT_SPO2_MAXI_U16,
LIMIT_INSP_SENS_U16,
LIMIT_SIGH_U16,
LIMIT_TARGET_VT_U16,
LIMIT_APNEA_U16,
LIMIT_HIGH_FIO2,
LIMIT_LOW_FIO2,
LIMIT_SPO2,
LIMIT_BACKUP_R_U16,
LIMIT_PMAX_U16,
End_Limit_Setting,
UNCANCEL_CMD_U16,
SUPPLY_BUS_FAILURE_U16,
KEYBOARD_ANOMALIE_U16,
VALIDATION_BIP_U16,
BIP_RUNNING_U16,
MAINTENANCE_MODE_U16,
CALIBRATION_MODE_U16,
TEST_BUZ_CARD_U16,
TEST_BUZ_SEC_U16,
TEST_VOLUME_U16,
CANCEL_ALARM_ASKED,
KEY_EVENT_U16,
BACKLIGHT_OFF_U16,
HIGH_PRESSURE_LED_REMINDER_U16,
RECORD_SETTINGS_USB_U16,
APPLY_SETTINGS_USB_U16,
ERASE_KEY_USB_U16,
RECORD_TIME_TENDANCE_U16,
ERROR_SPO2_SENSOR_DETECTED,
DETECTED_FIO2_SENSOR,
CALIBRATED_FIO2_SENSOR,
CALIB_ADJUST_VANNE_FIO2_CMD,
CALIB_FIO2_REQ_U16,
CALIB_FLOW_O2_REQ_U16,
MEMO_CMD_VANNE_FIO2_TO_CALIB,
CALIB_PRESS_O2_REQ_U16,
FLOW_SAT_FLAG_U16,
HIGH_PRESSURE_DETECTED_U16,
HIGH_PRESSURE_EXHALATION_DETECTED_U16,
HIGH_PRESSURE_FILTER_WINDOW_U16,
FIO2_100_ACTIVE,
LOAD_USB_SETTINGS_U16,
COM_READY_U16,
START_MONITORING_U16,
SIMV_PSV_CYCLE_U16,
BLOC_EXPI_DETECTED_U16,
ADJUSTMENT_IN_PROGRESS_U16,
VALVE_DETECT_IN_PROGRESS_U16,
EXHAL_FLOW_USE_U16,
FLAT_INT_U16,
FLAT_PROXI_U16,
VALVE_O2_CMD_U16,
CPAP_TRIG_I_U16,
CPAP_TRIG_E_U16,
CONTROLER_TYPE_U16,
VTI_DISPLAY_DELAY_U16,
VOLUNTARY_STOP_U16,
SIMV_CONTROLLED_INSP_U16,
END_OF_OPERATION_U16,
CIRCUIT_CHECK_MODE_U16,
end_of_db_control_table};
#line 28 "..\\..\\SRC\\DATABASE\\DB_Rtc.h"
enum e_DB_RTC {
DB_RTC_SECOND_U16,
DB_RTC_MINUTE_U16,
DB_RTC_HOUR_U16,
DB_RTC_DAY_U16,
DB_RTC_MONTH_U16,
DB_RTC_YEAR_U16,
ADJUST_RTC_REQ_U16,
ADJUST_RTC_SECOND_U16,
ADJUST_RTC_MINUTE_U16,
ADJUST_RTC_HOUR_U16,
ADJUST_RTC_DAY_U16,
ADJUST_RTC_MONTH_U16,
ADJUST_RTC_YEAR_U16,
end_of_db_rtc_table};
#line 37 "..\\..\\SRC\\DATABASE\\DB_Current.h"
enum e_DB_ADJUST_CURRENT {
ADJUST_VOL_CONTROL_U16,
ADJUST_P_CONTROL_U16,
ADJUST_PEEP_U16,
ADJUST_P_SUPPORT_U16,
ADJUST_RAMP_U16,
ADJUST_CONTROL_R_U16,
ADJUST_BACKUP_R_U16,
ADJUST_HIGH_R_U16,
HIGH_R_NO_SELECT_U16,
ADJUST_TI_CONTROL_U16,
ADJUST_INSP_SENS_U16,
INSP_SENS_NO_SELECT_U16,
ADJUST_EXH_SENS_U16,
AUTO_EXH_SENS_SELECT_U16,
ADJUST_APNEA_U16,
AUTO_APNEA_SELECT_U16,
ADJUST_LOW_PIP_U16,
ADJUST_HIGH_PIP_U16,
ADJUST_LOW_VTE_U16,
LOW_VTE_NO_SELECT_U16,
ADJUST_HIGH_VTE_U16,
HIGH_VTE_NO_SELECT_U16,
ADJUST_RISE_TIME_U16,
ADJUST_LOW_VM_U16,
LOW_VM_NO_SELECT_U16,
ADJUST_HIGH_VM_U16,
HIGH_VM_NO_SELECT_U16,
ADJUST_LOW_VTI_U16,
LOW_VTI_NO_SELECT_U16,
ADJUST_HIGH_VTI_U16,
HIGH_VTI_NO_SELECT_U16,
ADJUST_TI_MIN_U16,
TI_MIN_AUTO_SELECT_U16,
ADJUST_TI_MAX_U16,
TI_MAX_AUTO_SELECT_U16,
PI_SET_POINT_U16,
BACKUP_R_NO_SELECT_U16,
P_SUPPORT_NO_SELECT_U16,
CONTROL_R_NO_SELECT_U16,
PEEP_NO_SELECT_U16,
RISE_TIME_U16,
ADJUST_HIGH_LEAK_U16,
HIGH_LEAK_SELECT_U16,
CURRENT_USED_43_U16,
CURRENT_USED_44_U16,
CURRENT_USED_45_U16,
ADJUST_TARGET_VT_U16,
TARGET_VT_SELECT_U16,
ADJUST_MAX_PRESSURE_U16,
ADJUST_EXH_SENS_NEGATIVE_U16,
AUTO_EXH_SENS_NEG_SELECT_U16,
ADJUST_SIGH_SELECT_U16,
ADJUST_SIGH_CPT_U16,
ADJUST_SIGH_VT_COEF_U16,
ADJUST_DISCONNECTION_DELAY_U16,
DISCONNECTION_DELAY_AUTO_U16,
end_of_adjust_table};
#line 33 "..\\..\\SRC\\DATABASE\\DB_Usb.h"
enum e_DB_USB {
USB_ERASE_KEY_U16,
USB_TRANSFER_APPLY_U16,
USB_CONTINUOUS_RECORDING_U16,
USB_MONITOR_TRANSFER_U16,
USB_MONITOR_TRANSFER_SELECT_U16,
USB_TREND_TRANSFER_U16,
USB_TREND_TRANSFER_SELECT_U16,
USB_EVENTS_TRANSFER_U16,
USB_KEY1_DETECTED_AFTER_POWER_ON_U16,
USB_KEY2_DETECTED_AFTER_POWER_ON_U16,
USB_ERROR_CODE_READY_U16,
USB_ERROR_CODE_U16,
USB_ERROR_CODE_READY_IHM_U16,
USB_ERROR_CODE_IHM_U16,
USB_PROGRESS_HOURS_U16,
USB_PROGRESS_MINUTES_U16,
USB_COMMAND_SENT_U16,
USB_STOP_COMMAND_SENT_U16,
USB_MSNB_ONE_DETECTED_U16,
USB_MSNB_TWO_DETECTED_U16,
USB_NEW_KEY_CONNECTED_U16,
USB_MSB_FREE_SPACE_KEY_ONE,
USB_LSB_FREE_SPACE_KEY_ONE,
USB_MSB_FREE_SPACE_KEY_TWO,
USB_LSB_FREE_SPACE_KEY_TWO,
USB_NEW_MODE_DETECTED,
USB_NEW_MODE,
end_of_db_usb_table};
#line 109 "..\\..\\SRC\\HMI\\HMI_Setup1.hpp"
struct HMI_Setup1;
#line 130 "..\\..\\SRC\\HMI\\HMI_Controller.hpp"
enum __Q2_10Controller5WayId {
eGoUp__10Controller, eGoDown__10Controller, eGoValid__10Controller, eGoLongValid__10Controller, eGoMonitor__10Controller};



enum __Q2_10Controller11LegendState {
eOnStart__10Controller, eOnWait__10Controller, eStartVentil__10Controller, eStopVentil__10Controller};



enum __Q2_10Controller11eSTEP_LEVEL {
eSTEP_LEVEL_LOW__10Controller, eSTEP_LEVEL_HIGH__10Controller};
#line 118
struct Controller;
#line 40 "..\\..\\SRC\\HMI\\HMI_MenuControlNode.hpp"
struct MenuControlNode;
#line 36 "..\\..\\SRC\\HMI\\HMI_GlobalEventNode.hpp"
enum IndexNode {

NodeVentil, NodeModifVentil, NodeVt, NodeModifVt, NodePi, NodeModifPi, NodePi2, NodeModifPi2,
NodePControl, NodeModifPControl, NodePSupport, NodeModifPSupport, NodeFVaci, NodeModifFVaci, NodePe, NodeModifPe, NodePente,
NodeModifPente, NodeRampe, NodeModifRampe, NodeFrMini, NodeModifFrMini, NodeInspTime, NodeModifInspTime,
NodeTriggerI, NodeModifTriggerI, NodeSoupirSelect, NodeModifSoupirSelect, NodeSoupirVtCoeff, NodeModifSoupirVtCoeff,
NodeSoupirCpt, NodeModifSoupirCpt, NodeTriggerE, NodeModifTriggerE, NodeFsecu, NodeModifFsecu, NodeFiO2,
NodeModifFiO2, NodeApnee, NodeModifApnee, NodeVtCible, NodeModifVtCible, NodePiMax, NodeModifPiMax,
NodeTriggerEsigned, NodeModifTriggerEsigned, NodePreference, NodeModeChange,
NodeModifModeChange, NodeGhost,


NodeAlarm, NodeModifAlarm, NodeAlPi, NodeAlPiMin, NodeAlPiMax, NodeAlVti, NodeAlVtiMin,
NodeAlVtiMax, NodeAlVte, NodeAlVteMin, NodeAlVteMax, NodeAlCalibVte, NodeAlCalibVte2, NodeAlFuite,
NodeAlFuiteMax, NodeAlFiO2, NodeAlFiO2Min, NodeAlFiO2Max, NodeAlCalibFiO2, NodeAlCalibFiO2_2, NodeAlFr, NodeAlFrMax, NodeAlSpO2,
NodeAlSpO2Min, NodeAlSpO2Max, NodeAlTi, NodeAlTiMin, NodeAlTiMax,
NodeAlHisto, NodeAlModeChange, NodeModifAlModeChange, NodeAlGhost,


NodeHistAlBack, NodeHistAlCancelled,


NodeConfLang,
NodeModifConfLang,
NodeConfDate,
NodeConfMonth,
NodeConfDay,
NodeConfYear,
NodeConfTime,
NodeConfHour,
NodeConfMinute,
NodeConfSecond,
NodePrefVoluntaryStopAlarm,
NodeModifPrefVoluntaryStopAlarm,
NodeConfPressureUnit,
NodeModifConfPressureUnit,
NodeConfAlarmTone,
NodeModifConfAlarmTone,
NodeConfPatientCount,
NodeModifConfPatientCount,
NodeConfPatientReset,
NodeModifConfPatientReset,
NodeConfMaint,
NodeConfResetDefaultSetting,
NodeModifConfResetDefaultSetting,
NodeConfMachineHour,
NodeConfNextPage,



NodeConfModeCycl,
NodeModifConfModeCycl,
NodeConfRelativePress,
NodeModifConfRelativePress,

NodeConfConvTrigE,
NodeModifConfConvTrigE,
NodeConfig1BackToConfig,


NodeTestCircuitLeak,


NodePrefScreenSave, NodeModifPrefScreenSave, NodePrefBrightness, NodeModifPrefBrightness, NodePrefSoundLevel, NodeModifPrefSoundLevel, NodePrefKeyTone,
NodeModifPrefKeyTone, NodePrefApneaAlarm, NodeModifPrefApneaAlarm, NodePrefDisconnectionAlarm, NodeModifPrefDisconnectionAlarm,




NodePrefWaveDisplay,
NodeModifPrefWaveDisplay,


NodePrefPediatricCircuit,
NodeModifPrefPediatricCircuit,
NodePrefTrend,
NodePrefBackVentil,


NodeMaintHistAno, NodeMaintVoltCtrl, NodeMaintSensorCal,
NodeMaintGhostStart,
NodeMaintPatientPressure, NodeMaintPatientPressure1, NodeMaintPatientPressure2, NodeMaintPatientPressure3,
NoteMaintValvePressure, NoteMaintValvePressure1, NoteMaintValvePressure2, NoteMaintValvePressure3,
NodeMaintFlowIns, NodeMaintFlowIns1, NodeMaintFlowIns2, NodeMaintFlowIns3, NodeMaintFlowIns4, NodeMaintFlowIns5, NodeMaintFlowIns6, NodeMaintFlowIns7, NodeMaintFlowIns8, NodeMaintFlowIns9,
NodeMaintFlowExp, NodeMaintFlowExp1, NodeMaintFlowExp2, NodeMaintFlowExp3, NodeMaintFlowExp4, NodeMaintFlowExp5, NodeMaintFlowExp6, NodeMaintFlowExp7, NodeMaintFlowExp8, NodeMaintFlowExp9,
NodeMaintFiO2Concent, NodeMaintFiO2Concent1, NodeMaintFiO2Concent2,
NodeMaintFlowO2, NodeMaintFlowO2_1, NodeMaintFlowO2_2, NodeMaintFlowO2_3, NodeMaintFlowO2_4, NodeMaintFlowO2_5, NodeMaintFlowO2_6, NodeMaintFlowO2_7, NodeMaintFlowO2_8, NodeMaintFlowO2_9,
NodeMaintPressO2, NodeMaintPressO2_1, NodeMaintPressO2_2,
NodeMaintGhostEnd,
NodeMaintPwmBlower, NodeModifMaintPwmBlower, NodeMaintBackToConfig,


NodeHistAnoBackMaint,


NodeSupplyBuzVolt, NodeSupplyBackUpBuz, NodeSupplyBatteryMenu, NodeSupplyAltCompens, NodeModifSupplyAltCompens, NodeSupplyBackToMaint,


NodeGraphGhost,


NodeCfgGraphVisu, NodeModifCfgGraphVisu, NodeCfgGraphPMax, NodeModifCfgGraphPMax, NodeCfgGraphQMax, NodeModifCfgGraphQMax, NodeCfgGraphVtMax,
NodeModifCfgGraphVtMax, NodeCfgGraphTMax, NodeModifCfgGraphTMax, NodeCfgGraphRepresent, NodeModifCfgGraphRepresent, NodeCfgGraphBackPref,


NodeBatteryBackToMaint,


NodeUsbGhost,
NodeUsbContRecord, NodeModifUsbContRecord,
NodeUsbTransferTrend, NodeModifUsbTransferTrend,
NodeUsbEraseKey, NodeModifUsbEraseKey,




NodeUsbTransferMonit, NodeModifUsbTransferMonit,




NodeUsbStop,

NodeTrendBack,


NodeGhostEnd,


NodeFree,


NB_NODE};
#line 40 "..\\..\\SRC\\HMI\\HMI_EventNode.hpp"
struct EventNode;
#line 28 "..\\..\\SRC\\DATABASE\\DB_AlarmStatus.h"
enum e_DB_ALARMS {
Mark_Begin_Alarm,
ALARM_DISCONNECTION_U16,
ALARM_HIGH_PRESSURE_U16,
ALARM_APNEA_U16,
ALARM_HIGH_VTI_U16,
ALARM_LOW_VTI_U16,
ALARM_LOW_VTE_U16,
ALARM_HIGH_RATE_U16,
ALARM_AC_POWER_FAIL_U16,
ALARM_DC_POWER_FAIL_U16,
ALARM_CHECK_SUPPLY_U16,
ALARM_LOW_BATTERY_U16,
ALARM_END_OF_BATTERY_U16,
ALARM_CHECK_BATTERY_U16,
ALARM_NO_BATTERY_U16,
ALARM_CHECK_BUZZER_U16,
ALARM_BUZZER_BATTERY_LOW_U16,
ALARM_BUZZER_BATTERY_CHARGE_FAILURE_U16,
ALARM_RESERVED_18,
ALARM_TECHNICAL_PROBLEM_U16,
ALARM_CHECK_SETTINGS_U16,
ALARM_CHECK_PRESSURE_U16,
ALARM_CHECK_PROXIMAL_U16,
ALARM_PROXI_DISCONNECTION_U16,
ALARM_NO_PROXIMAL_U16,
ALARM_CHECK_VALVE_U16,
ALARM_CHECK_VOLUME_U16,
ALARM_VALVE_LEAKAGE_U16,
ALARM_CHECK_REMOTE_ALARM_U16,
ALARM_UNKNOWN_BATTERY_U16,
ALARM_CHECK_BATTERY_CHARGE_U16,
ALARM_HIGH_VTE_U16,
ALARM_CALIBRATION_FAIL_U16,
ALARM_KEYBOARD_DEFAULT_U16,
ALARM_AMBIENT_TEMP_U16,
ALARM_BAT_TEMP_U16,
ALARM_FAILURE_24V_U16,
ALARM_COOLING_FAN_U16,
ALARM_SUPPLY_MEASURE_U16,
ALARM_TURBINE_OVERHEAT_U16,
ALARM_RESERVED_40,
ALARM_CONTROLLED_CYCLES_U16,
ALARM_OCCLUSION_U16,
ALARM_CPU_REFERENCE_U16,
ALARM_BREATH_TIME_CYCLED_U16,
ALARM_INSP_FLOW_FAILURE_U16,
ALARM_CHECK_VALVE_PRESSURE_U16,
ALARM_UTILISER_VALVE_CHANGER_PE_PI_1_U16,
ALARM_UTILISER_VALVE_CHANGER_PE_PI_2_U16,
ALARM_ENLEVER_VALVE_CHANGER_PE_PI_1_U16,
ALARM_ENLEVER_VALVE_CHANGER_PE_PI_2_U16,
ALARM_UTILISER_VALVE_1_U16,
ALARM_UTILISER_VALVE_2_U16,
ALARM_ENLEVER_VALVE_1_U16,
ALARM_ENLEVER_VALVE_2_U16,
ALARM_LEAKAGE_U16,
ALARM_CHECK_FIO2_U16,
ALARM_LOW_FIO2_U16,
ALARM_HIGH_FIO2_U16,
ALARM_NO_FIO2_SENSOR_U16,
ALARM_CALIB_FIO2_U16,
ALARM_CHECK_O2_SUPPLY_U16,
ALARM_MISSING_O2_SUPPLY_U16,
ALARM_CHECK_O2_U16,
ALARM_O2_LEAKAGE_U16,
ALARM_HIGH_SPO2_U16,
ALARM_LOW_SPO2_U16,
ALARM_SPO2_SENSOR_DISCONNECTED_U16,
ALARM_100_PER_CENT_O2_U16,
ALARM_DELAYED_MESSAGE_U16,
ALARM_LEAK_OCCLUSION_U16,
ALARM_VOLUNTARY_STOP_U16,
ALARM_NEEDED_FIO2_CALIB_U16,
ALARM_APNEA_FLAG_U16,
Mark_Displayed_Alarm,
Mark_Begin_Technical_Alarm,
TECH_ALARM_RESERVED_1,
TECH_ALARM_INSP_FLOW_OFFSET_DEFAULT_U16,
TECH_ALARM_EXHAL_FLOW_OFFSET_DEFAULT_U16,
TECH_ALARM_VALVE_PRESS_OFFSET_DEFAULT_U16,
TECH_ALARM_INTERNAL_PRESSURE_OFFSET_DEFAULT_U16,
TECH_ALARM_SPEED_DEFAULT_U16,
TECH_ALARM_CLOCK_DEFAULT_U16,
TECH_ALARM_PROXIMAL_PRESSURE_OFFSET_DEFAULT_U16,
TECH_ALARM_VERY_LOW_PROXIMAL_PRESS_U16,
TECH_ALARM_VERY_LOW_INTERNAL_PRESS_U16,
TECH_ALARM_VERY_LOW_VALVE_PRESS_U16,
TECH_ALARM_LOOSE_FLASH_POINTER,
TECH_ALARM_FIO2_OFFSET_DEFAULT,
TECH_ALARM_OFFSET_O2_FLOW,
TECH_ALARM_O2_PRESSURE_OFFSET_DEFAULT,
TECH_ALARM_RESERVED_16,
TECH_ALARM_RESERVED_17,
TECH_ALARM_RESERVED_18,
TECH_ALARM_RESERVED_19,
TECH_ALARM_RESERVED_20,
end_of_alarms_table,
NO_ALARM};
#line 32 "..\\..\\SRC\\DATABASE\\DB_Event.h"
enum e_EVENT_ENUM {

NO_EVENT,
EVENT_START,
EVENT_VENTIL,
EVENT_VOLUNTARY_STOP_VENTIL,
EVENT_MODIF_PEEP,
EVENT_MODIF_BACKUP_R,
EVENT_RESET_PATIENT_COUNTER,
EVENT_MODIF_CONTROL_R,
RESERVED_8,
EVENT_MODIF_VOL_CONTROL,
EVENT_MODIF_RAMP,
EVENT_MODIF_IE,
RESERVED_12,
EVENT_MODIF_STOP_DEVICE,
EVENT_MODIF_INSP_SENS,
EVENT_MODIF_MODE,
EVENT_MODIF_RISE_TIME,
EVENT_MODIF_P_SUPPORT,
EVENT_MODIF_VTC,
EVENT_MODIF_PIMAX,
EVENT_MODIF_IT,
RESERVED_21,
EVENT_MODIF_EXH_SENS,
EVENT_MODIF_APNEA_TIME,
EVENT_MODIF_LOW_PIP,
EVENT_MODIF_HIGH_PIP,
EVENT_MODIF_HIGH_R,
EVENT_MODIF_LOW_VTE,
RESERVED_28,
RESERVED_29,
EVENT_MODIF_LOW_VTI,
EVENT_MODIF_HIGH_VTI,
RESERVED_32,
RESERVED_33,
RESERVED_34,
RESERVED_35,
EVENT_UNVOLUNTARY_STOP_VENTIL,
RESERVED_37,
RESERVED_38,
RESERVED_39,
EVENT_EXH_FLOW_CALIB,
RESERVED_41,
EVENT_MODIF_FIO2,
EVENT_FIO2_CALIB,
EVENT_MODIF_MAX_LEAK,
EVENT_INSP_FLOW_CALIB,
EVENT_O2_FLOW_CALIB,
EVENT_PATIENT_PRESS_CALIB,
RESERVED_48,
EVENT_MODIF_SPO2_MAXI,
EVENT_MODIF_SPO2_MINI,
EVENT_MODIF_TI_MAXI,
EVENT_MODIF_TI_MINI,
EVENT_VALVE_PRESS_CALIB,
EVENT_AC_RETURN,
EVENT_O2_PRESS_CALIB,
EVENT_ALARM_INHIBITION,
EVENT_DC_RETURN,
EVENT_CIRCUIT_CHECK_MENU_ACCESS,
EVENT_MAINTENANCE_MENU_ACCESS,
EVENT_ALARM_CANCELLATION,
EVENT_MODIF_P_CONTROL,
EVENT_MODIF_TI_CONTROL,
RESERVED_63,
RESERVED_64,
EVENT_MODIF_HIGH_VTE,
EVENT_MODIF_TIME,
EVENT_MODIF_DATE,
EVENT_USB_TOO_MANY_KEYS_CONNECTED,
EVENT_USB_KEY_DISCONNECTED_DURING_OPERATION,
EVENT_USB_TRANSFER_ERROR,
EVENT_USB_ERASE_KEY_ERROR,
EVENT_USB_SETTINGS_INCOMPATIBLES,
EVENT_USB_SETTINGS_FILE_ERROR,
EVENT_USB_KEY_FULL,
EVENT_USB_SETTINGS_TRANSFER_FROM_KEY,
EVENT_MODIF_FIO2_MAXI,
EVENT_MODIF_FIO2_MINI,
EVENT_MODIF_DISCONNECTION_DELAY,
EVENT_MODIF_SIGHT_COUNT,
EVENT_MODIF_SIGHT_COEF,
EVENT_FLASH_CHECKSUM_POST_ERROR,
EVENT_RAM_CHECKSUM_POST_ERROR,
EVENT_VOLT_REFERENCE_POST_ERROR,
EVENT_EEPROM_POST_ERROR,
EVENT_POST_VERSION_ERROR,
EVENT_USB_CONTINUOUS_TRANSFER_START,
EVENT_USB_CONTINUOUS_TRANSFER_STOP,
RESERVED_88,
Start_Alarm,
EVENT_AL_HIGH_PRESS,
EVENT_AL_DISCONNECTION,
EVENT_AL_HIGH_RATE,
EVENT_AL_LOW_VTI,
EVENT_AL_HIGH_VTI,
EVENT_AL_LOW_VTE,
EVENT_AL_VALVE_LEAKAGE,
EVENT_AL_APNEA,
EVENT_AL_LOW_FIO2,
EVENT_AL_HIGH_FIO2,
EVENT_AL_CHECK_PRESSURE,
EVENT_AL_CHECK_VALVE,
EVENT_AL_AC_POWER_FAIL,
EVENT_AL_DC_POWER_FAIL,
EVENT_AL_LOW_BATTERY,
EVENT_AL_END_OF_BATTERY,
EVENT_AL_CHECK_BATTERY,
EVENT_AL_HIGH_SPO2,
EVENT_AL_NO_FIO2_SENSOR,
EVENT_AL_LEAKAGE,
EVENT_AL_LEAK_OCCLUSION,
EVENT_AL_LOW_SPO2,
EVENT_AL_NO_BATTERY,
EVENT_AL_NO_PROXI,
EVENT_AL_O2_LEAKAGE,
EVENT_AL_CHECK_VOLUME,
EVENT_AL_CHECK_BUZZER,
EVENT_AL_CHECK_FIO2,
EVENT_AL_CHECK_O2,
EVENT_AL_CHECK_O2_SUPPLY,
EVENT_AL_CHECK_PROXIMAL,
EVENT_AL_CHECK_REMOTE_ALARM,
EVENT_AL_CHECK_SUPPLY,
RESERVED_123,
EVENT_AL_CONNECT_VALVE,
EVENT_AL_CONNECT_VALVE_CHANGE_PI_PE,
EVENT_AL_DISCONNECT_VALVE,
EVENT_AL_DISCONNECT_VALVE_CHANGE_PI_PE,
EVENT_AL_PROXIMAL_DISCONNECTION,
EVENT_AL_TECHNICAL_PROBLEM,
EVENT_AL_CHECK_VALVE_PRESSURE,
EVENT_AL_SPO2_SENSOR_DISCONNECTED,
EVENT_AL_MISSING_O2_SUPPLY,
EVENT_AL_CONTROLLED_CYCLES,
RESERVED_134,
EVENT_AL_100_PER_CENT_O2,
EVENT_AL_UNKNOWN_BATTERY,
EVENT_AL_CHECK_BATTERY_CHARGE,
RESERVED_138,
RESERVED_139,
RESERVED_140,
RESERVED_141,
EVENT_AL_NEW_VERSION,
EVENT_AL_EEPROM_OUT_OF_RANGE,
EVENT_AL_EEPROM_LOOSING_PARAM,
RESERVED_145,
EVENT_AL_HIGH_VTE,
EVENT_AL_KEYBOARD,
EVENT_AL_CALIBRATION,
EVENT_AL_COOLING_FAN,
EVENT_AL_AMBIENT_TEMP,
EVENT_AL_BAT_TEMP,
EVENT_AL_SUPPLY_MEASURE,
EVENT_AL_FAILURE_24V,
EVENT_AL_TURBINE_OVERHEAT,
EVENT_AL_OCCLUSION,
EVENT_AL_CPU_REFERENCE,
RESERVED_157,
EVENT_AL_BREATH_TIME_CYCLED,
EVENT_AL_INSP_FLOW_FAILURE,
EVENT_AL_LOW_BUZZER_BATTERY,
RESERVED_161,
EVENT_AL_BUZZER_BATTERY_CHARGE_FAILURE,
EVENT_AL_NEEDED_FIO2_CALIB,
EVENT_AL_VOLUNTARY_STOP,
RESERVED_165,
RESERVED_166,
RESERVED_167,
End_Event_Alarm,
Start_End_Of_Alarm,
EVENT_AL_END_OF_APNEA,
EVENT_AL_END_OF_CHECK_BATTERY,
EVENT_AL_END_OF_DISCONNECTION,
EVENT_AL_END_OF_CHECK_FIO2,
EVENT_AL_END_OF_CHECK_O2,
EVENT_AL_END_OF_CHECK_O2_SUPPLY,
EVENT_AL_END_OF_CHECK_PRESSURE,
EVENT_AL_END_OF_CHECK_PROXIMAL,
RESERVED_178,
RESERVED_179,
EVENT_AL_END_OF_CHECK_SUPPLY,
EVENT_AL_END_OF_CHECK_VALVE,
EVENT_AL_END_OF_LEAK_OCCLUSION,
EVENT_AL_END_OF_CHECK_VOLUME,
EVENT_AL_END_OF_CONNECT_VALVE,
EVENT_AL_END_OF_CONNECT_VALVE_CHANGE_PI_PE,
EVENT_AL_END_OF_DISCONNECT_VALVE,
EVENT_AL_END_OF_DISCONNECT_VALVE_CHANGE_PI_PE,
EVENT_AL_END_OF_HIGH_FIO2,
EVENT_AL_END_OF_HIGH_PRESSURE,
EVENT_AL_END_OF_HIGH_RATE,
EVENT_AL_END_OF_HIGH_SPO2,
EVENT_AL_END_OF_HIGH_VTI,
EVENT_AL_END_OF_LEAKAGE,
EVENT_AL_END_OF_LOW_FIO2,
EVENT_AL_END_OF_LOW_SPO2,
EVENT_AL_END_OF_LOW_VTE,
EVENT_AL_END_OF_LOW_VTI,
EVENT_AL_END_OF_NO_BATTERY,
EVENT_AL_END_OF_NO_FIO2_SENSOR,
EVENT_AL_END_OF_NO_PROXI,
EVENT_AL_END_OF_O2_LEAKAGE,
EVENT_AL_END_OF_PROXI_DISCONNECTION,
EVENT_AL_END_OF_TECHNICAL_PROBLEM,
EVENT_AL_END_OF_VALVE_LEAKAGE,
EVENT_AL_END_OF_HIGH_VTE,
EVENT_AL_END_KEYBOARD,
EVENT_AL_END_CHECK_VALVE_PRESSURE,
EVENT_AL_END_SPO2_SENSOR_DISCONNECTED,
EVENT_AL_END_MISSING_O2_SUPPLY,
EVENT_AL_END_CONTROLLED_CYCLES,
RESERVED_211,
EVENT_AL_END_OF_100_PER_CENT_O2,
EVENT_AL_END_OF_UNKNOWN_BATTERY,
EVENT_AL_END_OF_CHECK_BATTERY_CHARGE,
RESERVED_215,
RESERVED_216,
RESERVED_217,
RESERVED_218,
EVENT_AL_END_COOLING_FAN,
EVENT_AL_END_AMBIENT_TEMP,
EVENT_AL_END_BAT_TEMP,
EVENT_AL_END_SUPPLY_MEASURE,
EVENT_AL_END_FAILURE_24V,
RESERVED_224,
EVENT_AL_END_OCCLUSION,
EVENT_AL_END_CPU_REFERENCE,
RESERVED_227,
EVENT_AL_END_BREATH_TIME_CYCLED,
EVENT_AL_END_OF_INSP_FLOW_FAILURE,
EVENT_AL_END_LOW_BUZZER_BATTERY,
RESERVED_231,
EVENT_AL_END_BUZZER_BATTERY_CHARGE_FAILURE,
EVENT_AL_END_OF_VOLUNTARY_STOP,
RESERVED_234,
RESERVED_235,
End_Alarm,
Start_Anomalies,
RESERVED_238,
EVENT_ALT_INSP_FLOW_OFFSET,
EVENT_ALT_EXH_FLOW_OFFSET,
EVENT_ALT_VALVE_PRESSURE_OFFSET,
EVENT_ALT_INT_PRESS_OFSSET,
EVENT_ALT_SPEED,
EVENT_ALT_CLOCK,
EVENT_ALT_PROXI_PRESS_OFSSET,
EVENT_ALT_VERY_LOW_PROXI_PRESS,
EVENT_ALT_VERY_LOW_INT_PRESS,
EVENT_ALT_VERY_LOW_VALVE_PRESS,
EVENT_ALT_LOOSE_FLASH_POINTER,
EVENT_ALT_FIO2_OFFSET,
EVENT_ALT_O2_FLOW_OFFSET,
EVENT_ALT_O2_PRESSURE_OFFSET,
RESERVED_253,
RESERVED_254,
End_Anomalie};
#line 129 "..\\..\\SRC\\GENERAL\\Structure.h"
enum e_StorageType {
FULL,
MSB,
LSB,
STORAGE_CONSTANT};
#line 35 "..\\..\\SRC\\DATABASE\\DB_Compute.h"
enum e_DB_COMPUTE {
MEASURE_VALVE_PRESSURE_S16,
FILTER_VALVE_PRESSURE_S16,
MEASURE_INTERNAL_PRESSURE_S16,
FILTER_INTERNAL_PRESSURE_S16,
MEASURE_PATIENT_PRESSURE_PROXI_S16,
FILTER_PATIENT_PRESSURE_PROXI_S16,
MEASURE_PATIENT_PRESSURE_S16,
FILTER_PATIENT_PRESSURE_S16,
MEASURE_QINSP_S16,
FILTER_QI_S16,
FILTER_QI_LOW_S16,
MEASURE_QEXH_S16,
FILTER_QE_S16,
COMPUTED_VTE_U16,
COMPUTED_VTE_INSP_U16,
COMPUTED_PIP_U16,
COMPUTED_PEEP_U16,
COMPUTED_FIO2,
MEASURE_FIO2,
MEASURE_IE_NUMERATOR_U16,
MEASURE_IE_DENOMINATOR_U16,
MEASURE_TI_U16,
MEASURE_TI_HMI_U16,
MEASURE_TE_U16,
MEASURE_R_U16,
MEASURE_SPEED_BLOWER_U16,
FILTER_SPEED_BLOWER_S16,
COMPUTED_BATTERY_LEVEL_U16,
MEASURE_SUPPLY_5V_U16,
MEASURE_SUPPLY_24V_U16,
MEASURE_TEST_BUZZER_VOLTAGE_U16,
MEASURE_BUZZER_VOLTAGE_U16,
MEASURE_BATTERY_BUZZER_VOLTAGE_U16,
MEASURE_PFI_VOLTAGE_U16,
COMPUTED_PI_SET_POINT_U16,
COMPUTED_VTI_EXH_S16,
MEASURE_SPO2_U16,
MEASURE_HR_U16,
COMPUTED_LEAK_U16,
COMPUTED_LEAK_HMI_U16,
CURVE_CORRECTED_VT_WOB_U16,
CURVE_CORRECTED_FLOW_S16,
COMPUTED_TEMP_S16,
COMPUTED_VTI_U16,
COMPUTED_USED_44_U16,
COMPUTED_USED_45_U16,
MEASURE_BATTERY_VOLTAGE_U16,
COMPUTED_VMI_U16,
COMPUTED_VME_U16,
AVERAGE_PRESSURE_U16,
MEASURE_ABSOLUTE_PRESSURE_U16,
MEASURE_BLOWER_TEMPERATURE_S16,
COMPUTED_RISE_TIME_U16,
MEASURE_IT_U16,
MEASURE_BATTERY_CAPACITY_U16,
COMPUTED_PULSE_U16,
COMPUTE_CORRECTED_Q,
COMPUTED_TI_CONTROL_U16,
FILTER_QO2_S16,
FILTER_PRESSURE_O2_S16,
MEASURE_PRESSURE_O2_S16,
MEASURE_QO2_S16,
COMPUTED_IE_NUMERATOR_U16,
COMPUTED_IE_DENOMINATOR_U16,
COMPUTE_QEE_S16,
COMPUTED_I_T_U16,
MEAS_ABS_PRESS_MMHG_U16,
COMPUTED_RATE_U16,
BLOWER_COMMAND_U16,
MEASURE_ZERO_VALUE_U16,
COMPUTED_P_VALVE_MAX_U16,
CUMUL_PRESS_INSP_S16,
ESTIMATED_PROXIMAL_PRESSURE_S16,
MEASURE_QINSP_LEAKCORRECTED_S16,
MEASURE_VALVE_CURRENT_U16,
MEAN_INSP_VALVE_CURRENT_U16,
VALVE_COMMAND_INIT_U16,
VALVE_COMMAND_MIN_U16,
VALVE_COMMAND_MAX_U16,
VALVE_COMMAND_COEFF_U16,
VALVE_COMMAND_U16,
LPF_PATIENT_PRESSURE_S16,
COMPUTED_LPF_PIP_U16,
LEAK_TEST_QI_S16,
LEAK_TEST_RESULT_U16,
end_of_db_compute_table}; struct __T51439500 { short d; short i; void (*f)();}; typedef char bool;
#line 33 "..\\..\\SRC\\GENERAL\\typedef.h"
typedef int e_BOOL;
#line 63
typedef unsigned char UBYTE;
typedef unsigned UWORD16;
typedef unsigned long UWORD32;

typedef signed int SWORD16;
typedef signed long SWORD32;
#line 104 "..\\..\\SRC\\GENERAL\\enum.h"
typedef enum e_SYMBOL e_SYMBOL;
#line 391
typedef enum e_TYPE_OF_DB_TARGET e_TYPE_OF_DB_TARGET;
#line 405
typedef enum e_DATA_OPERATION e_DATA_OPERATION;
#line 417
typedef enum e_MODE_TYPES e_MODE_TYPES;
#line 557
typedef enum e_VentilState e_VentilState;
#line 106 "..\\..\\SRC\\HMI\\HMI_IhmType.hpp"
struct AlarmEvent {
UWORD16 id;
UWORD16 action;
e_BOOL logtolast;
UWORD16 day;
UWORD16 month;
UWORD16 year;
UWORD16 hour;
UWORD16 min;};
typedef struct AlarmEvent AlarmEvent;
#line 199
typedef enum EventId EventId;
#line 39 "..\\..\\SRC\\HMI\\HMI_MenuObject.hpp"
struct MenuObject {
#line 45
e_TYPE_OF_DB_TARGET DbTarget;

UWORD16 IdParam; struct __T51439500 *__vptr;};
#line 41 "..\\..\\SRC\\HMI\\HMI_DisplayObject.hpp"
struct DisplayObject { struct MenuObject __b_MenuObject;
#line 47
struct DisplayObject *Parent;


UWORD16 Line;


UWORD16 Col;


UWORD16 Page;

e_BOOL Visible;

e_BOOL RefreshE;};
#line 39 "..\\..\\SRC\\HMI\\HMI_FieldObject.hpp"
struct FieldObject { struct DisplayObject __b_DisplayObject;
#line 47
UWORD16 Font;

e_BOOL ReverseVideo;};
#line 34 "..\\..\\SRC\\HMI\\HMI_ValueField.hpp"
struct ValueField { struct FieldObject __b_FieldObject;
#line 41
UWORD16 Value; UWORD16 NbDigit; UWORD16 Divider;

e_BOOL DisplayZero; e_BOOL Float; e_BOOL SignValue;
#line 51
e_BOOL ChildBackgroundEqualParent;

e_BOOL IEDisplay;};
#line 34 "..\\..\\SRC\\HMI\\HMI_TextField.hpp"
struct TextField { struct FieldObject __b_FieldObject;
#line 41
UBYTE *Text;};
#line 34 "..\\..\\SRC\\HMI\\HMI_GraphicBox.hpp"
struct GraphicBox { struct DisplayObject __b_DisplayObject;
#line 42
UWORD16 Height;


UWORD16 Width;

e_BOOL FloodBlack;
e_BOOL RoundHigh;
e_BOOL RoundLow;};
#line 34 "..\\..\\SRC\\HMI\\HMI_SymbolField.hpp"
struct SymbolField { struct FieldObject __b_FieldObject;
#line 40
e_SYMBOL Symbol;

e_BOOL BarredSymbol;};
#line 40 "..\\..\\SRC\\HMI\\HMI_MessageDialog.hpp"
struct MessageDialog { struct DisplayObject __b_DisplayObject;
#line 46
struct TextField FLine1;
e_BOOL Line1Centered;

struct TextField FLine2;
e_BOOL Line2Centered;

struct TextField FLine3;
e_BOOL Line3Centered;

struct SymbolField FSymbol;

struct GraphicBox MonitorBox;

UBYTE TextLine[3][33];

e_BOOL Line1Ok; e_BOOL Line2Ok; e_BOOL Line3Ok; e_BOOL SymbolOk;

UWORD16 WBox;};
#line 46 "..\\..\\SRC\\HMI\\HMI_Loupe.hpp"
typedef enum DataType DataType;

struct Loupe { struct DisplayObject __b_DisplayObject;



struct TextField FValueS;

struct ValueField FValueI;

e_BOOL StringValue;
e_BOOL HaveText;

DataType Dtype;
#line 68
struct MessageDialog Message;

struct GraphicBox MonitorBox;};
#line 37 "..\\..\\SRC\\HMI\\HMI_Label.hpp"
struct Label { struct DisplayObject __b_DisplayObject;
#line 44
e_SYMBOL PreviousIcon;

UBYTE **Name;

struct Loupe *LoupeObject;

struct SymbolField FIcon;

struct TextField FLabel;

e_BOOL Centered;};
#line 34 "..\\..\\SRC\\HMI\\HMI_EditableObject.hpp"
struct EditableObject { struct Label __b_Label;
#line 42
UWORD16 ValueTemp;


UWORD16 IdFlagTemp;


UWORD16 ValueFlagTemp;

e_TYPE_OF_DB_TARGET DbIdFlagTemp;};
#line 34 "..\\..\\SRC\\HMI\\HMI_ValueTextField.hpp"
struct ValueTextField { struct ValueField __b_ValueField;
#line 41
UBYTE *Text;

e_BOOL IsString;};
#line 39 "..\\..\\SRC\\HMI\\HMI_LabelOneValue.hpp"
struct LabelOneValue { struct EditableObject __b_EditableObject;
#line 46
struct TextField FUnit1;
struct TextField FSep;

struct ValueTextField FValue1;

e_BOOL LabelOnly;
e_BOOL ValueIsString;
e_BOOL StopMonitoring;

UBYTE **NameUnit;

UWORD16 Divider;

e_BOOL NbDigitsChanged;
e_BOOL InitNbDigits;

e_BOOL MaxDisplayValueConfigured;
UWORD16 MaxDisplayValue;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelOneValueSign.hpp"
struct LabelOneValueSign { struct LabelOneValue __b_LabelOneValue;




struct TextField FSign;
UWORD16 CachedSignSize;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelOneValueDbRT.hpp"
struct LabelOneValueDbRT { struct LabelOneValue __b_LabelOneValue;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelOneValueSignDefault.hpp"
struct LabelOneValueSignDefault { struct LabelOneValueSign __b_LabelOneValueSign;
#line 41
UWORD16 DefaultValue;

UBYTE **NameDefaultValue;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelOneValueSignFlag.hpp"
struct LabelOneValueSignFlag { struct LabelOneValueSignDefault __b_LabelOneValueSignDefault;
#line 41
UWORD16 IdFlag;

e_TYPE_OF_DB_TARGET DbIdFlag;
e_BOOL FlagForDefault;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelOneValueDefault.hpp"
struct LabelOneValueDefault { struct LabelOneValue __b_LabelOneValue;
#line 41
UWORD16 DefaultValue;

UBYTE **NameDefaultValue;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelOneValueThreeDefault.hpp"
struct LabelOneValueThreeDefault { struct LabelOneValueDefault __b_LabelOneValueDefault;
#line 41
UWORD16 DefaultValue;

UBYTE **NameDefaultValue;

UWORD16 DefaultValue1;

UBYTE **NameDefaultValue1;

UWORD16 DefaultValue2;

UBYTE **NameDefaultValue2;

UWORD16 DisplayValue; UWORD16 DisplayValue1; UWORD16 DisplayValue2;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelOneValueFourDefault.hpp"
struct LabelOneValueFourDefault { struct LabelOneValueDefault __b_LabelOneValueDefault;
#line 41
UWORD16 DefaultValue;

UBYTE **NameDefaultValue;

UWORD16 DefaultValue1;

UBYTE **NameDefaultValue1;

UWORD16 DefaultValue2;

UBYTE **NameDefaultValue2;

UWORD16 DefaultValue3;

UBYTE **NameDefaultValue3;

UWORD16 DisplayValue;

UWORD16 DisplayValue1;

UWORD16 DisplayValue2;

UWORD16 DisplayValue3;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelOneValueFlag.hpp"
struct LabelOneValueFlag { struct LabelOneValueDefault __b_LabelOneValueDefault;
#line 41
UWORD16 IdFlag;

e_TYPE_OF_DB_TARGET DbIdFlag;

e_BOOL FlagForDefault;};
#line 35 "..\\..\\SRC\\HMI\\HMI_LabelOneValueTrig.hpp"
struct LabelOneValueTrig { struct LabelOneValue __b_LabelOneValue;
#line 42
struct SymbolField FTrig;

e_BOOL Trigger;};
#line 36 "..\\..\\SRC\\HMI\\HMI_LabelProgressBar.hpp"
struct LabelProgressBar { struct EditableObject __b_EditableObject;
#line 43
struct TextField FSep;

UBYTE **NameUnit;

UWORD16 PixelValue;
UWORD16 RealValue;
UWORD16 ColValue;
UWORD16 LowLimit;
UWORD16 LimitDelta;

e_BOOL BipRequest;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelTwoValue.hpp"
struct LabelTwoValue { struct LabelOneValue __b_LabelOneValue;
#line 43
struct TextField FUnit2;

struct ValueTextField FValue2;

UBYTE **NameUnit2;

UWORD16 ValueState;
UWORD16 IdParam2;
UWORD16 Divider2;

e_TYPE_OF_DB_TARGET DbTarget2;

e_BOOL ColAdjust;

e_BOOL MaxDisplayValue2Configured;
UWORD16 MaxDisplayValue2;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelTwoValueLock.hpp"
struct LabelTwoValueLock { struct LabelTwoValue __b_LabelTwoValue;};
#line 42 "..\\..\\SRC\\HMI\\HMI_LabelTabOneValue.hpp"
struct LabelTabOneValue { struct EditableObject __b_EditableObject;
#line 49
struct TextField TFNoValue;

struct ValueTextField FValue1;
struct ValueTextField FValueRefresh;

UWORD16 ValueTemp;
UWORD16 IdParamMonitor;
UWORD16 Divider;

e_BOOL Value1IsString;
e_BOOL StopMonitoring;
e_BOOL Value1IsMaxi;

e_TYPE_OF_DB_TARGET DbTargetMonitor;

e_BOOL MaxDisplayValueConfigured;
UWORD16 MaxDisplayValue;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelTabOneValueDefault.hpp"
struct LabelTabOneValueDefault { struct LabelTabOneValue __b_LabelTabOneValue;
#line 41
UWORD16 DefaultValue1;

UBYTE **NameDefaultValue1;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelTabOneValueFlag.hpp"
struct LabelTabOneValueFlag { struct LabelTabOneValueDefault __b_LabelTabOneValueDefault;
#line 41
UWORD16 IdFlag1;

e_TYPE_OF_DB_TARGET DbIdFlag1;
e_BOOL FlagForDefault1;};
#line 36 "..\\..\\SRC\\HMI\\HMI_LabelTabTwoValue.hpp"
struct LabelTabTwoValue { struct LabelTabOneValue __b_LabelTabOneValue;
#line 43
struct ValueTextField FValue2;

UBYTE **NameUnit;

UWORD16 ValueState;
UWORD16 IdParam2;

e_BOOL Value2IsString;

e_TYPE_OF_DB_TARGET DbTarget2;};
#line 35 "..\\..\\SRC\\HMI\\HMI_LabelTabTwoValueTwoLabels.hpp"
struct LabelTabTwoValueTwoLabels { struct LabelTabTwoValue __b_LabelTabTwoValue;
#line 42
struct Label FLabel2;

UWORD16 ColOffset;
UWORD16 LineOffset;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelTabTwoValueDefault.hpp"
struct LabelTabTwoValueDefault { struct LabelTabTwoValue __b_LabelTabTwoValue;
#line 41
UWORD16 DefaultValue1;
UWORD16 DefaultValue2;

UBYTE **NameDefaultValue1;
UBYTE **NameDefaultValue2;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelTabTwoValueFlag.hpp"
struct LabelTabTwoValueFlag { struct LabelTabTwoValueDefault __b_LabelTabTwoValueDefault;
#line 41
UWORD16 IdFlag1;

e_TYPE_OF_DB_TARGET DbIdFlag1;

e_BOOL FlagForDefault1;

UWORD16 IdFlag2;

e_TYPE_OF_DB_TARGET DbIdFlag2;

e_BOOL FlagForDefault2;};
#line 35 "..\\..\\SRC\\HMI\\HMI_LabelValueString.hpp"
struct LabelValueString { struct EditableObject __b_EditableObject;
#line 41
struct TextField FValue1;

struct TextField FSep;

UWORD16 IntValue1;

e_BOOL ColAdjust;

e_BOOL StopMonitoring;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelStringTwoItems.hpp"
struct LabelStringTwoItems { struct LabelValueString __b_LabelValueString;
#line 40
UBYTE **Item1Name;
UBYTE **Item2Name;};
#line 35 "..\\..\\SRC\\HMI\\HMI_LabelStringNItems.hpp"
struct LabelStringNItems { struct LabelValueString __b_LabelValueString;
#line 41
UBYTE **ItemNames[10];

UWORD16 Size;

UWORD16 CurrentRank;};
#line 33 "..\\..\\SRC\\HMI\\HMI_LabelLanguage.hpp"
struct LabelLanguage { struct LabelValueString __b_LabelValueString;
#line 39
UBYTE **ValueName;};
#line 36 "..\\..\\SRC\\HMI\\HMI_LabelMode.hpp"
struct LabelMode { struct Label __b_Label;
#line 42
struct TextField FNominalMode;
struct TextField FModifMode;
struct TextField FStateModifMode;
struct TextField FActifMode;
struct TextField FStateActifMode;
struct TextField FSep;

UBYTE **NameMode;
UBYTE **NameMode2;
UBYTE **NameMode3;
UBYTE **ActifName;
UBYTE **NoActifName;

e_MODE_TYPES ActifMode;
e_MODE_TYPES ModifMode;

e_BOOL NominalMode;
e_BOOL NameMode2Display;
e_BOOL InModification;};
#line 36 "..\\..\\SRC\\HMI\\HMI_LabelSymbol.hpp"
struct LabelSymbol { struct EditableObject __b_EditableObject;
#line 43
struct SymbolField FSymbol;

struct TextField FTextUnderSymbol;

e_BOOL UsedTextUnderSymbol;

struct TextField FSep;};
#line 35 "..\\..\\SRC\\HMI\\HMI_Rampe.hpp"
struct Rampe { struct LabelSymbol __b_LabelSymbol;};
#line 34 "..\\..\\SRC\\HMI\\HMI_RiseTime.hpp"
struct RiseTime { struct LabelSymbol __b_LabelSymbol;};
#line 34 "..\\..\\SRC\\HMI\\HMI_AutoCalibValue.hpp"
struct AutoCalibValue { struct LabelOneValue __b_LabelOneValue;
#line 41
e_TYPE_OF_DB_TARGET BdCalibParam;


UWORD16 IdCalibParam;


UWORD16 NbSegment;


UWORD16 CurrentSegment;

const UWORD16 *SegmentList;
const e_BOOL *FloatList;};
#line 35 "..\\..\\SRC\\HMI\\HMI_ManualCalibValue.hpp"
struct ManualCalibValue { struct AutoCalibValue __b_AutoCalibValue;
#line 44
UWORD16 IdBlow;
UWORD16 IdMesBlow;

e_TYPE_OF_DB_TARGET BdBlow;
e_TYPE_OF_DB_TARGET BdMesBlow;

e_BOOL FirstModifOnCalibPoint; e_BOOL firstRequest;};
#line 35 "..\\..\\SRC\\HMI\\HMI_ManualCalibTwoValue.hpp"
struct ManualCalibTwoValue { struct ManualCalibValue __b_ManualCalibValue;
#line 44
struct LabelOneValue Value2;};
#line 37 "..\\..\\SRC\\HMI\\HMI_VDate.hpp"
typedef enum e_VDATE_FORMAT e_VDATE_FORMAT;
#line 43
struct VDate { struct EditableObject __b_EditableObject;
#line 51
struct TextField FSep;
struct TextField FMonth;

struct ValueField FDay;
struct ValueField FYears;

UBYTE **NameMonth;

UWORD16 Month;
UWORD16 ValueState;

UWORD16 IdParam2;
UWORD16 IdParam3;
UWORD16 IdParamReg1;
UWORD16 IdParamReg2;
UWORD16 IdParamReg3;

UWORD16 ColBackup;

e_TYPE_OF_DB_TARGET IdDbParamReg;

e_VDATE_FORMAT VDateFormat;

e_BOOL StopMonitoring;};
#line 37 "..\\..\\SRC\\HMI\\HMI_VTime.hpp"
typedef enum e_VTIME_FORMAT e_VTIME_FORMAT;
#line 47
typedef enum __Q2_5VTime8e_PERIOD __Q2_5VTime8e_PERIOD;
#line 42
struct VTime { struct EditableObject __b_EditableObject;
#line 50
e_BOOL SecVisible;

__Q2_5VTime8e_PERIOD Suffixe;

e_BOOL ForcedSuffixUpdate;


struct TextField FSep;

struct TextField FSepHours;

struct TextField FSepMin;

struct TextField FSuffixe;


struct ValueField FHours;

struct ValueField FMin;

struct ValueField FSec;


UWORD16 ValueState;


UWORD16 IdParam2;

UWORD16 IdParam3;

UWORD16 IdParamReg1;

UWORD16 IdParamReg2;

UWORD16 IdParamReg3;

e_VTIME_FORMAT VTimeFormat;

e_BOOL StopMonitoring;};
#line 40 "..\\..\\SRC\\HMI\\HMI_BlinkTable.hpp"
struct BlinkTable {
#line 46
struct DisplayObject *Table[5];

e_BOOL BlinkState;};
#line 36 "..\\..\\SRC\\HMI\\HMI_RefreshTable.hpp"
struct RefreshTable {
#line 43
struct DisplayObject **TableRefresh[2];

UWORD16 IndexEndAlway0;
UWORD16 IndexEndInsp0;
UWORD16 IndexEndExp0;
UWORD16 IndexEndXAlway0;
UWORD16 IndexEndAlway1;
UWORD16 IndexEndInsp1;
UWORD16 IndexEndExp1;
UWORD16 IndexEndXAlway1;};
#line 41 "..\\..\\SRC\\HMI\\HMI_ParameterSpy.hpp"
struct ParameterSpy {
#line 50
UWORD16 TableId[31];


e_TYPE_OF_DB_TARGET TableBd[31];


UWORD16 TableValue[31];


EventId TableEvent[31];


e_BOOL TableEventOk[31];};
#line 39 "..\\..\\SRC\\HMI\\HMI_VTimer.hpp"
struct VTimer {char __dummy;};
#line 46 "..\\..\\SRC\\HMI\\HMI_AlarmTable.hpp"
struct AlarmTable {
#line 52
AlarmEvent TableAlarm[30];


UWORD16 CurrentIndex;


UWORD16 NbAlarm;


UWORD16 MaxAction;

AlarmEvent LastAlarm;};
#line 37 "..\\..\\SRC\\HMI\\HMI_AlarmManager.hpp"
typedef enum eAMANAGER_DOUBLE eAMANAGER_DOUBLE;




struct AlarmManager {
#line 50
UWORD16 RefreshActif;
eAMANAGER_DOUBLE DoubleAlarm;};
#line 36 "..\\..\\SRC\\HMI\\HMI_LoupeAlarm.hpp"
struct LoupeAlarm { struct Loupe __b_Loupe;};
#line 45 "..\\..\\SRC\\HMI\\HMI_MonitoringObject.hpp"
struct MonitoringObject { struct DisplayObject __b_DisplayObject;
#line 52
UBYTE **Name;

UBYTE **Unit;


UWORD16 DivisionFactorOfValue;

e_BOOL Trigger;

e_BOOL ReverseVideo;

e_BOOL CenteredDisplay;

e_BOOL IconIsPrefered;

e_BOOL ValueReady;

e_BOOL StopMonitoring;

e_BOOL TextHeaderOn;

e_BOOL FloatDisplayOn;

e_BOOL MaxDisplayValueConfigured;

UWORD16 MaxDisplayValue;

e_BOOL SignedValue;
#line 90
e_SYMBOL Icon; e_SYMBOL IconInverseVideo;

struct SymbolField FIcon;

struct SymbolField FTrig;

struct TextField TFTitle;

struct TextField TFUnit;

struct ValueTextField VTFValue;};
#line 234 "..\\..\\SRC\\HMI\\HMI_Config.hpp"
typedef struct tInfo tInfo;
#line 41 "..\\..\\SRC\\HMI\\HMI_VFrame.hpp"
struct VFrame { struct DisplayObject __b_DisplayObject;
#line 48
struct LoupeAlarm LoupeA;

struct Loupe *LoupeObject; struct Loupe LoupeV;

e_BOOL MonitorOn;
e_BOOL MessageOn;
e_BOOL ImpactDisplay;

tInfo *InfoTablePtr;
UWORD16 MaxObjects;
UWORD16 SpaceHeight;
UWORD16 SpaceFirstLine;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelVersion.hpp"
struct LabelVersion { struct LabelValueString __b_LabelValueString;




e_TYPE_OF_DB_TARGET DbTarget;};
#line 41 "..\\..\\SRC\\HMI\\HMI_FrameWelcome.hpp"
struct FrameWelcome { struct VFrame __b_VFrame;
#line 49
struct Label LWelcome;
struct Label LCopyRight;

struct VDate Date1;

struct VTime Time1;

struct SymbolField SFLogo; struct SymbolField SFLogo2; struct SymbolField SFLogo3;

struct SymbolField SFCompanyName;

struct LabelOneValue LOVMachine;

struct LabelTwoValue LTVPatient;

struct LabelVersion LVSVersion; struct LabelVersion LVSSupplyVersionSoft;

struct DisplayObject *RefreshTable[6];};
#line 35 "..\\..\\SRC\\HMI\\HMI_FrameConfiguration.hpp"
struct FrameConfiguration { struct VFrame __b_VFrame;
#line 43
struct Label LConfiguration;};
#line 35 "..\\..\\SRC\\HMI\\HMI_FramePreference.hpp"
struct FramePreference { struct VFrame __b_VFrame;
#line 43
struct Label LPreferences;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelSerial.hpp"
struct LabelSerial { struct LabelValueString __b_LabelValueString;};
#line 42 "..\\..\\SRC\\HMI\\HMI_FrameMaintenance.hpp"
struct FrameMaintenance { struct VFrame __b_VFrame;
#line 54
struct Label LMaintenance;

struct LabelSerial LVSSerieNumber;

struct TextField TFSup;

struct LabelVersion LVSVersionSoft;
struct LabelVersion LVSSupplyVersionSoft;

struct LabelOneValue LOVSpeed;

struct DisplayObject *RefreshTable[5];};
#line 37 "..\\..\\SRC\\HMI\\HMI_FrameHistoAno.hpp"
typedef enum e_ANO_DATE_FORMAT e_ANO_DATE_FORMAT;




typedef enum e_ANO_TIME_FORMAT e_ANO_TIME_FORMAT;

struct FrameHistoAno { struct VFrame __b_VFrame;
#line 52
struct Label LHistoAno;

e_ANO_DATE_FORMAT AlarmDateFormat;
e_ANO_TIME_FORMAT AlarmTimeFormat;};
#line 36 "..\\..\\SRC\\HMI\\HMI_FrameVoltControl.hpp"
struct FrameVoltControl { struct VFrame __b_VFrame;
#line 44
struct Label LVoltCtrl;

struct LabelOneValue LOVAlim24V;
struct LabelOneValue LOVWatchDog;
struct LabelOneValue LOVAbsPress;
struct LabelOneValue LOVIntTemp;
struct LabelOneValue LOVTemp;
struct LabelOneValue LOVTempBat;
struct LabelOneValue LOVBlowTemp;
struct SymbolField Bat;

struct DisplayObject *RefreshTable[11];};
#line 35 "..\\..\\SRC\\HMI\\HMI_LabelTwoValueTrig.hpp"
struct LabelTwoValueTrig { struct LabelTwoValueLock __b_LabelTwoValueLock;
#line 42
struct SymbolField FTrig;

e_BOOL Trigger;
e_BOOL Float;};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelAlarme.hpp"
struct LabelAlarme { struct Label __b_Label;
#line 47
UWORD16 AlarmId;};
#line 34 "..\\..\\SRC\\HMI\\HMI_BarGraph.hpp"
struct BarGraph { struct DisplayObject __b_DisplayObject;
#line 42
UWORD16 Position;


UWORD16 Value;


UWORD16 Pep;


UWORD16 Pmax;


UWORD16 firstShow;


UWORD16 IdPep;


UWORD16 IdPmax;


UWORD16 Divider;


UBYTE **NameUnit;

struct TextField TFUnit;};
#line 46 "..\\..\\SRC\\HMI\\HMI_MessageList.hpp"
struct __Q2_11MessageList8TMessage {
UWORD16 Id;
UBYTE Text[3][33];
e_BOOL Used;};

typedef struct __Q2_11MessageList8TMessage __Q2_11MessageList8TMessage;
#line 41
struct MessageList {
#line 54
__Q2_11MessageList8TMessage Messages[15];

UBYTE InListTable[11];};
#line 37 "..\\..\\SRC\\HMI\\HMI_LabelAlarmeTwoLine.hpp"
struct LabelAlarmeTwoLine { struct LabelAlarme __b_LabelAlarme;
#line 44
struct TextField FLine2;

UBYTE TextLine[3][33];

UWORD16 WBox;

struct MessageList AlarmList;};
#line 38 "..\\..\\SRC\\HMI\\HMI_BatteryObject.hpp"
struct BatteryObject { struct DisplayObject __b_DisplayObject;
#line 44
struct LabelOneValue LOVPercent;

struct LabelTwoValue LTVJauge;

struct SymbolField SFEqual;

e_BOOL JaugeAvailable;
e_BOOL BusFailure;
e_BOOL UnknownBattery;
e_BOOL CheckSupply;
e_BOOL CheckBattery;
e_BOOL ForcedDisplay;

UWORD16 CurrentDisplay;};
#line 53 "..\\..\\SRC\\HMI\\HMI_FrameVentilation.hpp"
struct FrameVentilation { struct VFrame __b_VFrame;
#line 59
struct BarGraph BarVentil;
struct SymbolField SFValve;

struct LabelOneValue LOVPip;
struct LabelOneValue LOVVti;
struct LabelOneValue LOVVte;
struct LabelOneValue LOVVm;
struct LabelOneValue LOVR;
struct LabelOneValue LOVFIO2;
struct LabelOneValue LOVSPO2;
struct LabelOneValue LOVFuite;
struct LabelTwoValueTrig LTVIE;
struct LabelOneValueTrig LOVIT;

struct BatteryObject BOBat;

e_MODE_TYPES Mode;

e_BOOL BatVisible;
e_BOOL ValveVisible;
e_BOOL IsInhibApneaAlarm;
e_BOOL IsInhibAlarm;
e_BOOL IsCancelAlarm;
e_BOOL IESelected;
e_BOOL ValveDetected;
e_BOOL FiO2Enabled;
e_BOOL SpO2Enabled;
e_BOOL ExhalFlowUsed;

struct MessageDialog Message;

struct LabelAlarmeTwoLine LAlarme;

struct GraphicBox MonitorBox; struct GraphicBox AlarmBox;

struct DisplayObject *RefreshTable[16];

struct SymbolField InhibAlarm; struct SymbolField CancelAlarm; struct SymbolField InhibApneaAlarm;

struct Label PressConvention;};
#line 51 "..\\..\\SRC\\HMI\\HMI_GraphicTable.hpp"
struct tGraphTableConfig {
e_BOOL CellConfig[10][6];
e_BOOL ColConfig[6];
e_BOOL LineConfig[10];};

typedef struct tGraphTableConfig tGraphTableConfig;


struct GraphicTable { struct DisplayObject __b_DisplayObject;
#line 68
UWORD16 Width;

UWORD16 Height;


UWORD16 LineNb;

UWORD16 FirstLineHeight;

UWORD16 OtherLineHeight;

UWORD32 BoldLines;


UWORD16 ColNb;

UWORD16 FirstColWidth;

UWORD16 OtherColWidth;

UBYTE **ColTitle[6];



tGraphTableConfig GraphTableConfig;};
#line 58 "..\\..\\SRC\\HMI\\HMI_FrameAlarme.hpp"
typedef enum e_ALARM_DATE_FORMAT e_ALARM_DATE_FORMAT;




typedef enum e_ALARM_TIME_FORMAT e_ALARM_TIME_FORMAT;


struct FrameAlarme { struct VFrame __b_VFrame;
#line 75
struct BatteryObject BOBat;
struct SymbolField SFValve;

struct GraphicBox MonitorBox;
struct GraphicBox AlarmBox;

struct LabelAlarmeTwoLine LAlarme;

struct TextField LastAlarmDate;

struct GraphicTable GTable;

struct LabelOneValue LOVPip;

struct LabelOneValue LOVMap;

struct LabelOneValue LOVVti;

struct LabelOneValue LOVPeep;

struct LabelOneValue LOVR;

struct LabelOneValue LOVM;

struct LabelOneValueTrig LOVIT;

struct LabelTwoValueTrig LTVIE;

e_MODE_TYPES Mode;

e_BOOL BatVisible;
e_BOOL ValveVisible;
e_BOOL IsInhibApneaAlarm;
e_BOOL IsInhibAlarm;
e_BOOL IsCancelAlarm;
e_BOOL IESelected;
e_BOOL ValveDetected;
e_BOOL FiO2Enabled;
e_BOOL SpO2Enabled;

e_BOOL MutexAlarm;

struct MessageDialog Message;

struct DisplayObject *RefreshTable[13];

struct SymbolField InhibAlarm; struct SymbolField CancelAlarm; struct SymbolField InhibApneaAlarm;

e_ALARM_DATE_FORMAT AlarmDateFormat;

e_ALARM_TIME_FORMAT AlarmTimeFormat;};
#line 37 "..\\..\\SRC\\HMI\\HMI_FrameHistoAlarme.hpp"
struct FrameHistoAlarme { struct VFrame __b_VFrame;
#line 44
struct Label LHistoAlarm;

e_ALARM_DATE_FORMAT AlarmDateFormat;
e_ALARM_TIME_FORMAT AlarmTimeFormat;};
#line 36 "..\\..\\SRC\\HMI\\HMI_MonitoringObjectTwoValue.hpp"
struct MonitoringObjectTwoValue { struct MonitoringObject __b_MonitoringObject;
#line 43
struct ValueTextField VTFValue2;

struct TextField TFSep;

UWORD16 IdParam2;

UWORD16 Value2;

e_TYPE_OF_DB_TARGET DbTarget2;

e_BOOL FloatDisplayOn2;

e_BOOL MaxDisplayValue2Configured;

UWORD16 MaxDisplayValue2;};
#line 35 "..\\..\\SRC\\HMI\\HMI_GraphTitle.hpp"
struct GraphTitle { struct DisplayObject __b_DisplayObject;
#line 42
struct TextField TFMode;

UBYTE **NameMode1;
UBYTE **NameMode2;

e_BOOL NameMode2Display;};
#line 39 "..\\..\\SRC\\HMI\\HMI_DataBaseLink.hpp"
struct DataBaseLink {
#line 46
UWORD16 IdParam;

e_TYPE_OF_DB_TARGET DbTarget;};
#line 36 "..\\..\\SRC\\HMI\\HMI_Scale.hpp"
typedef enum TOrientation TOrientation;

typedef enum TSide TSide;



struct Scale { struct FieldObject __b_FieldObject;
#line 48
TOrientation Orientation;

SWORD32 Width; SWORD32 Heigth; SWORD32 MajorTickSpacing; SWORD32 ZeroPos; SWORD32 FirstX;

SWORD32 Min; SWORD32 Max;

SWORD32 Pas;

e_BOOL TickVisible;
e_BOOL DoubleTick;
e_BOOL NumberVisible;
e_BOOL AutoScale;
e_BOOL Symetric;
e_BOOL FirstRefresh;

TSide NumberSide;

struct DataBaseLink DBMax;};
#line 39 "..\\..\\SRC\\HMI\\HMI_VPoint.hpp"
struct VPoint {
#line 46
SWORD16 X;

SWORD16 Y;};
#line 39 "..\\..\\SRC\\HMI\\HMI_Pen.hpp"
struct Pen {
#line 50
UWORD16 LocalCounter;


e_BOOL Dotted;


e_BOOL DottedState;};
#line 38 "..\\..\\SRC\\HMI\\HMI_CurveData.hpp"
struct CurveData {
#line 44
struct VPoint CurrentPoint;

struct VPoint PreviousPoint;

struct Scale *Ex;

struct Scale *Ey;

struct Pen LocalPen;

struct DataBaseLink DBx;

struct DataBaseLink DBy;


SWORD16 MaxX;


SWORD16 MaxY;


SWORD16 MinX;


SWORD16 MinY;

e_BOOL JustReset;
e_BOOL OutOfLimitDis;
e_BOOL CurveStart;};
#line 49 "..\\..\\SRC\\HMI\\HMI_Graph.hpp"
struct Graph { struct GraphicBox __b_GraphicBox;




struct Scale ScaleX; struct Scale ScaleY;



struct CurveData *CurveTable[1];

struct GraphControl *GControl;

struct TextField LabelX; struct TextField LabelY; struct TextField LabelOOL;

e_BOOL Freezed; e_BOOL OutOfLimit;

UWORD16 CurveNumber;

UBYTE **TUnit1;
UBYTE **TUnit2;
UBYTE **TOutOfLimit;};
#line 35 "..\\..\\SRC\\HMI\\HMI_GraphControl.hpp"
struct GraphControl {
#line 41
struct Graph *GraphTarget; struct __T51439500 *__vptr;};
#line 34 "..\\..\\SRC\\HMI\\HMI_PerformanceGraphControl.hpp"
struct PerformanceGraphControl { struct GraphControl __b_GraphControl;
#line 40
UWORD16 RefreshTime;

UWORD16 CurrentTime;};
#line 35 "..\\..\\SRC\\HMI\\HMI_WobGraphControl.hpp"
struct WobGraphControl { struct GraphControl __b_GraphControl;
#line 42
e_VentilState VentilState;};
#line 65 "..\\..\\SRC\\HMI\\HMI_FrameGraph.hpp"
struct FrameGraph { struct VFrame __b_VFrame;
#line 73
struct BatteryObject BOBat;
struct SymbolField SFValve;

struct SymbolField SFPause;

struct Label LGraph;

struct GraphTitle GTMode;

struct Graph GSmallFlow;
struct Graph GSmallPressure;
struct Graph GSmallFlowV;
struct Graph GSmallPressureV;


struct PerformanceGraphControl PGCSmallFlow;
struct PerformanceGraphControl PGCSmallPressure;

struct CurveData CDFlow;
struct CurveData CDPressure;
struct CurveData CDFlowV;
struct CurveData CDPressureV;

struct WobGraphControl WGCSmallFlowV;
struct WobGraphControl WGCSmallPressureV;

struct MonitoringObject MoSpO2;
struct MonitoringObject MoFiO2;
struct MonitoringObject MoRate;
struct MonitoringObjectTwoValue MoTVIE;
struct MonitoringObject MoIT;
struct MonitoringObject MoVmi;
struct MonitoringObject MoFuite;
struct MonitoringObject MoVti;
struct MonitoringObject MoVte;
struct MonitoringObject MoPe;
struct MonitoringObject MoPip;
struct MonitoringObject MoPulse;
struct MonitoringObject MoTi;
struct MonitoringObject MoTe;

e_MODE_TYPES Mode;
e_MODE_TYPES PreviousMode;

e_BOOL ModeChange;

e_BOOL TriggerOn;
e_BOOL Freezed;
e_BOOL IESelected;
e_BOOL ValveDetected;
e_BOOL FiO2Enabled;
e_BOOL SpO2Enabled;
e_BOOL ExhalFlowUsed;

e_BOOL BlocExpiDetected;

e_BOOL FirstInitOk;

struct DisplayObject *RefreshTable[23];

struct SymbolField InhibAlarm; struct SymbolField CancelAlarm; struct SymbolField InhibApneaAlarm;};
#line 38 "..\\..\\SRC\\HMI\\HMI_FrameGraphConfig.hpp"
struct FrameGraphConfig { struct VFrame __b_VFrame;
#line 46
struct Label LGraphConfig;};
#line 40 "..\\..\\SRC\\HMI\\HMI_FrameBatteryMenu.hpp"
struct FrameBatteryMenu { struct VFrame __b_VFrame;
#line 48
struct Label LInternalBatteryMenu;

struct LabelOneValue LOVBatteryVoltage;
struct LabelOneValue LOVBatteryTemperature;
struct LabelOneValue LOVCyclesDone;
struct LabelOneValue LOVTheoreticalCapacity;
struct LabelOneValue LOVAgeing;
struct LabelOneValue LOVUnknownBat;
struct Label LNoBat;

struct LabelStringNItems LVSSupplier;

struct VDate VDDate;
struct VTime VTTime;

e_BOOL ForcedStoppedMonitoring;

struct DisplayObject *RefreshTable[6];};
#line 34 "..\\..\\SRC\\HMI\\HMI_LabelTwoValueCentered.hpp"
struct LabelTwoValueCentered { struct LabelTwoValue __b_LabelTwoValue;};
#line 45 "..\\..\\SRC\\HMI\\HMI_FrameUSB.hpp"
struct FrameUSB { struct VFrame __b_VFrame;
#line 53
struct Label LUsb;

struct LabelSerial LVSSerieNumber;

struct MessageDialog Message;

UBYTE MessageString[60];


struct LabelTwoValueCentered LOVRemainingTime;

struct Label LWait;

struct DisplayObject *RefreshTable[5];
#line 72
UBYTE MessageStorage[100];};
#line 36 "..\\..\\SRC\\HMI\\HMI_TendanceTable.hpp"
struct TendanceTable { struct DisplayObject __b_DisplayObject;
#line 42
UWORD16 FirstDisplayLine;
UWORD16 FirstDisplayCol;

UWORD16 NbOfLines;
UWORD16 NbOfCols;

UWORD16 Height;
UWORD16 Width;
UWORD16 LineHeight;

UWORD16 OddColWidth;
UWORD16 EvenColWidth;};
#line 38 "..\\..\\SRC\\HMI\\HMI_FrameTendance.hpp"
struct FrameTendance { struct VFrame __b_VFrame;
#line 46
struct Label LTendance; struct Label TableTitle;

struct TendanceTable GTable;




struct LabelOneValue LTVVt; struct LabelOneValue LTVVte; struct LabelOneValue LTVLeak; struct LabelOneValue LTVVm; struct LabelOneValue LTVFr;
struct LabelOneValue LTVPi; struct LabelOneValue LTVSpo2; struct LabelOneValue LTVFc;

struct LabelOneValue LOVSpont; struct LabelOneValue LOVContr; struct LabelOneValue LTVIA; struct LabelOneValue LTVTApnea;

struct LabelTwoValue LOVVentMoy;

struct VDate Date;

struct LabelOneValue LOVMachine;

struct LabelTwoValue LTVPatient;};
#line 42 "..\\..\\SRC\\HMI\\HMI_MessageDelayed.hpp"
struct __Q2_14MessageDelayed11FifoMessage {
UBYTE *Body;
UWORD32 Delay;};
typedef struct __Q2_14MessageDelayed11FifoMessage __Q2_14MessageDelayed11FifoMessage;
#line 38
struct MessageDelayed {
#line 49
e_BOOL Configured;

UWORD32 TimerLoad;

UWORD16 TimerId;

struct VTimer *TimerPtr;

struct MessageDialog *MessDiagPtr;

__Q2_14MessageDelayed11FifoMessage MessageFifo[6];

UWORD16 ReadIndex;

UWORD16 WriteIndex;};
#line 109 "..\\..\\SRC\\HMI\\HMI_Setup1.hpp"
struct HMI_Setup1 {
#line 135
struct FrameConfiguration FConfiguration1;
struct LabelStringTwoItems LVSModeCycl;
struct LabelStringTwoItems LVSConvTrigE;
struct LabelStringTwoItems LVSRelativePressure;
struct Label LVSBack;};
#line 137 "..\\..\\SRC\\HMI\\HMI_Controller.hpp"
typedef enum __Q2_10Controller11LegendState __Q2_10Controller11LegendState;




typedef enum __Q2_10Controller11eSTEP_LEVEL __Q2_10Controller11eSTEP_LEVEL;
#line 581
typedef struct __T51439500 __Q2_10Controller11PController;
#line 118
struct Controller {
#line 146
struct MenuControlNode *CurrentNode;

struct MenuControlNode *UsbProcessingNode;
e_BOOL UsbCmdInProgress;

struct Loupe *CurrentLoupe;

struct MenuControlNode *ArrayNode;


UWORD16 CurrentFrame;

UWORD16 CurrentVirtualFrame;

__Q2_10Controller11LegendState LState;

e_BOOL LockOn;
e_BOOL UsbLock;
e_BOOL UsbKeyDetected;
e_BOOL ModeChangeOn;
e_BOOL ModifNodeOn;
e_BOOL PSupportNull;
e_BOOL IESelected;
e_BOOL TrigEPosSelected;
e_BOOL ValveDetected;
e_BOOL ImpactDisplay;
e_BOOL OnWait;
e_BOOL DifferMonitoringStart;
e_BOOL MonitoringMode;
e_BOOL ExhalFlowUsed;
e_BOOL VentButtonOn;
e_BOOL BuzzerVoltRefreshReq;
e_BOOL HighPressAlarmToBeRemoved;
e_BOOL LeakTestRunning;

UWORD16 LeakTestTimerCount;

struct MessageDialog TopMessage;

struct BlinkTable BTable;

struct RefreshTable RTable;

struct AlarmTable ATable;

struct ParameterSpy PSpy;

struct AlarmManager AManager;
e_BOOL IsDoubleMessageTimerStarted;

struct VTimer Timer;

struct DisplayObject *RefreshTableAlarm[12];
struct DisplayObject *RefreshTableMaintenance[12];
struct DisplayObject *RefreshTableConfig[6];
struct DisplayObject *RefreshTableVolt[5];

e_MODE_TYPES CurrentMode;

e_MODE_TYPES ConsultMode;

bool EraseFlag;

UWORD16 LastBrightness;
UWORD16 LastSoundLevel;
UWORD16 MemoSoundLevel;


struct DisplayObject GhostObject;


struct FrameWelcome FWelcome;


struct FrameUSB FUsb;
struct MessageDelayed UsbDelayed;
struct Label LStopUsb;
#line 228
struct LabelStringTwoItems LVSEraseKey;
struct LabelStringTwoItems LVSContRecord;
#line 235
struct LabelOneValueFlag LOVFTransfMonit;


struct LabelOneValueFlag LOVFTransfTrend;

UWORD16 PreviousErrorCode;

struct FrameTendance FTendance;
struct Label LRTendance;


struct FrameConfiguration FConfiguration;
struct Label LMaintenance; struct Label LRVentil;
struct Label LNextPage;
struct VTime VTConf;
struct VDate VDConf;
struct LabelLanguage LVSLanguage;
struct LabelStringTwoItems LVSVoluntaryStopAlarm;

struct LabelStringNItems LVSPressureUnit;
struct LabelStringTwoItems LVSAlarmTone;
struct LabelTwoValue LOVPatientHrs;
struct LabelOneValue LOVMachineHrs;
struct LabelStringTwoItems LVSSResetPatientHrs;
struct LabelOneValueFourDefault LOVFDAjustKeyTone;
struct LabelStringTwoItems LVSSRestoreDefaultSettings;


struct FramePreference FPreference;
struct LabelStringTwoItems LVSScreenSave; struct LabelStringTwoItems LVSKeySound; struct LabelStringTwoItems LVSWaveformDisplay;
struct LabelStringTwoItems LVSBaroCorrector; struct LabelStringTwoItems LVSApneaAlarm;
struct LabelStringTwoItems LVSPediatricCircuit;
struct LabelProgressBar LPBSoundLevel; struct LabelProgressBar LPBBrightness;
struct Label LRVentilMenu; struct Label LCurveConfiguration; struct Label LTrendMenu;
struct LabelOneValueFlag LOVFDisconnectionAlarm;


struct FrameCircuitCheck *FCircuitCheck;
struct Label LCircuitLeak;


struct FrameMaintenance FMaintenance;
struct LabelOneValueDbRT LOVPwmBlower;
struct Label LHistoAnom; struct Label LVoltCtrl; struct Label LSensorCal; struct Label LRConfMaint;
struct AutoCalibValue LOVFlowExp; struct AutoCalibValue LOVValvePressure;
struct ManualCalibValue LOVFlowIns; struct ManualCalibValue LOVFlowO2; struct ManualCalibValue LOVPressO2; struct ManualCalibValue LOVFiO2Concent;
struct ManualCalibTwoValue LOVPatientPressure;


struct FrameHistoAno FHistoAno;
struct Label LRMaintAno;


struct FrameVoltControl FVoltControl;
struct Label LRMaintTension;
struct Label LOVBuzzSec;
struct Label LBackupBuzzer;
struct Label LBatteryMenu;
struct Label LRMaintBattery;

struct LabelOneValue LOVBuzzerVoltage;
struct LabelOneValue LOVBuzz;
struct LabelOneValue LOVTempBat;


struct FrameBatteryMenu FBatteryMenu;


struct FrameVentilation FVentilation;
struct LabelStringTwoItems LSTVChgtModeV;
struct LabelStringTwoItems LSTVSoupir;

struct LabelMode LModeVent;

struct LabelOneValue LOVVT;
struct LabelOneValue LOVPi;
struct LabelOneValue LOVPControl;
struct LabelOneValue LOVPSupport;
struct LabelOneValue LOVPi2;
struct LabelOneValue LOVFVaci;
struct LabelOneValue LOVFRMini;
struct LabelOneValue LOVIT;
struct LabelOneValue LOVInspTime;
struct LabelOneValue LOVPiMax;
struct LabelOneValue LOVCptSoupir;



struct LabelOneValue LOVFiO2;


struct LabelOneValueSign LOVSVtSoupir;
struct LabelOneValueSignFlag LOVSTrigE;
struct LabelOneValueFlag LOVTrigE;

struct Label LIE;

struct LabelOneValueThreeDefault LOVTDSupport;

struct LabelOneValueFlag LOVPe;
struct LabelOneValueFlag LOVApnee;
struct LabelOneValueFlag LOVVTCible;
struct LabelOneValueFlag LOVFSecu;
struct LabelStringNItems LOVTrigI;

struct RiseTime LOVPente;


struct Rampe LOVRampe;



struct Label LPreferences;


struct FrameAlarme FAlarme;

struct LabelStringTwoItems LOVChgtModeA;

struct Label LHistoAlarm;

struct LabelMode LModeAlarm;

struct LabelTabOneValueFlag LOVFrCMin;
struct LabelTabOneValueFlag LTOVFuiteLMin;


struct LabelTabTwoValueTwoLabels LOVPiMbar;

struct LabelTabTwoValueFlag LOVVteMl;
struct LabelTabTwoValueFlag LOVVtiMl;
struct LabelTabTwoValueFlag LTTVTiS;
struct LabelTabTwoValueFlag LTTVSpO2;
struct LabelTabTwoValueFlag LTTVFiO2;

struct LabelStringTwoItems LSTICalibQExp;
struct LabelStringTwoItems LSTICalibFiO2;


struct FrameHistoAlarme FHistoAlarme;
struct Label LRAlarmeA;
struct Label LCancelledAlarm;


struct FrameGraph FGraph;


struct FrameGraphConfig FGraphConfig;

struct LabelOneValueDefault LOVPMax;
struct LabelOneValueDefault LOVQMax;
struct LabelOneValueDefault LOVVtMax;
struct LabelOneValueDefault LOVTMax;

struct LabelStringTwoItems LVSVisu;
struct LabelStringTwoItems LVSRepresentation;

struct Label LRGraphPref;

UWORD16 SegmentNumber;
e_BOOL StartCalib;
e_BOOL StartVerif;

e_BOOL LongUpKeyDetected;
e_BOOL LongDownKeyDetected;
__Q2_10Controller11eSTEP_LEVEL StepLevel;

UWORD16 SaveBuzzerVoltParamId;
e_TYPE_OF_DB_TARGET SaveBuzzerVoltDbId;

struct MessageDialog BottomMessage;};
#line 40 "..\\..\\SRC\\HMI\\HMI_MenuControlNode.hpp"
struct MenuControlNode {
#line 49
e_BOOL Visible;
e_BOOL Lock;

struct DisplayObject *Object;

struct EventNode *Param;};
#line 40 "..\\..\\SRC\\HMI\\HMI_EventNode.hpp"
struct EventNode {
#line 47
UWORD16 Id;
UWORD16 LinkedMenuControlNodeId;

UWORD16 IdNodeOnUp;
UWORD16 IdNodeOnDown;
UWORD16 IdNodeOnTimeOut;
UWORD16 IdNodeOnValid;
UWORD16 IdNodeOnLongValid;
UWORD16 IdNodeOnMonitor;
#line 69
__Q2_10Controller11PController OnButtonUp;
__Q2_10Controller11PController OnButtonDown;
__Q2_10Controller11PController OnTimeOut;
__Q2_10Controller11PController OnButtonValid;
__Q2_10Controller11PController OnButtonMonitor;
__Q2_10Controller11PController OnButtonLongValid;};
#line 442 "..\\..\\SRC\\HMI\\HMI_GlobalEventNode.hpp"
extern void InitGloblaEventNode__Fv(void);
#line 65 "..\\..\\SRC\\HMI\\HMI_MenuObject.hpp"
extern void InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(struct MenuObject *const, UWORD16, e_TYPE_OF_DB_TARGET);
#line 89 "..\\..\\SRC\\HMI\\HMI_DisplayObject.hpp"
extern void SetPage__13DisplayObjectFUi(struct DisplayObject *const, UWORD16);




extern void SetParent__13DisplayObjectFP13DisplayObject(struct DisplayObject *const, struct DisplayObject *);
#line 100
extern void RefreshEnable__13DisplayObjectFi(struct DisplayObject *const, e_BOOL);
#line 89 "..\\..\\SRC\\HMI\\HMI_MessageDialog.hpp"
extern void InitGraphicBox__13MessageDialogFUiN31iN25(struct MessageDialog *const, UWORD16, UWORD16, UWORD16, UWORD16, e_BOOL, e_BOOL, e_BOOL);
#line 120
extern void SetLineLine1__13MessageDialogFUi(struct MessageDialog *const, UWORD16);
extern void SetLineLine2__13MessageDialogFUi(struct MessageDialog *const, UWORD16);
extern void SetLineLine3__13MessageDialogFUi(struct MessageDialog *const, UWORD16);
#line 133
extern void SetWhithBox__13MessageDialogFUi(struct MessageDialog *const, UWORD16);
#line 74 "..\\..\\SRC\\HMI\\HMI_Label.hpp"
extern void Init__5LabelF8e_SYMBOLPPUcUiT3(struct Label *const, e_SYMBOL, UBYTE **, UWORD16, UWORD16);
#line 96
extern void SetColLabel__5LabelFUi(struct Label *const, UWORD16);
#line 91 "..\\..\\SRC\\HMI\\HMI_LabelOneValue.hpp"
extern void Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(struct LabelOneValue *const, e_SYMBOL, UBYTE **, UWORD16, UWORD16, UWORD16, UBYTE **);
#line 107
extern void SetMaxDisplayValue__13LabelOneValueFUi(struct LabelOneValue *const, UWORD16);
#line 118
extern void SetColSep__13LabelOneValueFUi(struct LabelOneValue *const, UWORD16);


extern void SetColValue1__13LabelOneValueFUi(struct LabelOneValue *const, UWORD16);


extern void SetColUnit1__13LabelOneValueFUi(struct LabelOneValue *const, UWORD16);
#line 135
extern void SetFloatValue1__13LabelOneValueFi(struct LabelOneValue *const, e_BOOL);


extern void SetNbDigitValue1__13LabelOneValueFUi(struct LabelOneValue *const, UWORD16);


extern void SetDisplayZeroValue1__13LabelOneValueFi(struct LabelOneValue *const, e_BOOL);


extern void SetDivider__13LabelOneValueFUi(struct LabelOneValue *const, UWORD16);
#line 153
extern void SetSignValue__13LabelOneValueFi(struct LabelOneValue *const, e_BOOL);
#line 52 "..\\..\\SRC\\HMI\\HMI_LabelOneValueSign.hpp"
extern void Init__17LabelOneValueSignF8e_SYMBOLPPUcUiN23T2PUc(struct LabelOneValueSign *const, e_SYMBOL, UBYTE **, UWORD16, UWORD16, UWORD16, UBYTE **, UBYTE *);
#line 68
extern void SetColSign__17LabelOneValueSignFUi(struct LabelOneValueSign *const, UWORD16);
#line 63 "..\\..\\SRC\\HMI\\HMI_LabelOneValueSignFlag.hpp"
extern void InitDefaultFlag__21LabelOneValueSignFlagFPPUcUi19e_TYPE_OF_DB_TARGETi(struct LabelOneValueSignFlag *const, UBYTE **, UWORD16, e_TYPE_OF_DB_TARGET, e_BOOL);
#line 61 "..\\..\\SRC\\HMI\\HMI_LabelOneValueDefault.hpp"
extern void InitDefaultValue__20LabelOneValueDefaultFPPUcUi(struct LabelOneValueDefault *const, UBYTE **, UWORD16);
#line 80 "..\\..\\SRC\\HMI\\HMI_LabelOneValueFourDefault.hpp"
extern void InitDefaultValue__24LabelOneValueFourDefaultFPPUcUiT1T2T1T2T1T2(struct LabelOneValueFourDefault *const, UBYTE **, UWORD16, UBYTE **, UWORD16, UBYTE **, UWORD16, UBYTE **, UWORD16);
#line 63 "..\\..\\SRC\\HMI\\HMI_LabelOneValueFlag.hpp"
extern void InitDefaultFlag__17LabelOneValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETi(struct LabelOneValueFlag *const, UBYTE **, UWORD16, e_TYPE_OF_DB_TARGET, e_BOOL);
#line 71 "..\\..\\SRC\\HMI\\HMI_LabelProgressBar.hpp"
extern void Init__16LabelProgressBarF8e_SYMBOLPPUcUiN23(struct LabelProgressBar *const, e_SYMBOL, UBYTE **, UWORD16, UWORD16, UWORD16);
#line 83
extern void SetColSep__16LabelProgressBarFUi(struct LabelProgressBar *const, UWORD16);


extern void SetColValue__16LabelProgressBarFUi(struct LabelProgressBar *const, UWORD16);
#line 94
extern void SetLimits__16LabelProgressBarFUiT1(struct LabelProgressBar *const, UWORD16, UWORD16);
#line 81 "..\\..\\SRC\\HMI\\HMI_LabelTwoValue.hpp"
extern void Init__13LabelTwoValueF8e_SYMBOLPPUcUiN23T2T3T2(struct LabelTwoValue *const, e_SYMBOL, UBYTE **, UWORD16, UWORD16, UWORD16, UBYTE **, UWORD16, UBYTE **);
#line 90
extern void InitDbAccess__13LabelTwoValueFUi19e_TYPE_OF_DB_TARGETT1T2(struct LabelTwoValue *const, UWORD16, e_TYPE_OF_DB_TARGET, UWORD16, e_TYPE_OF_DB_TARGET);
#line 109
extern void SetColValue2__13LabelTwoValueFUi(struct LabelTwoValue *const, UWORD16);


extern void SetColUnit2__13LabelTwoValueFUi(struct LabelTwoValue *const, UWORD16);
#line 121
extern void SetNbDigitValue2__13LabelTwoValueFUi(struct LabelTwoValue *const, UWORD16);


extern void SetDisplayZeroValue2__13LabelTwoValueFi(struct LabelTwoValue *const, e_BOOL);
#line 88 "..\\..\\SRC\\HMI\\HMI_LabelTabOneValue.hpp"
extern void Init__16LabelTabOneValueF8e_SYMBOLPPUcUiN33(struct LabelTabOneValue *const, e_SYMBOL, UBYTE **, UWORD16, UWORD16, UWORD16, UWORD16);
#line 95
extern void InitDbAccess__16LabelTabOneValueFUi19e_TYPE_OF_DB_TARGETT1T2(struct LabelTabOneValue *const, UWORD16, e_TYPE_OF_DB_TARGET, UWORD16, e_TYPE_OF_DB_TARGET);




extern void SetMaxDisplayValue__16LabelTabOneValueFUi(struct LabelTabOneValue *const, UWORD16);
#line 109
extern void SetColValue1__16LabelTabOneValueFUi(struct LabelTabOneValue *const, UWORD16);
#line 115
extern void SetFloatValue1__16LabelTabOneValueFi(struct LabelTabOneValue *const, e_BOOL);
#line 124
extern void SetValue1Maxi__16LabelTabOneValueFi(struct LabelTabOneValue *const, e_BOOL);


extern void SetFloatValueRefresh__16LabelTabOneValueFi(struct LabelTabOneValue *const, e_BOOL);
#line 145
extern void SetDivider__16LabelTabOneValueFUi(struct LabelTabOneValue *const, UWORD16);
#line 62 "..\\..\\SRC\\HMI\\HMI_LabelTabOneValueFlag.hpp"
extern void InitDefaultFlag__20LabelTabOneValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETi(struct LabelTabOneValueFlag *const, UBYTE **, UWORD16, e_TYPE_OF_DB_TARGET, e_BOOL);
#line 70 "..\\..\\SRC\\HMI\\HMI_LabelTabTwoValue.hpp"
extern void Init__16LabelTabTwoValueF8e_SYMBOLPPUcUiN43(struct LabelTabTwoValue *const, e_SYMBOL, UBYTE **, UWORD16, UWORD16, UWORD16, UWORD16, UWORD16);
#line 78
extern void InitDbAccess__16LabelTabTwoValueFUi19e_TYPE_OF_DB_TARGETT1T2T1T2(struct LabelTabTwoValue *const, UWORD16, e_TYPE_OF_DB_TARGET, UWORD16, e_TYPE_OF_DB_TARGET, UWORD16, e_TYPE_OF_DB_TARGET);
#line 94
extern void SetFloatValue2__16LabelTabTwoValueFi(struct LabelTabTwoValue *const, e_BOOL);
#line 63 "..\\..\\SRC\\HMI\\HMI_LabelTabTwoValueTwoLabels.hpp"
extern void Init__25LabelTabTwoValueTwoLabelsF8e_SYMBOLPPUcT2UiN44(struct LabelTabTwoValueTwoLabels *const, e_SYMBOL, UBYTE **, UBYTE **, UWORD16, UWORD16, UWORD16, UWORD16, UWORD16);
#line 75
extern void SetLabel2ColOffset__25LabelTabTwoValueTwoLabelsFUi(struct LabelTabTwoValueTwoLabels *const, UWORD16);
extern void SetLabel2LineOffset__25LabelTabTwoValueTwoLabelsFUi(struct LabelTabTwoValueTwoLabels *const, UWORD16);
#line 69 "..\\..\\SRC\\HMI\\HMI_LabelTabTwoValueFlag.hpp"
extern void InitDefaultFlag__20LabelTabTwoValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETiT1T2T3T4(struct LabelTabTwoValueFlag *const, UBYTE **, UWORD16, e_TYPE_OF_DB_TARGET, e_BOOL, UBYTE **, UWORD16, e_TYPE_OF_DB_TARGET, e_BOOL);
#line 67 "..\\..\\SRC\\HMI\\HMI_LabelValueString.hpp"
extern void SetSep__16LabelValueStringFPUc(struct LabelValueString *const, UBYTE *);
#line 79
extern void SetColSep__16LabelValueStringFUi(struct LabelValueString *const, UWORD16);



extern void SetColValue1__16LabelValueStringFUi(struct LabelValueString *const, UWORD16);
#line 59 "..\\..\\SRC\\HMI\\HMI_LabelStringTwoItems.hpp"
extern void SetItem1Name__19LabelStringTwoItemsFPPUc(struct LabelStringTwoItems *const, UBYTE **);
#line 65
extern void SetItem2Name__19LabelStringTwoItemsFPPUc(struct LabelStringTwoItems *const, UBYTE **);
#line 63 "..\\..\\SRC\\HMI\\HMI_LabelStringNItems.hpp"
extern void SetSize__17LabelStringNItemsFUi(struct LabelStringNItems *const, UWORD16);

extern void SetItem__17LabelStringNItemsFUiPPUc(struct LabelStringNItems *const, UWORD16, UBYTE **);
#line 57 "..\\..\\SRC\\HMI\\HMI_LabelLanguage.hpp"
extern void SetValue1Name__13LabelLanguageFPPUc(struct LabelLanguage *const, UBYTE **);
#line 83 "..\\..\\SRC\\HMI\\HMI_LabelMode.hpp"
extern void SetNameMode__9LabelModeFPPUcN41(struct LabelMode *const, UBYTE **, UBYTE **, UBYTE **, UBYTE **, UBYTE **);
#line 71 "..\\..\\SRC\\HMI\\HMI_LabelSymbol.hpp"
extern void Init__11LabelSymbolF8e_SYMBOLPPUcUiT3T1(struct LabelSymbol *const, e_SYMBOL, UBYTE **, UWORD16, UWORD16, e_SYMBOL);
#line 83
extern void SetColSymbol__11LabelSymbolFUi(struct LabelSymbol *const, UWORD16);


extern void SetColSep__11LabelSymbolFUi(struct LabelSymbol *const, UWORD16);
#line 71 "..\\..\\SRC\\HMI\\HMI_AutoCalibValue.hpp"
extern void InitCalibProperties__14AutoCalibValueFUi19e_TYPE_OF_DB_TARGETPCUiPCiT1(struct AutoCalibValue *const, UWORD16, e_TYPE_OF_DB_TARGET, const UWORD16 *, const e_BOOL *, UWORD16);
#line 65 "..\\..\\SRC\\HMI\\HMI_ManualCalibValue.hpp"
extern void InitCalibProperties__16ManualCalibValueFUi19e_TYPE_OF_DB_TARGETPCUiPCiN21T2T1T2(struct ManualCalibValue *const, UWORD16, e_TYPE_OF_DB_TARGET, const UWORD16 *, const e_BOOL *, UWORD16, UWORD16, e_TYPE_OF_DB_TARGET, UWORD16, e_TYPE_OF_DB_TARGET);
#line 74 "..\\..\\SRC\\HMI\\HMI_ManualCalibTwoValue.hpp"
extern void SetMaxDisplayValue2__19ManualCalibTwoValueFUi(struct ManualCalibTwoValue *const, UWORD16);
#line 97 "..\\..\\SRC\\HMI\\HMI_VDate.hpp"
extern void InitDbAccess__5VDateFUi19e_TYPE_OF_DB_TARGETN51T2(struct VDate *const, UWORD16, e_TYPE_OF_DB_TARGET, UWORD16, UWORD16, UWORD16, UWORD16, UWORD16, e_TYPE_OF_DB_TARGET);
#line 115
extern void SetNameMonth__5VDateFPPUc(struct VDate *const, UBYTE **);
#line 127
extern void SetColSep__5VDateFUi(struct VDate *const, UWORD16);


extern void SetColDate__5VDateFUi(struct VDate *const, UWORD16);
#line 128 "..\\..\\SRC\\HMI\\HMI_VTime.hpp"
extern void SetColSep__5VTimeFUi(struct VTime *const, UWORD16);

extern void SetColHours__5VTimeFUi(struct VTime *const, UWORD16);
#line 147
extern void InitDbAccess__5VTimeFUi19e_TYPE_OF_DB_TARGETN51(struct VTime *const, UWORD16, e_TYPE_OF_DB_TARGET, UWORD16, UWORD16, UWORD16, UWORD16, UWORD16);
#line 80 "..\\..\\SRC\\HMI\\HMI_ParameterSpy.hpp"
extern void AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId(struct ParameterSpy *const, UWORD16, e_TYPE_OF_DB_TARGET, UWORD16, EventId);
#line 97
extern void Reset__12ParameterSpyFv(struct ParameterSpy *const);
#line 62 "..\\..\\SRC\\HMI\\HMI_VTimer.hpp"
extern void StartTimer__6VTimerFUlUii(struct VTimer *const, UWORD32, UWORD16, e_BOOL);
#line 84 "..\\..\\SRC\\HMI\\HMI_FrameWelcome.hpp"
extern void init__12FrameWelcomeFv(struct FrameWelcome *const);
#line 60 "..\\..\\SRC\\HMI\\HMI_FrameConfiguration.hpp"
extern void init__18FrameConfigurationFv(struct FrameConfiguration *const);
#line 61 "..\\..\\SRC\\HMI\\HMI_FramePreference.hpp"
extern void init__15FramePreferenceFv(struct FramePreference *const);
#line 75 "..\\..\\SRC\\HMI\\HMI_FrameCircuitCheck.hpp"
extern void init__17FrameCircuitCheckFv(struct FrameCircuitCheck *const);
#line 83 "..\\..\\SRC\\HMI\\HMI_FrameMaintenance.hpp"
extern void SetBlowerSpeedLine__16FrameMaintenanceFUi(struct FrameMaintenance *const, UWORD16);

extern void init__16FrameMaintenanceFv(struct FrameMaintenance *const);
#line 79 "..\\..\\SRC\\HMI\\HMI_FrameHistoAno.hpp"
extern void init__13FrameHistoAnoFv(struct FrameHistoAno *const);
#line 73 "..\\..\\SRC\\HMI\\HMI_FrameVoltControl.hpp"
extern void init__16FrameVoltControlFv(struct FrameVoltControl *const);
#line 120 "..\\..\\SRC\\HMI\\HMI_FrameVentilation.hpp"
extern void init__16FrameVentilationFv(struct FrameVentilation *const);
#line 156 "..\\..\\SRC\\HMI\\HMI_FrameAlarme.hpp"
extern void init__11FrameAlarmeFv(struct FrameAlarme *const);
#line 71 "..\\..\\SRC\\HMI\\HMI_FrameHistoAlarme.hpp"
extern void init__16FrameHistoAlarmeFv(struct FrameHistoAlarme *const);
#line 67 "..\\..\\SRC\\HMI\\HMI_DatabaseAccess.hpp"
extern e_BOOL ReadValue__14DataBaseAccessSFPUiUi19e_TYPE_OF_DB_TARGET(UWORD16 *, UWORD16, e_TYPE_OF_DB_TARGET);
#line 75
extern e_BOOL WriteValue__14DataBaseAccessSFPUiUi19e_TYPE_OF_DB_TARGET(UWORD16 *, UWORD16, e_TYPE_OF_DB_TARGET);
#line 165 "..\\..\\SRC\\HMI\\HMI_FrameGraph.hpp"
extern void init__10FrameGraphFv(struct FrameGraph *const);
#line 64 "..\\..\\SRC\\HMI\\HMI_FrameGraphConfig.hpp"
extern void init__16FrameGraphConfigFv(struct FrameGraphConfig *const);
#line 89 "..\\..\\SRC\\HMI\\HMI_FrameBatteryMenu.hpp"
extern void init__16FrameBatteryMenuFv(struct FrameBatteryMenu *const);
#line 89 "..\\..\\SRC\\HMI\\HMI_FrameUSB.hpp"
extern void init__8FrameUSBFv(struct FrameUSB *const);
#line 100
extern struct MessageDialog *GetMessageDialog__8FrameUSBFv(struct FrameUSB *const);
#line 83 "..\\..\\SRC\\HMI\\HMI_FrameTendance.hpp"
extern void init__13FrameTendanceFv(struct FrameTendance *const);
#line 100 "..\\..\\SRC\\HMI\\HMI_MessageDelayed.hpp"
extern void Init__14MessageDelayedFP6VTimerP13MessageDialogUi(struct MessageDelayed *const, struct VTimer *, struct MessageDialog *, UWORD16);
#line 143 "..\\..\\SRC\\HMI\\HMI_Setup1.hpp"
extern void Init__10HMI_Setup1Fv(struct HMI_Setup1 *const);
extern void InitConfiguration__10HMI_Setup1Fv(struct HMI_Setup1 *const);
extern struct HMI_Setup1 *GetInstance__10HMI_Setup1SFv(void);
#line 437 "..\\..\\SRC\\HMI\\HMI_ControllerInit.cpp"
extern void Reset__10ControllerFv(struct Controller *const);
#line 451 "..\\..\\SRC\\HMI\\HMI_Controller.hpp"
extern void RebuildEventNodeTreeForAllModes__10ControllerFUiT1(struct Controller *const, UWORD16, UWORD16);
#line 457
extern void SetMCycl__10ControllerFi(struct Controller *const, e_BOOL);

extern void SetPressureUnit__10ControllerFUi(struct Controller *const, UWORD16);



extern void SendInfoValve__10ControllerFi(struct Controller *const, e_BOOL);

extern void SetPressConvention__10ControllerFi(struct Controller *const, e_BOOL);
#line 479
extern void UsbUpdateNavigNodes__10ControllerFUi(struct Controller *const, UWORD16);
#line 491
extern void SetInhibApneaOk__10ControllerFi(struct Controller *const, e_BOOL);

extern void SetTrigEPosSelected__10ControllerFi(struct Controller *const, e_BOOL);
#line 531
extern void SetEndOfInit__10ControllerFi(struct Controller *const, e_BOOL);


extern void SetImpactDisplay__10ControllerFi(struct Controller *const, e_BOOL);
#line 571
extern UWORD16 UpdateCalibrationPoints__10ControllerFv(struct Controller *const);
#line 78 "..\\..\\SRC\\HMI\\HMI_ControllerInit.cpp"
extern void Init__10ControllerFv(struct Controller *const);
#line 563
extern void InitConfiguration__10ControllerFv(struct Controller *const);
#line 596 "..\\..\\SRC\\HMI\\HMI_Controller.hpp"
extern void SetCurrentMode__10ControllerF12e_MODE_TYPES(struct Controller *const, e_MODE_TYPES);
extern e_MODE_TYPES GetCurrentMode__10ControllerFv(struct Controller *const);
#line 607
extern struct MenuControlNode *GetNodeAt__10ControllerFUi(struct Controller *const, UWORD16);
#line 627
extern void SetBrightness__10ControllerFUi(struct Controller *const, UWORD16);
extern UWORD16 GetBrightness__10ControllerFv(struct Controller *const);


extern void SetLanguage__10ControllerFUi(struct Controller *const, UWORD16);
#line 639
extern void SetPSupportNull__10ControllerFi(struct Controller *const, e_BOOL);
#line 647
extern void ManageLock__10ControllerFi(struct Controller *const, e_BOOL);
#line 653
extern void SetModeChange__10ControllerFi(struct Controller *const, e_BOOL);
#line 661
extern void SetModifNodeOn__10ControllerFi(struct Controller *const, e_BOOL);
#line 2683 "..\\..\\SRC\\HMI\\HMI_ControllerInit.cpp"
extern void BuildTree__10ControllerFv(struct Controller *const);
#line 71 "..\\..\\SRC\\HMI\\HMI_MenuControlNode.hpp"
extern void Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode(struct MenuControlNode *const, e_BOOL, e_BOOL, struct DisplayObject *, struct EventNode *);




extern void SetVisible__15MenuControlNodeFi(struct MenuControlNode *const, e_BOOL);
#line 90
extern struct EventNode *GetEventNode__15MenuControlNodeFv(struct MenuControlNode *const);
#line 100 "..\\..\\SRC\\HMI\\HMI_EventNode.hpp"
extern void SetIdNodeOnUp__9EventNodeFUi(struct EventNode *const, UWORD16);
extern UWORD16 GetIdNodeOnUp__9EventNodeCFv(const struct EventNode *const);

extern void SetIdNodeOnDown__9EventNodeFUi(struct EventNode *const, UWORD16);
extern UWORD16 GetIdNodeOnDown__9EventNodeCFv(const struct EventNode *const);




extern void SetIdNodeOnValid__9EventNodeFUi(struct EventNode *const, UWORD16);
#line 67 "..\\..\\SRC\\HMI\\HMI_InterfaceCppC.hpp"
extern e_BOOL DB_Request__13InterfaceCppCSFPUiUi19e_TYPE_OF_DB_TARGET16e_DATA_OPERATION(UWORD16 *, UWORD16, e_TYPE_OF_DB_TARGET, e_DATA_OPERATION);
#line 154 "..\\..\\SRC\\HMI\\HMI_IhmType.hpp"
extern const e_BOOL FlowFloatSegmentList[];

extern const e_BOOL PatientPressureFloatSegmentList[];

extern const e_BOOL ValvePressureFloatSegmentList[];

extern const e_BOOL FiO2FloatSegmentList[];

extern const e_BOOL FlowO2FloatSegmentList[];

extern const e_BOOL O2PressureFloatSegmentList[];
#line 196 "..\\..\\SRC\\HMI\\HMI_GlobalEventNode.hpp"
extern struct EventNode EventNodeVentil;
extern struct EventNode EventNodeModifVentil;
extern struct EventNode EventNodeVt;
extern struct EventNode EventNodeModifVt;
extern struct EventNode EventNodePi;
extern struct EventNode EventNodeModifPi;
extern struct EventNode EventNodePi2;
extern struct EventNode EventNodeModifPi2;
extern struct EventNode EventNodePControl;
extern struct EventNode EventNodeModifPControl;
extern struct EventNode EventNodePSupport;
extern struct EventNode EventNodeModifPSupport;
extern struct EventNode EventNodeFVaci;
extern struct EventNode EventNodeModifFVaci;
extern struct EventNode EventNodePe;
extern struct EventNode EventNodeModifPe;
extern struct EventNode EventNodePente;
extern struct EventNode EventNodeModifPente;
extern struct EventNode EventNodeRampe;
extern struct EventNode EventNodeModifRampe;
extern struct EventNode EventNodeFrMini;
extern struct EventNode EventNodeModifFrMini;
extern struct EventNode EventNodeInspTime;
extern struct EventNode EventNodeModifInspTime;
extern struct EventNode EventNodeTriggerI;
extern struct EventNode EventNodeModifTriggerI;
extern struct EventNode EventNodeSoupirSelect;
extern struct EventNode EventNodeModifSoupirSelect;
extern struct EventNode EventNodeSoupirVtCoeff;
extern struct EventNode EventNodeModifSoupirVtCoeff;
extern struct EventNode EventNodeSoupirCpt;
extern struct EventNode EventNodeModifSoupirCpt;
extern struct EventNode EventNodeTriggerE;
extern struct EventNode EventNodeModifTriggerE;
extern struct EventNode EventNodeFsecu;
extern struct EventNode EventNodeModifFsecu;
extern struct EventNode EventNodeFiO2;
extern struct EventNode EventNodeModifFiO2;
extern struct EventNode EventNodeApnee;
extern struct EventNode EventNodeModifApnee;
extern struct EventNode EventNodeVtCible;
extern struct EventNode EventNodeModifVtCible;
extern struct EventNode EventNodePiMax;
extern struct EventNode EventNodeModifPiMax;
extern struct EventNode EventNodeTriggerEsigned;
extern struct EventNode EventNodeModifTriggerEsigned;
extern struct EventNode EventNodePreference;
extern struct EventNode EventNodeModeChange;
extern struct EventNode EventNodeModifModeChange;
extern struct EventNode EventNodeGhost;

extern struct EventNode EventNodeAlarm;
extern struct EventNode EventNodeModifAlarm;
extern struct EventNode EventNodeAlPi;
extern struct EventNode EventNodeAlPiMin;
extern struct EventNode EventNodeAlPiMax;
extern struct EventNode EventNodeAlVti;
extern struct EventNode EventNodeAlVtiMin;
extern struct EventNode EventNodeAlVtiMax;
extern struct EventNode EventNodeAlVte;
extern struct EventNode EventNodeAlVteMin;
extern struct EventNode EventNodeAlVteMax;
extern struct EventNode EventNodeAlCalibVte;
extern struct EventNode EventNodeAlCalibVte2;
extern struct EventNode EventNodeAlFuite;
extern struct EventNode EventNodeAlFuiteMax;
extern struct EventNode EventNodeAlFiO2;
extern struct EventNode EventNodeAlFiO2Min;
extern struct EventNode EventNodeAlFiO2Max;
extern struct EventNode EventNodeAlCalibFiO2;
extern struct EventNode EventNodeAlCalibFiO2_2;
extern struct EventNode EventNodeAlFr;
extern struct EventNode EventNodeAlFrMax;
extern struct EventNode EventNodeAlSpO2;
extern struct EventNode EventNodeAlSpO2Min;
extern struct EventNode EventNodeAlSpO2Max;
extern struct EventNode EventNodeAlTi;
extern struct EventNode EventNodeAlTiMin;
extern struct EventNode EventNodeAlTiMax;
extern struct EventNode EventNodeAlHisto;
extern struct EventNode EventNodeAlModeChange;
extern struct EventNode EventNodeModifAlModeChange;
extern struct EventNode EventNodeAlGhost;

extern struct EventNode EventNodeHistAlBack;
extern struct EventNode EventNodeHistAlCancelled;

extern struct EventNode EventNodeConfLang;
extern struct EventNode EventNodeModifConfLang;
extern struct EventNode EventNodeConfDate;
extern struct EventNode EventNodeConfMonth;
extern struct EventNode EventNodeConfDay;
extern struct EventNode EventNodeConfYear;
extern struct EventNode EventNodeConfTime;
extern struct EventNode EventNodeConfHour;
extern struct EventNode EventNodeConfMinute;
extern struct EventNode EventNodeConfSecond;
extern struct EventNode EventNodeConfPatientCount;
extern struct EventNode EventNodeModifConfPatientCount;
extern struct EventNode EventNodeConfPatientReset;
extern struct EventNode EventNodeModifConfPatientReset;
extern struct EventNode EventNodeConfMaint;
extern struct EventNode EventNodeConfNextPage;
extern struct EventNode EventNodeConfModeCycl;
extern struct EventNode EventNodeModifConfModeCycl;
extern struct EventNode EventNodeConfRelativePress;
extern struct EventNode EventNodeModifConfRelativePress;
extern struct EventNode EventNodeConfPressureUnit;
extern struct EventNode EventNodeConfAlarmTone;
extern struct EventNode EventNodeModifConfPressureUnit;
extern struct EventNode EventNodeModifConfAlarmTone;
extern struct EventNode EventNodeConfConvTrigE;
extern struct EventNode EventNodeModifConfConvTrigE;
extern struct EventNode EventNodeConfMachineHour;
extern struct EventNode EventNodeConfig1BackToConfig;
extern struct EventNode EventNodeConfResetDefaultSetting;
extern struct EventNode EventNodeModifConfResetDefaultSetting;

extern struct EventNode EventNodePrefScreenSave;
extern struct EventNode EventNodeModifPrefScreenSave;
extern struct EventNode EventNodePrefBrightness;
extern struct EventNode EventNodeModifPrefBrightness;
extern struct EventNode EventNodePrefSoundLevel;
extern struct EventNode EventNodeModifPrefSoundLevel;
extern struct EventNode EventNodePrefKeyTone;
extern struct EventNode EventNodeModifPrefKeyTone;
extern struct EventNode EventNodePrefVoluntaryStopAlarm;
extern struct EventNode EventNodeModifPrefVoluntaryStopAlarm;
extern struct EventNode EventNodePrefApneaAlarm;
extern struct EventNode EventNodeModifPrefApneaAlarm;
extern struct EventNode EventNodePrefDisconnectionAlarm;
extern struct EventNode EventNodeModifPrefDisconnectionAlarm;
extern struct EventNode EventNodePrefWaveDisplay;
extern struct EventNode EventNodeModifPrefWaveDisplay;
extern struct EventNode EventNodePrefPediatricCircuit;
extern struct EventNode EventNodeModifPrefPediatricCircuit;

extern struct EventNode EventNodePrefTrend;
extern struct EventNode EventNodePrefBackVentil;

extern struct EventNode EventNodeCircuitLeak;

extern struct EventNode EventNodeMaintHistAno;
extern struct EventNode EventNodeMaintVoltCtrl;
extern struct EventNode EventNodeMaintSensorCal;
extern struct EventNode EventNodeMaintGhostStart;
extern struct EventNode EventNodeMaintPatientPressure;
extern struct EventNode EventNodeMaintPatientPressure1;
extern struct EventNode EventNodeMaintPatientPressure2;
extern struct EventNode EventNodeMaintPatientPressure3;
extern struct EventNode EventNoteMaintValvePressure;
extern struct EventNode EventNoteMaintValvePressure1;
extern struct EventNode EventNoteMaintValvePressure2;
extern struct EventNode EventNoteMaintValvePressure3;
extern struct EventNode EventNodeMaintFlowIns;
extern struct EventNode EventNodeMaintFlowIns1;
extern struct EventNode EventNodeMaintFlowIns2;
extern struct EventNode EventNodeMaintFlowIns3;
extern struct EventNode EventNodeMaintFlowIns4;
extern struct EventNode EventNodeMaintFlowIns5;
extern struct EventNode EventNodeMaintFlowIns6;
extern struct EventNode EventNodeMaintFlowIns7;
extern struct EventNode EventNodeMaintFlowIns8;
extern struct EventNode EventNodeMaintFlowIns9;
extern struct EventNode EventNodeMaintFlowExp;
extern struct EventNode EventNodeMaintFlowExp1;
extern struct EventNode EventNodeMaintFlowExp2;
extern struct EventNode EventNodeMaintFlowExp3;
extern struct EventNode EventNodeMaintFlowExp4;
extern struct EventNode EventNodeMaintFlowExp5;
extern struct EventNode EventNodeMaintFlowExp6;
extern struct EventNode EventNodeMaintFlowExp7;
extern struct EventNode EventNodeMaintFlowExp8;
extern struct EventNode EventNodeMaintFlowExp9;
extern struct EventNode EventNodeMaintFiO2Concent;
extern struct EventNode EventNodeMaintFiO2Concent1;
extern struct EventNode EventNodeMaintFiO2Concent2;
extern struct EventNode EventNodeMaintFlowO2;
extern struct EventNode EventNodeMaintFlowO2_1;
extern struct EventNode EventNodeMaintFlowO2_2;
extern struct EventNode EventNodeMaintFlowO2_3;
extern struct EventNode EventNodeMaintFlowO2_4;
extern struct EventNode EventNodeMaintFlowO2_5;
extern struct EventNode EventNodeMaintFlowO2_6;
extern struct EventNode EventNodeMaintFlowO2_7;
extern struct EventNode EventNodeMaintFlowO2_8;
extern struct EventNode EventNodeMaintFlowO2_9;
extern struct EventNode EventNodeMaintPressO2;
extern struct EventNode EventNodeMaintPressO2_1;
extern struct EventNode EventNodeMaintPressO2_2;
extern struct EventNode EventNodeMaintGhostEnd;
extern struct EventNode EventNodeMaintPwmBlower;
extern struct EventNode EventNodeModifMaintPwmBlower;
extern struct EventNode EventNodeMaintBackToConfig;

extern struct EventNode EventNodeHistAnoBackMaint;

extern struct EventNode EventNodeSupplyBuzVolt;
extern struct EventNode EventNodeSupplyBackUpBuz;
extern struct EventNode EventNodeSupplyBatteryMenu;
extern struct EventNode EventNodeSupplyAltCompens;
extern struct EventNode EventNodeModifSupplyAltCompens;
extern struct EventNode EventNodeSupplyBackToMaint;

extern struct EventNode EventNodeGraphGhost;

extern struct EventNode EventNodeCfgGraphVisu;
extern struct EventNode EventNodeModifCfgGraphVisu;
extern struct EventNode EventNodeCfgGraphPMax;
extern struct EventNode EventNodeModifCfgGraphPMax;
extern struct EventNode EventNodeCfgGraphQMax;
extern struct EventNode EventNodeModifCfgGraphQMax;
extern struct EventNode EventNodeCfgGraphVtMax;
extern struct EventNode EventNodeModifCfgGraphVtMax;
extern struct EventNode EventNodeCfgGraphTMax;
extern struct EventNode EventNodeModifCfgGraphTMax;
extern struct EventNode EventNodeCfgGraphRepresent;
extern struct EventNode EventNodeModifCfgGraphRepresent;
extern struct EventNode EventNodeCfgGraphBackPref;

extern struct EventNode EventNodeBatteryBackToMaint;

extern struct EventNode EventNodeUsbStop;
#line 426
extern struct EventNode EventNodeUsbContRecord;
extern struct EventNode EventNodeModifUsbContRecord;
extern struct EventNode EventNodeUsbTransferMonit;
extern struct EventNode EventNodeModifUsbTransferMonit;
extern struct EventNode EventNodeUsbTransferTrend;
extern struct EventNode EventNodeModifUsbTransferTrend;


extern struct EventNode EventNodeUsbEraseKey;
extern struct EventNode EventNodeModifUsbEraseKey;
extern struct EventNode EventNodeUsbGhost;

extern struct EventNode EventNodeTrendBack;

extern struct EventNode EventNodeGhostEnd;
#line 207 "..\\..\\SRC\\HMI\\HMI_Message.hpp"
extern const UBYTE *const huge cMSG_CancelledAlarm[19];



extern const UBYTE *const huge cMSG_Month[13][19];
#line 227
extern const UBYTE *const huge cMSG_CounterMachine[19];
extern const UBYTE *const huge cMSG_Language[19];
extern const UBYTE *const huge cMSG_CountryLanguage[19];
extern const UBYTE *const huge cMSG_Date[19];
extern const UBYTE *const huge cMSG_Time[19];




extern const UBYTE *const huge cMSG_PressureUnitType[19];
extern const UBYTE *const huge cMSG_Alarm_Tone[19];



extern const UBYTE *const huge cMSG_CounterPatient[19];
extern const UBYTE *const huge cMSG_ResetPatientHrs[19];
extern const UBYTE *const huge cMSG_Maintenance[19];
extern const UBYTE *const huge cMSG_NextPage[19];

extern const UBYTE *const huge cMSG_RestoreDefaultSetting[19];



extern const UBYTE *const huge cMSG_ScreenSave[19];
extern const UBYTE *const huge cMSG_Brightness[19];
extern const UBYTE *const huge cMSG_SoundLevel[19];
extern const UBYTE *const huge cMSG_KeySound[19];
extern const UBYTE *const huge cMSG_Key[19];
extern const UBYTE *const huge cMSG_Bip[19];
extern const UBYTE *const huge cMSG_BipAndKey[19];
extern const UBYTE *const huge cMSG_VoluntaryStopAlarm[19];
extern const UBYTE *const huge cMSG_ApneaAlarm[19];
extern const UBYTE *const huge cMSG_DisconnectionAlarm[19];
extern const UBYTE *const huge cMSG_WaveformDisplay[19];

extern const UBYTE *const huge cMSG_RapportVentil[19];
extern const UBYTE *const huge cMSG_PediatricCircuit[19];
extern const UBYTE *const huge cMSG_BackVentil[19];
#line 277
extern const UBYTE *const huge cMSG_CircuitLeak[19];
#line 285
extern const UBYTE *const huge cMSG_HistoAnom[19];
extern const UBYTE *const huge cMSG_VoltCtrl[19];
extern const UBYTE *const huge cMSG_SensorCal[19];
extern const UBYTE *const huge cMSG_PatientPressure[19];
extern const UBYTE *const huge cMSG_ValvePressure[19];
extern const UBYTE *const huge cMSG_FlowIns[19];
extern const UBYTE *const huge cMSG_FlowExp[19];
extern const UBYTE *const huge cMSG_CalibFiO2[19];
extern const UBYTE *const huge cMSG_O2Pressure[19];
extern const UBYTE *const huge cMSG_FlowO2[19];
extern const UBYTE *const huge cMSG_PwmBlower[19];
extern const UBYTE *const huge cMSG_Back[19];
#line 305
extern const UBYTE *const huge cMSG_Buzzer[19];
extern const UBYTE *const huge cMSG_BuzzerSec[19];
extern const UBYTE *const huge cMSG_BatteryMenu[19];
extern const UBYTE *const huge cMSG_BaroCorrect[19];
#line 336
extern const UBYTE *const huge cMSG_Mode[6][19];
#line 342
extern const UBYTE *const huge cMSG_Mode2[6][19];
#line 348
extern const UBYTE *const huge cMSG_Mode3[6][19];
#line 354
extern const UBYTE *const huge cMSG_InspTrigger[7][19];
#line 361
extern const UBYTE *const huge cMSG_EnableMode[19];
extern const UBYTE *const huge cMSG_DisableMode[19];

extern const UBYTE *const huge cMSG_PressureSlope[19];
extern const UBYTE *const huge cMSG_Rampe[19];
extern const UBYTE *const huge cMSG_ExhalationPressure[19];

extern const UBYTE *const huge cMSG_InsuflationPressureControl[19];
extern const UBYTE *const huge cMSG_InsuflationPressureControl2[19];
extern const UBYTE *const huge cMSG_InsuflationPressureSupport[19];
extern const UBYTE *const huge cMSG_CurrantVolume[19];
extern const UBYTE *const huge cMSG_InspirationTrigger[19];
extern const UBYTE *const huge cMSG_ExhalationTrigger[19];
extern const UBYTE *const huge cMSG_ControlRate[19];
extern const UBYTE *const huge cMSG_BackupRate[19];
extern const UBYTE *const huge cMSG_Apnee[19];
extern const UBYTE *const huge cMSG_TiControl[19];
extern const UBYTE *const huge cMSG_IERation[19];
extern const UBYTE *const huge cMSG_ITRation[19];



extern const UBYTE *const huge cMSG_Soupir[19];
extern const UBYTE *const huge cMSG_VtSoupir[19];
extern const UBYTE *const huge cMSG_CptSoupir[19];
extern const UBYTE *const huge cMSG_FiO2[19];
extern const UBYTE *const huge cMSG_VTCible[19];
extern const UBYTE *const huge cMSG_PiMax[19];
#line 404
extern const UBYTE *const huge cMSG_VPreferences[19];
#line 411
extern const UBYTE *const huge cMSG_PiMbar[19];
extern const UBYTE *const huge cMSG_VteMl[19];

extern const UBYTE *const huge cMSG_FrCMin[19];
extern const UBYTE *const huge cMSG_TiS[19];
extern const UBYTE *const huge cMSG_VtiMl[19];
extern const UBYTE *const huge cMSG_FiO2Pc[19];

extern const UBYTE *const huge cMSG_SpO2Pc[19];
extern const UBYTE *const huge cMSG_FuiteParam[19];

extern const UBYTE *const huge cMSG_HistoAlarm[19];
extern const UBYTE *const huge cMSG_switchMode[19];
#line 462
extern const UBYTE *const huge cMSG_PressureUnit[3][19];


extern const UBYTE *const huge cMSG_VolumeUnit[19];

extern const UBYTE *const huge cMSG_PerCentUnit[19];
extern const UBYTE *const huge cMSG_FlowUnit[19];
extern const UBYTE *const huge cMSG_StandardFlowUnit[19];
extern const UBYTE *const huge cMSG_FrequencyUnit[19];

extern const UBYTE *const huge cMSG_TensionUnit[19];



extern const UBYTE *const huge cMSG_PressBarUnit[19];
extern const UBYTE *const huge cMSG_HourUnit[19];
extern const UBYTE *const huge cMSG_MinuteUnit[19];
extern const UBYTE *const huge cMSG_SecondUnit[19];


extern const UBYTE *const huge cMSG_MonthUnit[19];



extern const UBYTE *const huge cMSG_Stop[19];


extern const UBYTE *const huge cMSG_No[19];
extern const UBYTE *const huge cMSG_Off[19];
extern const UBYTE *const huge cMSG_Yes[19];

extern const UBYTE *const huge cMSG_NoneUnit[19];
extern const UBYTE *const huge cMSG_Slash[19];



extern const UBYTE *const huge cMSG_Auto[19];




extern const UBYTE *const huge cMSG_Original[19];
extern const UBYTE *const huge cMSG_Compliant[19];


extern const UBYTE *const huge cMSG_Visualisation[19];
extern const UBYTE *const huge cMSG_PressionMax[19];
extern const UBYTE *const huge cMSG_DebitMax[19];
extern const UBYTE *const huge cMSG_VtMax[19];
extern const UBYTE *const huge cMSG_TempsMax[19];
extern const UBYTE *const huge cMSG_Representation[19];
extern const UBYTE *const huge cMSG_CurveVisualisation1[19];
extern const UBYTE *const huge cMSG_CurveVisualisation2[19];
extern const UBYTE *const huge cMSG_CurveRepresentation1[19];
extern const UBYTE *const huge cMSG_CurveRepresentation2[19];
#line 537
extern const UBYTE *const huge cMSG_EraseKey[19];



extern const UBYTE *const huge cMSG_ContRecordUSB[19];
extern const UBYTE *const huge cMSG_TransferMonitUSB[19];
extern const UBYTE *const huge cMSG_TransferTrendUSB[19];
#line 33 "..\\..\\SRC\\HMI\\HMI_Controller_Data.hpp"
extern struct MenuControlNode Controller_ArrayNode[222];
#line 254 "..\\..\\SRC\\SYSTEM\\System_Datas.h"
extern const UWORD16 PATIENT_PRESSURE_CALIB_POINTS[8];

extern const UWORD16 FLOW_CALIB_POINTS[8];




extern const UWORD16 VALVE_FAS_PWM_CALIB_POINTS[3];

extern const UWORD16 FIO2_CALIB_POINTS[8];


extern const UWORD16 FLOW_O2_CALIB_POINTS[8];


extern const UWORD16 O2_PRESSURE_CALIB_POINTS[8];
#line 15 "..\\LH_ST10F276.h"
 sfr ADCIC = 0xFF98;
 sfr ADCON = 0xFFA0;
 sfr ADDAT = 0xFEA0;
 sfr ADDAT2 = 0xF0A0;

 sfr ADEIC = 0xFF9A;
sbit ADST = 0xFFA0 ^ 7;
sbit ADBSY = 0xFFA0 ^ 8;
sbit ADWR = 0xFFA0 ^ 9;
sbit ADCIN = 0xFFA0 ^ 10;
sbit ADCRQ = 0xFFA0 ^ 11;
sbit ADCIE = 0xFF98 ^ 6;
sbit ADCIR = 0xFF98 ^ 7;
sbit ADEIE = 0xFF9A ^ 6;
sbit ADEIR = 0xFF9A ^ 7;


 sfr CC0 = 0xFE80;
 sfr CC0IC = 0xFF78;
 sfr CC1 = 0xFE82;
 sfr CC1IC = 0xFF7A;
 sfr CC2 = 0xFE84;
 sfr CC2IC = 0xFF7C;
 sfr CC3 = 0xFE86;
 sfr CC3IC = 0xFF7E;
 sfr CC4 = 0xFE88;
 sfr CC4IC = 0xFF80;
 sfr CC5 = 0xFE8A;
 sfr CC5IC = 0xFF82;
 sfr CC6 = 0xFE8C;
 sfr CC6IC = 0xFF84;
 sfr CC7 = 0xFE8E;
 sfr CC7IC = 0xFF86;
 sfr CC8 = 0xFE90;
 sfr CC8IC = 0xFF88;
 sfr CC9 = 0xFE92;
 sfr CC9IC = 0xFF8A;
 sfr CC10 = 0xFE94;
 sfr CC10IC = 0xFF8C;
 sfr CC11 = 0xFE96;
 sfr CC11IC = 0xFF8E;
 sfr CC12 = 0xFE98;
 sfr CC12IC = 0xFF90;
 sfr CC13 = 0xFE9A;
 sfr CC13IC = 0xFF92;
 sfr CC14 = 0xFE9C;
 sfr CC14IC = 0xFF94;
 sfr CC15 = 0xFE9E;
 sfr CC15IC = 0xFF96;
 sfr CC16 = 0xFE60;
 sfr CC16IC = 0xF160;
 sfr CC17 = 0xFE62;
 sfr CC17IC = 0xF162;
 sfr CC18 = 0xFE64;
 sfr CC18IC = 0xF164;
 sfr CC19 = 0xFE66;
 sfr CC19IC = 0xF166;
 sfr CC20 = 0xFE68;
 sfr CC20IC = 0xF168;
 sfr CC21 = 0xFE6A;
 sfr CC21IC = 0xF16A;
 sfr CC22 = 0xFE6C;
 sfr CC22IC = 0xF16C;
 sfr CC23 = 0xFE6E;
 sfr CC23IC = 0xF16E;
 sfr CC24 = 0xFE70;
 sfr CC24IC = 0xF170;
 sfr CC25 = 0xFE72;
 sfr CC25IC = 0xF172;
 sfr CC26 = 0xFE74;
 sfr CC26IC = 0xF174;
 sfr CC27 = 0xFE76;
 sfr CC27IC = 0xF176;
 sfr CC28 = 0xFE78;
 sfr CC28IC = 0xF178;
 sfr CC29 = 0xFE7A;
 sfr CC29IC = 0xF184;
 sfr CC30 = 0xFE7C;
 sfr CC30IC = 0xF18C;
 sfr CC31 = 0xFE7E;
 sfr CC31IC = 0xF194;
 sfr CCM0 = 0xFF52;
 sfr CCM1 = 0xFF54;
 sfr CCM2 = 0xFF56;
 sfr CCM3 = 0xFF58;
 sfr CCM4 = 0xFF22;
 sfr CCM5 = 0xFF24;
 sfr CCM6 = 0xFF26;
 sfr CCM7 = 0xFF28;
 sfr T0 = 0xFE50;
 sfr T01CON = 0xFF50;
 sfr T0IC = 0xFF9C;
 sfr T0REL = 0xFE54;
 sfr T1 = 0xFE52;
 sfr T1IC = 0xFF9E;
 sfr T1REL = 0xFE56;
 sfr T7 = 0xF050;
 sfr T78CON = 0xFF20;
 sfr T7IC = 0xF17A;
 sfr T7REL = 0xF054;
 sfr T8 = 0xF052;
 sfr T8IC = 0xF17C;
 sfr T8REL = 0xF056;
sbit CC0IR = 0xFF78 ^ 7;
sbit CC0IE = 0xFF78 ^ 6;
sbit CC1IR = 0xFF7A ^ 7;
sbit CC1IE = 0xFF7A ^ 6;
sbit CC2IR = 0xFF7C ^ 7;
sbit CC2IE = 0xFF7C ^ 6;
sbit CC3IR = 0xFF7E ^ 7;
sbit CC3IE = 0xFF7E ^ 6;
sbit CC4IR = 0xFF80 ^ 7;
sbit CC4IE = 0xFF80 ^ 6;
sbit CC5IR = 0xFF82 ^ 7;
sbit CC5IE = 0xFF82 ^ 6;
sbit CC6IR = 0xFF84 ^ 7;
sbit CC6IE = 0xFF84 ^ 6;
sbit CC7IR = 0xFF86 ^ 7;
sbit CC7IE = 0xFF86 ^ 6;
sbit CC8IR = 0xFF88 ^ 7;
sbit CC8IE = 0xFF88 ^ 6;
sbit CC9IR = 0xFF8A ^ 7;
sbit CC9IE = 0xFF8A ^ 6;
sbit CC10IR = 0xFF8C ^ 7;
sbit CC10IE = 0xFF8C ^ 6;
sbit CC11IR = 0xFF8E ^ 7;
sbit CC11IE = 0xFF8E ^ 6;
sbit CC12IR = 0xFF90 ^ 7;
sbit CC12IE = 0xFF90 ^ 6;
sbit CC13IR = 0xFF92 ^ 7;
sbit CC13IE = 0xFF92 ^ 6;
sbit CC14IR = 0xFF94 ^ 7;
sbit CC14IE = 0xFF94 ^ 6;
sbit CC15IR = 0xFF96 ^ 7;
sbit CC15IE = 0xFF96 ^ 6;
sbit CC16IR = 0xF160 ^ 7;
sbit CC16IE = 0xF160 ^ 6;
sbit CC17IR = 0xF162 ^ 7;
sbit CC17IE = 0xF162 ^ 6;
sbit CC18IR = 0xF164 ^ 7;
sbit CC18IE = 0xF164 ^ 6;
sbit CC19IR = 0xF166 ^ 7;
sbit CC19IE = 0xF166 ^ 6;
sbit CC20IR = 0xF168 ^ 7;
sbit CC20IE = 0xF168 ^ 6;
sbit CC21IR = 0xF16A ^ 7;
sbit CC21IE = 0xF16A ^ 6;
sbit CC22IR = 0xF16C ^ 7;
sbit CC22IE = 0xF16C ^ 6;
sbit CC23IR = 0xF16E ^ 7;
sbit CC23IE = 0xF16E ^ 6;
sbit CC24IR = 0xF170 ^ 7;
sbit CC24IE = 0xF170 ^ 6;
sbit CC25IR = 0xF172 ^ 7;
sbit CC25IE = 0xF172 ^ 6;
sbit CC26IR = 0xF174 ^ 7;
sbit CC26IE = 0xF174 ^ 6;
sbit CC27IR = 0xF176 ^ 7;
sbit CC27IE = 0xF176 ^ 6;
sbit CC28IR = 0xF178 ^ 7;
sbit CC28IE = 0xF178 ^ 6;
sbit CC29IR = 0xF184 ^ 7;
sbit CC29IE = 0xF184 ^ 6;
sbit CC30IR = 0xF18C ^ 7;
sbit CC30IE = 0xF18C ^ 6;
sbit CC31IR = 0xF194 ^ 7;
sbit CC31IE = 0xF194 ^ 6;
sbit ACC0 = 0xFF52 ^ 3;
sbit ACC1 = 0xFF52 ^ 7;
sbit ACC2 = 0xFF52 ^ 11;
sbit ACC3 = 0xFF52 ^ 15;
sbit ACC4 = 0xFF54 ^ 3;
sbit ACC5 = 0xFF54 ^ 7;
sbit ACC6 = 0xFF54 ^ 11;
sbit ACC7 = 0xFF54 ^ 15;
sbit ACC8 = 0xFF56 ^ 3;
sbit ACC9 = 0xFF56 ^ 7;
sbit ACC10 = 0xFF56 ^ 11;
sbit ACC11 = 0xFF56 ^ 15;
sbit ACC12 = 0xFF58 ^ 3;
sbit ACC13 = 0xFF58 ^ 7;
sbit ACC14 = 0xFF58 ^ 11;
sbit ACC15 = 0xFF58 ^ 15;
sbit ACC16 = 0xFF22 ^ 3;
sbit ACC17 = 0xFF22 ^ 7;
sbit ACC18 = 0xFF22 ^ 11;
sbit ACC19 = 0xFF22 ^ 15;
sbit ACC20 = 0xFF24 ^ 3;
sbit ACC21 = 0xFF24 ^ 7;
sbit ACC22 = 0xFF24 ^ 11;
sbit ACC23 = 0xFF24 ^ 15;
sbit ACC24 = 0xFF26 ^ 3;
sbit ACC25 = 0xFF26 ^ 7;
sbit ACC26 = 0xFF26 ^ 11;
sbit ACC27 = 0xFF26 ^ 15;
sbit ACC28 = 0xFF28 ^ 3;
sbit ACC29 = 0xFF28 ^ 7;
sbit ACC30 = 0xFF28 ^ 11;
sbit ACC31 = 0xFF28 ^ 15;
sbit T0IE = 0xFF9C ^ 6;
sbit T0IR = 0xFF9C ^ 7;
sbit T0M = 0xFF50 ^ 3;
sbit T0R = 0xFF50 ^ 6;
sbit T1IE = 0xFF9E ^ 6;
sbit T1IR = 0xFF9E ^ 7;
sbit T1M = 0xFF50 ^ 11;
sbit T1R = 0xFF50 ^ 14;
sbit T7IE = 0xF17A ^ 6;
sbit T7IR = 0xF17A ^ 7;
sbit T7M = 0xFF20 ^ 3;
sbit T7R = 0xFF20 ^ 6;
sbit T8IE = 0xF17C ^ 6;
sbit T8IR = 0xF17C ^ 7;
sbit T8M = 0xFF20 ^ 11;
sbit T8R = 0xFF20 ^ 14;


 sfr CP = 0xFE10;
 sfr CSP = 0xFE08;
 sfr DPP0 = 0xFE00;
 sfr DPP1 = 0xFE02;
 sfr DPP2 = 0xFE04;
 sfr DPP3 = 0xFE06;
 sfr MDC = 0xFF0E;
 sfr MDH = 0xFE0C;
 sfr MDL = 0xFE0E;
 sfr ONES = 0xFF1E;
 sfr PSW = 0xFF10;
 sfr SP = 0xFE12;
 sfr STKOV = 0xFE14;
 sfr STKUN = 0xFE16;
 sfr SYSCON = 0xFF12;
 sfr TFR = 0xFFAC;
 sfr ZEROS = 0xFF1C;
 sfr XPERCON = 0xF024;
 sfr BUSCON0 = 0xFF0C;
 sfr BUSCON1 = 0xFF14;
 sfr BUSCON2 = 0xFF16;
 sfr BUSCON3 = 0xFF18;
 sfr BUSCON4 = 0xFF1A;
 sfr ADDRSEL1 = 0xFE18;
 sfr ADDRSEL2 = 0xFE1A;
 sfr ADDRSEL3 = 0xFE1C;
 sfr ADDRSEL4 = 0xFE1E;

sbit XPERSHARE = 0xFF12 ^ 0;
sbit VISIBLE = 0xFF12 ^ 1;
sbit XPEN = 0xFF12 ^ 2;
sbit BDRSTEN = 0xFF12 ^ 3;
sbit OWDDIS = 0xFF12 ^ 4;
sbit CSCFG = 0xFF12 ^ 6;
sbit WRCFG = 0xFF12 ^ 7;
sbit CLKEN = 0xFF12 ^ 8;
sbit BYTDIS = 0xFF12 ^ 9;
sbit ROMEN = 0xFF12 ^ 10;
sbit SGTEN = 0xFF12 ^ 11;
sbit ROMS1 = 0xFF12 ^ 12;
sbit N = 0xFF10 ^ 0;
sbit C = 0xFF10 ^ 1;
sbit V = 0xFF10 ^ 2;
sbit Z = 0xFF10 ^ 3;
sbit E = 0xFF10 ^ 4;
sbit MULIP = 0xFF10 ^ 5;
sbit USR0 = 0xFF10 ^ 6;
sbit HLDEN = 0xFF10 ^ 10;
sbit IEN = 0xFF10 ^ 11;
sbit MDRIU = 0xFF0E ^ 4;
sbit RWDC0 = 0xFF0C ^ 4;
sbit MTTC0 = 0xFF0C ^ 5;
sbit ALECTL0 = 0xFF0C ^ 9;
sbit BUSACT0 = 0xFF0C ^ 10;
sbit RDYEN0 = 0xFF0C ^ 12;
sbit RWDC1 = 0xFF14 ^ 4;
sbit MTTC1 = 0xFF14 ^ 5;
sbit ALECTL1 = 0xFF14 ^ 9;
sbit BUSACT1 = 0xFF14 ^ 10;
sbit RDYEN1 = 0xFF14 ^ 12;
sbit CSREN1 = 0xFF14 ^ 14;
sbit CSWEN1 = 0xFF14 ^ 15;
sbit RWDC2 = 0xFF16 ^ 4;
sbit MTTC2 = 0xFF16 ^ 5;
sbit ALECTL2 = 0xFF16 ^ 9;
sbit BUSACT2 = 0xFF16 ^ 10;
sbit RDYEN2 = 0xFF16 ^ 12;
sbit CSREN2 = 0xFF16 ^ 14;
sbit CSWEN2 = 0xFF16 ^ 15;
sbit RWDC3 = 0xFF18 ^ 4;
sbit MTTC3 = 0xFF18 ^ 5;
sbit ALECTL3 = 0xFF18 ^ 9;
sbit BUSACT3 = 0xFF18 ^ 10;
sbit RDYEN3 = 0xFF18 ^ 12;
sbit CSREN3 = 0xFF18 ^ 14;
sbit CSWEN3 = 0xFF18 ^ 15;
sbit RWDC4 = 0xFF1A ^ 4;
sbit MTTC4 = 0xFF1A ^ 5;
sbit ALECTL4 = 0xFF1A ^ 9;
sbit BUSACT4 = 0xFF1A ^ 10;
sbit RDYEN4 = 0xFF1A ^ 12;
sbit CSREN4 = 0xFF1A ^ 14;
sbit CSWEN4 = 0xFF1A ^ 15;
sbit ILLBUS = 0xFFAC ^ 0;
sbit ILLINA = 0xFFAC ^ 1;
sbit ILLOPA = 0xFFAC ^ 2;
sbit PRTFLT = 0xFFAC ^ 3;
sbit UNDOPC = 0xFFAC ^ 7;
sbit STKUF = 0xFFAC ^ 13;
sbit STKOF = 0xFFAC ^ 14;
sbit NMI = 0xFFAC ^ 15;

 sfr EXICON = 0xF1C0;
 sfr EXISEL = 0xF1DA;



 sfr PECC0 = 0xFEC0;
 sfr PECC1 = 0xFEC2;
 sfr PECC2 = 0xFEC4;
 sfr PECC3 = 0xFEC6;
 sfr PECC4 = 0xFEC8;
 sfr PECC5 = 0xFECA;
 sfr PECC6 = 0xFECC;
 sfr PECC7 = 0xFECE;
#line 356
 sfr DP0L = 0xF100;
 sfr DP0H = 0xF102;
 sfr DP1L = 0xF104;
 sfr DP1H = 0xF106;
 sfr DP2 = 0xFFC2;
 sfr DP3 = 0xFFC6;
 sfr DP4 = 0xFFCA;
 sfr DP6 = 0xFFCE;
 sfr DP7 = 0xFFD2;
 sfr DP8 = 0xFFD6;

 sfr P0L = 0xFF00;
 sfr P0H = 0xFF02;
 sfr P1L = 0xFF04;
 sfr P1H = 0xFF06;
 sfr P2 = 0xFFC0;
 sfr P3 = 0xFFC4;
 sfr P4 = 0xFFC8;
 sfr P5 = 0xFFA2;
 sfr P6 = 0xFFCC;
 sfr P7 = 0xFFD0;
 sfr P8 = 0xFFD4;
 sfr P5DIDIS = 0xFFA4;
 sfr ODP2 = 0xF1C2;
 sfr ODP3 = 0xF1C6;
 sfr ODP4 = 0xF1CA;
 sfr ODP6 = 0xF1CE;
 sfr ODP7 = 0xF1D2;
 sfr ODP8 = 0xF1D6;
 sfr RP0H = 0xF108;
 sfr PICON = 0xF1C4;



 sfr S0BG = 0xFEB4;
 sfr S0CON = 0xFFB0;
 sfr S0EIC = 0xFF70;
 sfr S0RBUF = 0xFEB2;
 sfr S0RIC = 0xFF6E;
 sfr S0TBUF = 0xFEB0;
 sfr S0TIC = 0xFF6C;
 sfr S0TBIC = 0xF19C;
sbit S0STP = 0xFFB0 ^ 3;
sbit S0REN = 0xFFB0 ^ 4;
sbit S0PEN = 0xFFB0 ^ 5;
sbit S0FEN = 0xFFB0 ^ 6;
sbit S0OEN = 0xFFB0 ^ 7;
sbit S0PE = 0xFFB0 ^ 8;
sbit S0FE = 0xFFB0 ^ 9;
sbit S0OE = 0xFFB0 ^ 10;
sbit S0ODD = 0xFFB0 ^ 12;
sbit S0BRS = 0xFFB0 ^ 13;
sbit S0LB = 0xFFB0 ^ 14;
sbit S0R = 0xFFB0 ^ 15;
sbit S0TIE = 0xFF6C ^ 6;
sbit S0TIR = 0xFF6C ^ 7;
sbit S0TBIE = 0xF19C ^ 6;
sbit S0TBIR = 0xF19C ^ 7;
sbit S0RIE = 0xFF6E ^ 6;
sbit S0RIR = 0xFF6E ^ 7;
sbit S0EIE = 0xFF70 ^ 6;
sbit S0EIR = 0xFF70 ^ 7;

 sfr SSCTIC = 0xFF72;
 sfr SSCRIC = 0xFF74;
 sfr SSCEIC = 0xFF76;
 sfr SSCTB = 0xF0B0;
 sfr SSCRB = 0xF0B2;
 sfr SSCBR = 0xF0B4;
 sfr SSCCON = 0xFFB2;
sbit SSCHB = 0xFFB2 ^ 4;
sbit SSCPH = 0xFFB2 ^ 5;
sbit SSCPO = 0xFFB2 ^ 6;
sbit SSCTE = 0xFFB2 ^ 8;
sbit SSCTEN = 0xFFB2 ^ 8;
sbit SSCRE = 0xFFB2 ^ 9;
sbit SSCREN = 0xFFB2 ^ 9;
sbit SSCPE = 0xFFB2 ^ 10;
sbit SSCPEN = 0xFFB2 ^ 10;
sbit SSCBE = 0xFFB2 ^ 11;
sbit SSCBEN = 0xFFB2 ^ 11;
sbit SSCBSY = 0xFFB2 ^ 12;
sbit SSCMS = 0xFFB2 ^ 14;
sbit SSCEN = 0xFFB2 ^ 15;
sbit SSCTIR = 0xFF72 ^ 7;
sbit SSCTIE = 0xFF72 ^ 6;
sbit SSCRIR = 0xFF74 ^ 7;
sbit SSCRIE = 0xFF74 ^ 6;
sbit SSCEIR = 0xFF76 ^ 7;
sbit SSCEIE = 0xFF76 ^ 6;


 sfr CAPREL = 0xFE4A;
 sfr CRIC = 0xFF6A;
 sfr T2 = 0xFE40;
 sfr T2CON = 0xFF40;
 sfr T2IC = 0xFF60;
 sfr T3 = 0xFE42;
 sfr T3CON = 0xFF42;
 sfr T3IC = 0xFF62;
 sfr T4 = 0xFE44;
 sfr T4CON = 0xFF44;
 sfr T4IC = 0xFF64;
 sfr T5 = 0xFE46;
 sfr T5CON = 0xFF46;
 sfr T5IC = 0xFF66;
 sfr T6 = 0xFE48;
 sfr T6CON = 0xFF48;
 sfr T6IC = 0xFF68;
 sfr WDT = 0xFEAE;
 sfr WDTCON = 0xFFAE;
sbit CRIE = 0xFF6A ^ 6;
sbit CRIR = 0xFF6A ^ 7;
sbit T2R = 0xFF40 ^ 6;
sbit T2UD = 0xFF40 ^ 7;
sbit T2UDE = 0xFF40 ^ 8;
sbit T2IE = 0xFF60 ^ 6;
sbit T2IR = 0xFF60 ^ 7;
sbit T3R = 0xFF42 ^ 6;
sbit T3UD = 0xFF42 ^ 7;
sbit T3UDE = 0xFF42 ^ 8;
sbit T3OE = 0xFF42 ^ 9;
sbit T3OTL = 0xFF42 ^ 10;
sbit T3IE = 0xFF62 ^ 6;
sbit T3IR = 0xFF62 ^ 7;
sbit T4R = 0xFF44 ^ 6;
sbit T4UD = 0xFF44 ^ 7;
sbit T4UDE = 0xFF44 ^ 8;
sbit T4IE = 0xFF64 ^ 6;
sbit T4IR = 0xFF64 ^ 7;
sbit T5R = 0xFF46 ^ 6;
sbit T5UD = 0xFF46 ^ 7;
sbit T5UDE = 0xFF46 ^ 8;
sbit T5CLR = 0xFF46 ^ 14;
sbit T5SC = 0xFF46 ^ 15;
sbit T5IE = 0xFF66 ^ 6;
sbit T5IR = 0xFF66 ^ 7;
sbit T6R = 0xFF48 ^ 6;
sbit T6UD = 0xFF48 ^ 7;
sbit T6UDE = 0xFF48 ^ 8;
sbit T6OE = 0xFF48 ^ 9;
sbit T6OTL = 0xFF48 ^ 10;
sbit T6SR = 0xFF48 ^ 15;
sbit T6IE = 0xFF68 ^ 6;
sbit T6IR = 0xFF68 ^ 7;
sbit T0IN = 0xFFC4 ^ 0;
sbit T2IN = 0xFFC4 ^ 7;
sbit T3IN = 0xFFC4 ^ 6;
sbit T4IN = 0xFFC4 ^ 5;
sbit T5IN = 0xFFA2 ^ 13;
sbit T6IN = 0xFFA2 ^ 12;
sbit T2EUD = 0xFFA2 ^ 15;
sbit T3EUD = 0xFFC4 ^ 4;
sbit T4EUD = 0xFFA2 ^ 14;
sbit T5EUD = 0xFFA2 ^ 11;
sbit T6EUD = 0xFFA2 ^ 10;
sbit T3OUT = 0xFFC4 ^ 3;
sbit CAPIN = 0xFFC4 ^ 2;
sbit T6OUT = 0xFFC4 ^ 1;
sbit WDTIN = 0xFFAE ^ 0;
sbit WDTR = 0xFFAE ^ 1;
sbit SWR = 0xFFAE ^ 2;
sbit SHWR = 0xFFAE ^ 3;
sbit LHWR = 0xFFAE ^ 4;
sbit PONR = 0xFFAE ^ 5;
sbit WDTPRE = 0xFFAE ^ 7;


 sfr PWMCON0 = 0xFF30;
 sfr PWMCON1 = 0xFF32;
 sfr PW0 = 0xFE30;
 sfr PW1 = 0xFE32;
 sfr PW2 = 0xFE34;
 sfr PW3 = 0xFE36;
 sfr PWMIC = 0xF17E;
 sfr PT0 = 0xF030;
 sfr PT1 = 0xF032;
 sfr PT2 = 0xF034;
 sfr PT3 = 0xF036;
 sfr PP0 = 0xF038;
 sfr PP1 = 0xF03A;
 sfr PP2 = 0xF03C;
 sfr PP3 = 0xF03E;
sbit PTR0 = 0xFF30 ^ 0;
sbit PTR1 = 0xFF30 ^ 1;
sbit PTR2 = 0xFF30 ^ 2;
sbit PTR3 = 0xFF30 ^ 3;
sbit PTI0 = 0xFF30 ^ 4;
sbit PTI1 = 0xFF30 ^ 5;
sbit PTI2 = 0xFF30 ^ 6;
sbit PTI3 = 0xFF30 ^ 7;
sbit PIE0 = 0xFF30 ^ 8;
sbit PIE1 = 0xFF30 ^ 9;
sbit PIE2 = 0xFF30 ^ 10;
sbit PIE3 = 0xFF30 ^ 11;
sbit PIR0 = 0xFF30 ^ 12;
sbit PIR1 = 0xFF30 ^ 13;
sbit PIR2 = 0xFF30 ^ 14;
sbit PIR3 = 0xFF30 ^ 15;
sbit PEN0 = 0xFF32 ^ 0;
sbit PEN1 = 0xFF32 ^ 1;
sbit PEN2 = 0xFF32 ^ 2;
sbit PEN3 = 0xFF32 ^ 3;
sbit PM0 = 0xFF32 ^ 4;
sbit PM1 = 0xFF32 ^ 5;
sbit PM2 = 0xFF32 ^ 6;
sbit PM3 = 0xFF32 ^ 7;
sbit PB01 = 0xFF32 ^ 12;
sbit PS2 = 0xFF32 ^ 14;
sbit PS3 = 0xFF32 ^ 15;
sbit PWMIR = 0xF17E ^ 7;
sbit PWMIE = 0xF17E ^ 6;


 sfr IDCHIP = 0xF07C;
 sfr IDMANUF = 0xF07E;
 sfr IDMEM = 0xF07A;
 sfr IDPROG = 0xF078;


 sfr IDX0 = 0xFF08;
 sfr IDX1 = 0xFF0A;
 sfr MAH = 0xFE5E;
 sfr MAL = 0xFE5C;
 sfr MCW = 0xFFDC;
 sfr MRW = 0xFFDA;
 sfr MSW = 0xFFDE;
 sfr QR0 = 0xF004;
 sfr QR1 = 0xF006;
 sfr QX0 = 0xF000;
 sfr QX1 = 0xF002;

sbit MS = 0xFFDC ^ 9;
sbit MP = 0xFFDC ^ 10;
sbit CW = 0xFFDC ^ 11;
sbit VM = 0xFFDC ^ 12;
sbit EM = 0xFFDC ^ 13;
sbit LM = 0xFFDC ^ 14;
sbit MIE = 0xFFDC ^ 15;

sbit MIR = 0xFFDE ^ 15;
sbit MSL = 0xFFDE ^ 13;
sbit ME = 0xFFDE ^ 12;
sbit MSV = 0xFFDE ^ 11;
sbit MC = 0xFFDE ^ 10;
sbit MZ = 0xFFDE ^ 9;
sbit MN = 0xFFDE ^ 8;




 sfr XP0IC = 0xF186;
 sfr XP1IC = 0xF18E;
 sfr XP2IC = 0xF196;
 sfr XP3IC = 0xF19E;
sbit XP0IR = 0xF186 ^ 7;
sbit XP0IE = 0xF186 ^ 6;
sbit XP1IR = 0xF18E ^ 7;
sbit XP1IE = 0xF18E ^ 6;
sbit XP2IR = 0xF196 ^ 7;
sbit XP2IE = 0xF196 ^ 6;
sbit XP3IR = 0xF19E ^ 7;
sbit XP3IE = 0xF19E ^ 6;



 sfr EMUCON = 0xFE0A;
#line 53 "..\\..\\SRC\\GENERAL\\io_declare.h"
 sfr BLOWER_CMD = 0xFE30;
sbit CONS_VIT = 0xFFD0 ^ 0;
sbit DEF_TURB = 0xFFC0 ^ 2;
sbit ENABLE_TURB = 0xFFC0 ^ 3;
sbit BRAKE_BLOWER = 0xFFC0 ^ 1;
sbit SPEED_BLOWER_PIN = 0xFFC0 ^ 0;




 sfr VALVE_CMD = 0xFE32;
sbit CD_VALVE = 0xFFD0 ^ 1;




 sfr VANNE_O2_CMD = 0xFE34;
sbit CD_VANNE_FIO2 = 0xFFD0 ^ 2;




 sfr PWM_BUZ = 0xFE36;
 sfr FREQ_BUZ = 0xF03E;




sbit ALIM_FAILURE_3_3V = 0xFFC0 ^ 5;
sbit ALIM_FAILURE_5VREF = 0xFFC0 ^ 6;
sbit ALIM_FAILURE_10VREF = 0xFFC0 ^ 7;




sbit USB_BUSY = 0xFFC0 ^ 10;
sbit RESET_USB = 0xFFC4 ^ 5;




sbit ALARM_REMOTE_STATE = 0xFFC0 ^ 12;
sbit RAPPEL_ALARM = 0xFFC0 ^ 14;




sbit WDOG = 0xFFC0 ^ 4;




sbit ARRET_INVOLONTAIRE = 0xFFC0 ^ 13;




sbit BUSY_MEM1 = 0xFFC0 ^ 8;
sbit BUSY_MEM2 = 0xFFC0 ^ 9;
sbit CMD_ME1 = 0xFFC0 ^ 15;
sbit ALE_ME1 = 0xFFC4 ^ 15;




sbit BHE = 0xFFC4 ^ 12;




sbit RF = 0xFFC4 ^ 7;
sbit IRQ_UART = 0xFFD4 ^ 5;




sbit TX_UART_ST = 0xFFC4 ^ 10;
sbit RX_UART_ST = 0xFFC4 ^ 11;
#line 136
sbit MRST_SPI_ALIM = 0xFFCC ^ 7;
sbit MTSR_SPI_ALIM = 0xFFCC ^ 6;
sbit CLK_SPI_ALIM = 0xFFCC ^ 5;

sbit MRST_SPI_CPU = 0xFFC4 ^ 8;
sbit MTSR_SPI_CPU = 0xFFC4 ^ 9;
sbit SCLK_SPI_CPU = 0xFFC4 ^ 13;
#line 155
sbit JUMPER_JP8 = 0xFFD4 ^ 2;
sbit JUMPER_JP7 = 0xFFD4 ^ 3;




sbit SEC_BUZ = 0xFFD0 ^ 5;




sbit MASTERBUSY = 0xFFC0 ^ 11;
#line 172
sbit INHIB_DETECTED = 0xFFC4 ^ 6;
#line 182
sbit LED_ALARME_ROUGE = 0xFFD0 ^ 7;
sbit LED_ALARME_ORANGE = 0xFFD0 ^ 6;

sbit AC_SELECT = 0xFFD4 ^ 0;
sbit DC_SELECT = 0xFFD4 ^ 1;
#line 437 "..\\..\\SRC\\HMI\\HMI_ControllerInit.cpp"
void Reset__10ControllerFv( struct Controller *const this)
{ auto struct __T51439500 *__T51509560;
auto UWORD16 Val;

(this->CurrentFrame) = 0U;
(this->CurrentVirtualFrame) = 0U;
(this->CurrentNode) = (GetNodeAt__10ControllerFUi(this, 220U));


SetBrightness__10ControllerFUi(this, (GetBrightness__10ControllerFv(this)));


ReadValue__14DataBaseAccessSFPUiUi19e_TYPE_OF_DB_TARGET((&Val), 1U, CONFIG);
switch (Val) {

default:
(this->CurrentMode) = VOL;
break;
case 2U: (this->CurrentMode) = PSVT;
break;
case 1U: (this->CurrentMode) = PRES;
break;
case 3U: (this->CurrentMode) = VSIMV;
break;
case 4U: (this->CurrentMode) = PSIMV;
break;
case 5U: (this->CurrentMode) = CPAP;
break;}

(this->ConsultMode) = ((this->CurrentMode));


SetModeChange__10ControllerFi(this, 0);


ReadValue__14DataBaseAccessSFPUiUi19e_TYPE_OF_DB_TARGET((&Val), 76U, CONFIG);
SetMCycl__10ControllerFi(this, ((e_BOOL)Val));


ReadValue__14DataBaseAccessSFPUiUi19e_TYPE_OF_DB_TARGET((&Val), 91U, CONFIG);
SetTrigEPosSelected__10ControllerFi(this, ((e_BOOL)Val));


ReadValue__14DataBaseAccessSFPUiUi19e_TYPE_OF_DB_TARGET((&Val), 24U, CONTROL);
SendInfoValve__10ControllerFi(this, ((e_BOOL)Val));


ReadValue__14DataBaseAccessSFPUiUi19e_TYPE_OF_DB_TARGET((&Val), 100U, CONFIG);
SetPressConvention__10ControllerFi(this, ((e_BOOL)Val));


UsbUpdateNavigNodes__10ControllerFUi(this, 0U);


ReadValue__14DataBaseAccessSFPUiUi19e_TYPE_OF_DB_TARGET((&Val), 90U, CONFIG);
SetPressureUnit__10ControllerFUi(this, Val);


ReadValue__14DataBaseAccessSFPUiUi19e_TYPE_OF_DB_TARGET((&Val), 92U, CONFIG);
SetInhibApneaOk__10ControllerFi(this, ((e_BOOL)(!(Val == 1U))));


ReadValue__14DataBaseAccessSFPUiUi19e_TYPE_OF_DB_TARGET((&Val), 2U, CONFIG);
ManageLock__10ControllerFi(this, ((e_BOOL)Val));


(this->CurrentLoupe) = ((struct Loupe *)0);


(this->CurrentFrame) = 4U;
(this->CurrentVirtualFrame) = 2U;


SetModifNodeOn__10ControllerFi(this, 0);


Reset__12ParameterSpyFv((&this->PSpy));


StartTimer__6VTimerFUlUii((&this->Timer), 300UL, 13U, 1);


(__T51509560 = ((((*((struct MenuObject *)((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))))).__vptr)) + 16)) , (((void (*)(struct FrameVentilation *const))((__T51509560->f)))(((struct FrameVentilation *)(((char *)(&this->FVentilation)) + ((__T51509560->d))))));
(__T51509560 = ((((*((struct MenuObject *)((struct DisplayObject *)((struct VFrame *)(&this->FAlarme))))).__vptr)) + 16)) , (((void (*)(struct FrameAlarme *const))((__T51509560->f)))(((struct FrameAlarme *)(((char *)(&this->FAlarme)) + ((__T51509560->d))))));



(__T51509560 = ((((*((struct MenuObject *)((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))))).__vptr)) + 38)) , (((void (*)(struct VFrame *const, e_BOOL))((__T51509560->f)))(((struct VFrame *)(((char *)((struct VFrame *)(&this->FVentilation))) + ((__T51509560->d)))), 1));
(__T51509560 = ((((*((struct MenuObject *)((struct DisplayObject *)((struct VFrame *)(&this->FAlarme))))).__vptr)) + 38)) , (((void (*)(struct VFrame *const, e_BOOL))((__T51509560->f)))(((struct VFrame *)(((char *)((struct VFrame *)(&this->FAlarme))) + ((__T51509560->d)))), 1));
(__T51509560 = ((((*((struct MenuObject *)((struct DisplayObject *)((struct VFrame *)(&this->FGraph))))).__vptr)) + 38)) , (((void (*)(struct VFrame *const, e_BOOL))((__T51509560->f)))(((struct VFrame *)(((char *)((struct VFrame *)(&this->FGraph))) + ((__T51509560->d)))), 1));
SetImpactDisplay__10ControllerFi(this, 1);


SetCurrentMode__10ControllerF12e_MODE_TYPES(this, (GetCurrentMode__10ControllerFv(this)));


SetVisible__15MenuControlNodeFi((GetNodeAt__10ControllerFUi(this, 46U)), 1);



StartTimer__6VTimerFUlUii((&this->Timer), 800UL, 10U, 1);
StartTimer__6VTimerFUlUii((&this->Timer), 1500UL, 11U, 1);
StartTimer__6VTimerFUlUii((&this->Timer), 400UL, 2U, 1);
StartTimer__6VTimerFUlUii((&this->Timer), 160UL, 7U, 1);


ReadValue__14DataBaseAccessSFPUiUi19e_TYPE_OF_DB_TARGET((&Val), 37U, ADJUST);
SetPSupportNull__10ControllerFi(this, ((e_BOOL)Val));


(__T51509560 = ((((*((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTICalibQExp))))))).__vptr)) + 17)) , (((void (*)(struct LabelValueString *const))((__T51509560->f)))(((struct LabelValueString *)(((char *)((struct 
#line 547
LabelValueString *)(&this->LSTICalibQExp))) + ((__T51509560->d))))));
(__T51509560 = ((((*((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTICalibFiO2))))))).__vptr)) + 17)) , (((void (*)(struct LabelValueString *const))((__T51509560->f)))(((struct LabelValueString *)(((char *)((struct 
#line 548
LabelValueString *)(&this->LSTICalibFiO2))) + ((__T51509560->d)))))); return;
}
#line 78
void Init__10ControllerFv( struct Controller *const this)
{
auto UWORD16 Val; auto UWORD16 NodeId;

(this->ArrayNode) = Controller_ArrayNode;


ReadValue__14DataBaseAccessSFPUiUi19e_TYPE_OF_DB_TARGET((&Val), 0U, CONFIG);
SetLanguage__10ControllerFUi(this, Val);


InitGloblaEventNode__Fv();



SetPage__13DisplayObjectFUi(((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))), 1U);
init__16FrameVentilationFv((&this->FVentilation));

SetPage__13DisplayObjectFUi(((struct DisplayObject *)((struct VFrame *)(&this->FAlarme))), 2U);
init__11FrameAlarmeFv((&this->FAlarme));

SetPage__13DisplayObjectFUi(((struct DisplayObject *)((struct VFrame *)(&this->FHistoAlarme))), 3U);
init__16FrameHistoAlarmeFv((&this->FHistoAlarme));

SetPage__13DisplayObjectFUi(((struct DisplayObject *)((struct VFrame *)(&this->FConfiguration))), 3U);
init__18FrameConfigurationFv((&this->FConfiguration));

Init__10HMI_Setup1Fv((GetInstance__10HMI_Setup1SFv()));

SetPage__13DisplayObjectFUi(((struct DisplayObject *)((struct VFrame *)(&this->FPreference))), 3U);
init__15FramePreferenceFv((&this->FPreference));

SetPage__13DisplayObjectFUi(((struct DisplayObject *)((struct VFrame *)(&this->FMaintenance))), 3U);
init__16FrameMaintenanceFv((&this->FMaintenance));

SetPage__13DisplayObjectFUi(((struct DisplayObject *)((struct VFrame *)(&this->FHistoAno))), 3U);
init__13FrameHistoAnoFv((&this->FHistoAno));

SetPage__13DisplayObjectFUi(((struct DisplayObject *)((struct VFrame *)(&this->FVoltControl))), 3U);
init__16FrameVoltControlFv((&this->FVoltControl));

SetPage__13DisplayObjectFUi(((struct DisplayObject *)((struct VFrame *)(&this->FWelcome))), 3U);
init__12FrameWelcomeFv((&this->FWelcome));

SetPage__13DisplayObjectFUi(((struct DisplayObject *)((struct VFrame *)(&this->FGraph))), 3U);
init__10FrameGraphFv((&this->FGraph));

SetPage__13DisplayObjectFUi(((struct DisplayObject *)((struct VFrame *)(&this->FGraphConfig))), 3U);
init__16FrameGraphConfigFv((&this->FGraphConfig));

SetPage__13DisplayObjectFUi(((struct DisplayObject *)((struct VFrame *)(&this->FBatteryMenu))), 3U);
init__16FrameBatteryMenuFv((&this->FBatteryMenu));

SetPage__13DisplayObjectFUi(((struct DisplayObject *)((struct VFrame *)(&this->FUsb))), 3U);
init__8FrameUSBFv((&this->FUsb));

Init__14MessageDelayedFP6VTimerP13MessageDialogUi((&this->UsbDelayed), (&this->Timer), (GetMessageDialog__8FrameUSBFv((&this->FUsb))), 22U);

SetPage__13DisplayObjectFUi(((struct DisplayObject *)((struct VFrame *)(&this->FTendance))), 3U);
init__13FrameTendanceFv((&this->FTendance));

SetPage__13DisplayObjectFUi(((struct DisplayObject *)((struct VFrame *)((this->FCircuitCheck)))), 3U);
init__17FrameCircuitCheckFv(((this->FCircuitCheck)));


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->TopMessage)), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

SetWhithBox__13MessageDialogFUi((&this->TopMessage), 123U);
InitGraphicBox__13MessageDialogFUiN31iN25((&this->TopMessage), 40U, 195U, 35U, 123U, 0, 0, 1);
#line 153
SetLineLine1__13MessageDialogFUi((&this->TopMessage), 14U);
SetLineLine2__13MessageDialogFUi((&this->TopMessage), 29U);
SetLineLine3__13MessageDialogFUi((&this->TopMessage), 44U);
#line 161
SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->BottomMessage)), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

SetWhithBox__13MessageDialogFUi((&this->BottomMessage), 123U);
InitGraphicBox__13MessageDialogFUiN31iN25((&this->BottomMessage), 40U, 195U, 50U, 123U, 0, 0, 1);
#line 171
SetLineLine1__13MessageDialogFUi((&this->BottomMessage), 100U);
SetLineLine2__13MessageDialogFUi((&this->BottomMessage), 115U);
SetLineLine3__13MessageDialogFUi((&this->BottomMessage), 130U);



InitConfiguration__10ControllerFv(this);
BuildTree__10ControllerFv(this);



RebuildEventNodeTreeForAllModes__10ControllerFUiT1(this, 138U, 183U);


NodeId = (GetIdNodeOnDown__9EventNodeCFv(((const struct EventNode *)(GetEventNode__15MenuControlNodeFv((GetNodeAt__10ControllerFUi(this, 138U)))))));

SetIdNodeOnValid__9EventNodeFUi((GetEventNode__15MenuControlNodeFv((GetNodeAt__10ControllerFUi(this, 137U)))), NodeId);
SetIdNodeOnUp__9EventNodeFUi((GetEventNode__15MenuControlNodeFv((GetNodeAt__10ControllerFUi(this, NodeId)))), 137U);
SetIdNodeOnUp__9EventNodeFUi((GetEventNode__15MenuControlNodeFv((GetNodeAt__10ControllerFUi(this, 138U)))), 137U);


NodeId = (GetIdNodeOnUp__9EventNodeCFv(((const struct EventNode *)(GetEventNode__15MenuControlNodeFv((GetNodeAt__10ControllerFUi(this, 183U)))))));
SetIdNodeOnDown__9EventNodeFUi((GetEventNode__15MenuControlNodeFv((GetNodeAt__10ControllerFUi(this, NodeId)))), 184U);
SetIdNodeOnDown__9EventNodeFUi((GetEventNode__15MenuControlNodeFv((GetNodeAt__10ControllerFUi(this, 183U)))), 184U);




(((struct DisplayObject **)(&this->RefreshTableAlarm))[0]) = ((struct DisplayObject *)0);


(((struct DisplayObject **)(&this->RefreshTableAlarm))[1]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVteMl)))))));
(((struct DisplayObject **)(&this->RefreshTableAlarm))[2]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LTOVFuiteLMin))))));
(((struct DisplayObject **)(&this->RefreshTableAlarm))[3]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LOVFrCMin))))));
(((struct DisplayObject **)(&this->RefreshTableAlarm))[4]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVTiS)))))));
(((struct DisplayObject **)(&this->RefreshTableAlarm))[5]) = ((struct DisplayObject *)0);


(((struct DisplayObject **)(&this->RefreshTableAlarm))[6]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVtiMl)))))));
(((struct DisplayObject **)(&this->RefreshTableAlarm))[7]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)(&this->LOVPiMbar))))));
(((struct DisplayObject **)(&this->RefreshTableAlarm))[8]) = ((struct DisplayObject *)0);


(((struct DisplayObject **)(&this->RefreshTableAlarm))[9]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVSpO2)))))));
(((struct DisplayObject **)(&this->RefreshTableAlarm))[10]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVFiO2)))))));
(((struct DisplayObject **)(&this->RefreshTableAlarm))[11]) = ((struct DisplayObject *)0);



(((struct DisplayObject **)(&this->RefreshTableMaintenance))[0]) = ((struct DisplayObject *)0);


(((struct DisplayObject **)(&this->RefreshTableMaintenance))[1]) = ((struct DisplayObject *)0);


(((struct DisplayObject **)(&this->RefreshTableMaintenance))[2]) = ((struct DisplayObject *)0);


(((struct DisplayObject **)(&this->RefreshTableMaintenance))[3]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)((struct ManualCalibValue *)(&this->LOVPatientPressure)))))));
(((struct DisplayObject **)(&this->RefreshTableMaintenance))[4]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVValvePressure)))));
(((struct DisplayObject **)(&this->RefreshTableMaintenance))[5]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns))))));
(((struct DisplayObject **)(&this->RefreshTableMaintenance))[6]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVFlowExp)))));
(((struct DisplayObject **)(&this->RefreshTableMaintenance))[7]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2))))));
(((struct DisplayObject **)(&this->RefreshTableMaintenance))[8]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVPressO2))))));
(((struct DisplayObject **)(&this->RefreshTableMaintenance))[9]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVPwmBlower)))));
(((struct DisplayObject **)(&this->RefreshTableMaintenance))[10]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFiO2Concent))))));
(((struct DisplayObject **)(&this->RefreshTableMaintenance))[11]) = ((struct DisplayObject *)0);




(((struct DisplayObject **)(&this->RefreshTableConfig))[0]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->VTConf))));
(((struct DisplayObject **)(&this->RefreshTableConfig))[1]) = ((struct DisplayObject *)0);


(((struct DisplayObject **)(&this->RefreshTableConfig))[2]) = ((struct DisplayObject *)0);


(((struct DisplayObject **)(&this->RefreshTableConfig))[3]) = ((struct DisplayObject *)0);


(((struct DisplayObject **)(&this->RefreshTableConfig))[4]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->VDConf))));
(((struct DisplayObject **)(&this->RefreshTableConfig))[5]) = ((struct DisplayObject *)0);




(((struct DisplayObject **)(&this->RefreshTableVolt))[0]) = ((struct DisplayObject *)0);


(((struct DisplayObject **)(&this->RefreshTableVolt))[1]) = ((struct DisplayObject *)0);


(((struct DisplayObject **)(&this->RefreshTableVolt))[2]) = ((struct DisplayObject *)0);


(((struct DisplayObject **)(&this->RefreshTableVolt))[3]) = ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVBuzzerVoltage))));
(((struct DisplayObject **)(&this->RefreshTableVolt))[4]) = ((struct DisplayObject *)0);
#line 274
AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 3U, CONTROL, 253U, ProgInspTrigEvent);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 3U, CONTROL, 252U, ProgInspControlEvent);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 3U, CONTROL, 251U, ProgExhEvent);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 18U, CONTROL, 0U, ProgHideBatEvent);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 18U, CONTROL, 1U, ProgShowBatEvent);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 3U, CONFIG, 1U, ProgStartVentilOk);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 3U, CONFIG, 0U, ProgStartVentilKo);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 10U, CONTROL, 1U, ProgInibAlarmOK);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 10U, CONTROL, 0U, ProgInibAlarmNOK);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 12U, CONTROL, 1U, ProgCancelAlarmOK);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 12U, CONTROL, 0U, ProgCancelAlarmNOK);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 71U, CONTROL, 0U, ProgRemoveHighPressureAlarm);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 24U, CONTROL, 0U, ProgValveMissing);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 24U, CONTROL, 1U, ProgValveDetected);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 93U, CONTROL, 0U, ProgBlocExpiMissing);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 93U, CONTROL, 1U, ProgBlocExpiDetected);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 77U, CONTROL, 1U, ProgFio2SensorOK);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 77U, CONTROL, 0U, ProgFio2SensorNOK);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 76U, CONTROL, 0U, ProgSpo2SensorNoError);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 76U, CONTROL, 1U, ProgSpo2SensorError);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 10U, ALARMS, 0U, ProgCheckSupplyNoError);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 10U, ALARMS, 2U, ProgCheckSupplyError);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 12U, USB, 1U, ProgUsbErrorCodeReady);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 25U, USB, 1U, ProgUsbNewModeDetected);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 91U, CONTROL, 1U, ProgStartMonitoring);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 59U, CONTROL, 1U, ProgSupplyBusFailure);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 59U, CONTROL, 0U, ProgSupplyBusOK);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 96U, CONTROL, 1U, ProgExhalFlowUsed);




AddElement__12ParameterSpyFUi19e_TYPE_OF_DB_TARGETT17EventId((&this->PSpy), 96U, CONTROL, 0U, ProgExhalFlowUnused);
#line 420
Reset__10ControllerFv(this);

SetEndOfInit__10ControllerFi(this, 1); return;
}
#line 563
void InitConfiguration__10ControllerFv( struct Controller *const this)
{ auto struct __T51439500 *__T51869784;
auto UWORD16 LowLimit;
auto UWORD16 HighLimit;

auto UWORD16 _line;
auto UWORD16 _col;
auto UWORD16 _spacing;
auto UWORD16 _colsep = 79U;
auto UWORD16 _colvalue = 83U;
auto UWORD16 Val; auto UWORD16 i;

auto UWORD16 _CurrentLang;
ReadValue__14DataBaseAccessSFPUiUi19e_TYPE_OF_DB_TARGET((&_CurrentLang), 0U, CONFIG);



SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)(&this->LModeVent))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)(&this->LModeVent)))), 1U, CONFIG);

Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)(&this->LModeVent)), FREE_SQUARE, ((UBYTE **)0), 18U, 4U);




SetNameMode__9LabelModeFPPUcN41((&this->LModeVent), ((UBYTE **)cMSG_Mode), ((UBYTE **)cMSG_Mode2), ((UBYTE **)cMSG_Mode3), ((UBYTE **)cMSG_EnableMode), ((UBYTE **)cMSG_DisableMode));
#line 595
SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVVT)))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVVT))))), 0U, ADJUST);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2((&this->LOVVT), FREE_SQUARE, ((UBYTE **)cMSG_CurrantVolume), 360U, 4U, 1000U, ((UBYTE **)cMSG_VolumeUnit));
#line 606
SetColSep__13LabelOneValueFUi((&this->LOVVT), _colsep);

SetColValue1__13LabelOneValueFUi((&this->LOVVT), _colvalue);



SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPi)))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPi))))), 1U, ADJUST);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2((&this->LOVPi), FREE_SQUARE, ((UBYTE **)cMSG_InsuflationPressureControl), 50U, 4U, 14U, ((UBYTE **)cMSG_PressureUnit));
#line 622
SetColSep__13LabelOneValueFUi((&this->LOVPi), _colsep);

SetColValue1__13LabelOneValueFUi((&this->LOVPi), _colvalue);

SetDivider__13LabelOneValueFUi((&this->LOVPi), 10U);



SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPSupport)))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPSupport))))), 3U, ADJUST);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2((&this->LOVPSupport), FREE_SQUARE, ((UBYTE **)cMSG_InsuflationPressureSupport), 50U, 4U, 14U, ((UBYTE **)cMSG_PressureUnit));
#line 640
SetColSep__13LabelOneValueFUi((&this->LOVPSupport), _colsep);

SetColValue1__13LabelOneValueFUi((&this->LOVPSupport), _colvalue);

SetDivider__13LabelOneValueFUi((&this->LOVPSupport), 10U);



SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPControl)))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPControl))))), 1U, ADJUST);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2((&this->LOVPControl), FREE_SQUARE, ((UBYTE **)cMSG_InsuflationPressureControl2), 50U, 4U, 14U, ((UBYTE **)cMSG_PressureUnit));
#line 658
SetColSep__13LabelOneValueFUi((&this->LOVPControl), _colsep);

SetColValue1__13LabelOneValueFUi((&this->LOVPControl), _colvalue);

SetDivider__13LabelOneValueFUi((&this->LOVPControl), 10U);


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPi2)))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPi2))))), 3U, ADJUST);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2((&this->LOVPi2), FREE_SQUARE, ((UBYTE **)cMSG_InsuflationPressureSupport), 50U, 4U, 14U, ((UBYTE **)cMSG_PressureUnit));
#line 675
SetColSep__13LabelOneValueFUi((&this->LOVPi2), _colsep);

SetColValue1__13LabelOneValueFUi((&this->LOVPi2), _colvalue);

SetDivider__13LabelOneValueFUi((&this->LOVPi2), 10U);


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVFVaci)))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVFVaci))))), 5U, ADJUST);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2((&this->LOVFVaci), FREE_SQUARE, ((UBYTE **)cMSG_ControlRate), 360U, 4U, 10U, ((UBYTE **)cMSG_FrequencyUnit));
#line 693
SetColSep__13LabelOneValueFUi((&this->LOVFVaci), _colsep);

SetColValue1__13LabelOneValueFUi((&this->LOVFVaci), _colvalue);




SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LIE)), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LIE), NO, ((UBYTE **)cMSG_IERation), 0U, 0U);
#line 708
SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVPe)))))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVPe))))))), 2U, ADJUST);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVPe))), FREE_SQUARE, ((UBYTE **)cMSG_ExhalationPressure), 70U, 4U, 6U, ((UBYTE **)cMSG_PressureUnit));
#line 719
InitDefaultFlag__17LabelOneValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETi((&this->LOVPe), ((UBYTE **)cMSG_No), 39U, ADJUST, 1);




SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVPe))), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVPe))), _colvalue);

SetDivider__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVPe))), 10U);



SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelSymbol *)(&this->LOVPente))))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelSymbol *)(&this->LOVPente)))))), 22U, ADJUST);

Init__11LabelSymbolF8e_SYMBOLPPUcUiT3T1(((struct LabelSymbol *)(&this->LOVPente)), FREE_SQUARE, ((UBYTE **)cMSG_PressureSlope), 90U, 4U, RISETIME1);
#line 742
if (_CurrentLang == 0U)
{

SetColSep__11LabelSymbolFUi(((struct LabelSymbol *)(&this->LOVPente)), (_colsep + 9U));

SetColSymbol__11LabelSymbolFUi(((struct LabelSymbol *)(&this->LOVPente)), (_colvalue + 9U));
}

else  {

SetColSep__11LabelSymbolFUi(((struct LabelSymbol *)(&this->LOVPente)), _colsep);

SetColSymbol__11LabelSymbolFUi(((struct LabelSymbol *)(&this->LOVPente)), _colvalue);
}


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelSymbol *)(&this->LOVRampe))))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelSymbol *)(&this->LOVRampe)))))), 4U, ADJUST);

Init__11LabelSymbolF8e_SYMBOLPPUcUiT3T1(((struct LabelSymbol *)(&this->LOVRampe)), FREE_SQUARE, ((UBYTE **)cMSG_Rampe), 360U, 4U, RAMPE1);
#line 768
SetColSep__11LabelSymbolFUi(((struct LabelSymbol *)(&this->LOVRampe)), _colsep);

SetColSymbol__11LabelSymbolFUi(((struct LabelSymbol *)(&this->LOVRampe)), _colvalue);


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVFRMini)))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVFRMini))))), 5U, ADJUST);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2((&this->LOVFRMini), FREE_SQUARE, ((UBYTE **)cMSG_ControlRate), 110U, 4U, 10U, ((UBYTE **)cMSG_FrequencyUnit));
#line 784
if (_CurrentLang == 0U)
{
SetColSep__13LabelOneValueFUi((&this->LOVFRMini), (_colsep + 11U));

SetColValue1__13LabelOneValueFUi((&this->LOVFRMini), (_colvalue + 11U));
}

else  {
SetColSep__13LabelOneValueFUi((&this->LOVFRMini), _colsep);

SetColValue1__13LabelOneValueFUi((&this->LOVFRMini), _colvalue);
}


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVIT)))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2((&this->LOVIT), FREE_SQUARE, ((UBYTE **)cMSG_ITRation), 0U, 0U, 0U, ((UBYTE **)cMSG_PerCentUnit));
#line 808
SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVInspTime)))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVInspTime))))), 9U, ADJUST);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2((&this->LOVInspTime), FREE_SQUARE, ((UBYTE **)cMSG_TiControl), 130U, 4U, 25U, ((UBYTE **)cMSG_SecondUnit));
#line 818
SetDivider__13LabelOneValueFUi((&this->LOVInspTime), 100U);

SetFloatValue1__13LabelOneValueFi((&this->LOVInspTime), 1);

SetColSep__13LabelOneValueFUi((&this->LOVInspTime), _colsep);

SetColValue1__13LabelOneValueFUi((&this->LOVInspTime), _colvalue);


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LOVTrigI))))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LOVTrigI)))))), 10U, ADJUST);


Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LOVTrigI)))), FREE_SQUARE, ((UBYTE **)cMSG_InspirationTrigger), 150U, 4U);
#line 838
SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LOVTrigI)), _colsep);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LOVTrigI)), _colvalue);

SetSize__17LabelStringNItemsFUi((&this->LOVTrigI), 7U);


for (i = 0U; (i < 7U); i++)
{
SetItem__17LabelStringNItemsFUiPPUc((&this->LOVTrigI), i, ((UBYTE **)(((const UBYTE *const huge *)(cMSG_InspTrigger + i)) + 0)));
}



SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTVSoupir))))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LSTVSoupir)), 83U);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LSTVSoupir)), 88U);

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTVSoupir)))))), 51U, ADJUST);


Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTVSoupir)))), FREE_SQUARE, ((UBYTE **)cMSG_Soupir), 360U, 4U);




SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LSTVSoupir), ((UBYTE **)cMSG_No));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LSTVSoupir), ((UBYTE **)cMSG_Yes));

SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LSTVSoupir)), _colsep);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LSTVSoupir)), _colvalue);



SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVSVtSoupir))))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVSVtSoupir)))))), 53U, ADJUST);


Init__17LabelOneValueSignF8e_SYMBOLPPUcUiN23T2PUc((&this->LOVSVtSoupir), LOS, ((UBYTE **)cMSG_VtSoupir), 360U, 13U, 11U, ((UBYTE **)cMSG_NoneUnit), ((UBYTE *)"X"));
#line 888
SetFloatValue1__13LabelOneValueFi(((struct LabelOneValue *)(&this->LOVSVtSoupir)), 1);

SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVSVtSoupir)), 100U);

SetColSign__17LabelOneValueSignFUi((&this->LOVSVtSoupir), 105U);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVSVtSoupir)), 118U);



SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVCptSoupir)))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

SetColSep__13LabelOneValueFUi((&this->LOVCptSoupir), 100U);

SetColValue1__13LabelOneValueFUi((&this->LOVCptSoupir), 105U);

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVCptSoupir))))), 52U, ADJUST);


Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2((&this->LOVCptSoupir), LOS, ((UBYTE **)cMSG_CptSoupir), 360U, 13U, 50U, ((UBYTE **)cMSG_NoneUnit));
#line 915
SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVTrigE)))))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVTrigE))))))), 12U, ADJUST);

InitDefaultFlag__17LabelOneValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETi((&this->LOVTrigE), ((UBYTE **)cMSG_Auto), 13U, ADJUST, 1);




Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVTrigE))), FREE_SQUARE, ((UBYTE **)cMSG_ExhalationTrigger), 170U, 4U, 15U, ((UBYTE **)cMSG_PerCentUnit));
#line 931
SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVTrigE))), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVTrigE))), _colvalue);



SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueSign *)((struct LabelOneValueSignDefault *)(&this->LOVSTrigE))))))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueSign *)((struct LabelOneValueSignDefault *)(&this->LOVSTrigE)))))))), 49U, ADJUST);

InitDefaultFlag__21LabelOneValueSignFlagFPPUcUi19e_TYPE_OF_DB_TARGETi((&this->LOVSTrigE), ((UBYTE **)cMSG_Auto), 50U, ADJUST, 1);




Init__17LabelOneValueSignF8e_SYMBOLPPUcUiN23T2PUc(((struct LabelOneValueSign *)((struct LabelOneValueSignDefault *)(&this->LOVSTrigE))), FREE_SQUARE, ((UBYTE **)cMSG_ExhalationTrigger), 360U, 4U, 15U, ((UBYTE **)cMSG_PerCentUnit), ((UBYTE *)"-"));
#line 953
SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueSign *)((struct LabelOneValueSignDefault *)(&this->LOVSTrigE)))), _colsep);

SetColSign__17LabelOneValueSignFUi(((struct LabelOneValueSign *)((struct LabelOneValueSignDefault *)(&this->LOVSTrigE))), (_colsep + 5U));

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueSign *)((struct LabelOneValueSignDefault *)(&this->LOVSTrigE)))), (_colvalue + 15U));

SetColUnit1__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueSign *)((struct LabelOneValueSignDefault *)(&this->LOVSTrigE)))), (_colvalue + 30U));


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFSecu)))))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFSecu))))))), 6U, ADJUST);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFSecu))), FREE_SQUARE, ((UBYTE **)cMSG_BackupRate), 360U, 4U, 10U, ((UBYTE **)cMSG_FrequencyUnit));
#line 973
InitDefaultFlag__17LabelOneValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETi((&this->LOVFSecu), ((UBYTE **)cMSG_No), 36U, ADJUST, 1);


if (_CurrentLang == 0U)
{

SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFSecu))), (_colsep + 17U));

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFSecu))), (_colvalue + 17U));
}

else  {

SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFSecu))), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFSecu))), _colvalue);
}




SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVApnee)))))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVApnee))), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVApnee))), _colvalue);

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVApnee))))))), 14U, ADJUST);


Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVApnee))), FREE_SQUARE, ((UBYTE **)cMSG_Apnee), 360U, 4U, 10U, ((UBYTE **)cMSG_SecondUnit));
#line 1010
InitDefaultFlag__17LabelOneValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETi((&this->LOVApnee), ((UBYTE **)cMSG_Auto), 15U, ADJUST, 1);




SetDivider__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVApnee))), 1000U);


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVFiO2)))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVFiO2))))), 80U, CONFIG);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2((&this->LOVFiO2), FREE_SQUARE, ((UBYTE **)cMSG_FiO2), 110U, 4U, 10U, ((UBYTE **)cMSG_PerCentUnit));
#line 1029
SetColSep__13LabelOneValueFUi((&this->LOVFiO2), _colsep);

SetColValue1__13LabelOneValueFUi((&this->LOVFiO2), _colvalue);



SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVVTCible)))))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVVTCible))))))), 46U, ADJUST);


Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVVTCible))), FREE_SQUARE, ((UBYTE **)cMSG_VTCible), 190U, 4U, 1000U, ((UBYTE **)cMSG_VolumeUnit));
#line 1047
InitDefaultFlag__17LabelOneValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETi((&this->LOVVTCible), ((UBYTE **)cMSG_No), 47U, ADJUST, 0);




SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVVTCible))), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVVTCible))), _colvalue);



SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPiMax)))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPiMax))))), 48U, ADJUST);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2((&this->LOVPiMax), LOS, ((UBYTE **)cMSG_PiMax), 210U, 12U, 15U, ((UBYTE **)cMSG_PressureUnit));
#line 1069
SetDivider__13LabelOneValueFUi((&this->LOVPiMax), 10U);

SetColSep__13LabelOneValueFUi((&this->LOVPiMax), 84U);

SetColValue1__13LabelOneValueFUi((&this->LOVPiMax), 87U);


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTVChgtModeV))))), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTVChgtModeV)))), FREE_SQUARE, ((UBYTE **)cMSG_switchMode), 224U, 4U);




SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LSTVChgtModeV)), 109U);

SetSep__16LabelValueStringFPUc(((struct LabelValueString *)(&this->LSTVChgtModeV)), ((UBYTE *)":"));

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LSTVChgtModeV)), 113U);

SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LSTVChgtModeV), ((UBYTE **)cMSG_NoneUnit));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LSTVChgtModeV), ((UBYTE **)cMSG_Yes));

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LPreferences)), ((struct DisplayObject *)((struct VFrame *)(&this->FVentilation))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LPreferences), FREE_SQUARE, ((UBYTE **)cMSG_VPreferences), 230U, 4U);
#line 1102
SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)(&this->LModeAlarm))), ((struct DisplayObject *)((struct VFrame *)(&this->FAlarme))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)(&this->LModeAlarm)))), 1U, CONFIG);


Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)(&this->LModeAlarm)), FREE_SQUARE, ((UBYTE **)0), 18U, 4U);




SetNameMode__9LabelModeFPPUcN41((&this->LModeAlarm), ((UBYTE **)cMSG_Mode), ((UBYTE **)cMSG_Mode2), ((UBYTE **)cMSG_Mode3), ((UBYTE **)cMSG_EnableMode), ((UBYTE **)cMSG_DisableMode));
#line 1119
SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)(&this->LOVPiMbar)))))), ((struct DisplayObject *)((struct VFrame *)(&this->FAlarme))));

InitDbAccess__16LabelTabTwoValueFUi19e_TYPE_OF_DB_TARGETT1T2T1T2(((struct LabelTabTwoValue *)(&this->LOVPiMbar)), 16U, ADJUST, 82U, COMPUTE, 17U, ADJUST);
#line 1128
Init__25LabelTabTwoValueTwoLabelsF8e_SYMBOLPPUcT2UiN44((&this->LOVPiMbar), FREE_SQUARE, ((UBYTE **)cMSG_PiMbar), ((UBYTE **)((const UBYTE *const huge *)(cMSG_PressureUnit + 0))), 360U, 4U, 5U, 25U, 35U);
#line 1137
SetColLabel__5LabelFUi(((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)(&this->LOVPiMbar))))), 10U);

SetDivider__16LabelTabOneValueFUi(((struct LabelTabOneValue *)((struct LabelTabTwoValue *)(&this->LOVPiMbar))), 10U);

SetLabel2LineOffset__25LabelTabTwoValueTwoLabelsFUi((&this->LOVPiMbar), 15U);
SetLabel2ColOffset__25LabelTabTwoValueTwoLabelsFUi((&this->LOVPiMbar), 12U);

SetMaxDisplayValue__16LabelTabOneValueFUi(((struct LabelTabOneValue *)((struct LabelTabTwoValue *)(&this->LOVPiMbar))), 999U);


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVtiMl))))))), ((struct DisplayObject *)((struct VFrame *)(&this->FAlarme))));

InitDbAccess__16LabelTabTwoValueFUi19e_TYPE_OF_DB_TARGETT1T2T1T2(((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVtiMl))), 27U, ADJUST, 43U, COMPUTE, 29U, ADJUST);
#line 1156
Init__16LabelTabTwoValueF8e_SYMBOLPPUcUiN43(((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVtiMl))), FREE_SQUARE, ((UBYTE **)cMSG_VtiMl), 66U, 4U, 500U, 750U, 1500U);
#line 1164
InitDefaultFlag__20LabelTabTwoValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETiT1T2T3T4((&this->LOVVtiMl), ((UBYTE **)cMSG_No), 28U, ADJUST, 1, ((UBYTE **)cMSG_No), 30U, ADJUST, 1);
#line 1172
SetColLabel__5LabelFUi(((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVtiMl)))))), 12U);

SetMaxDisplayValue__16LabelTabOneValueFUi(((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVtiMl)))), 9999U);

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVteMl))))))), ((struct DisplayObject *)((struct VFrame *)(&this->FAlarme))));

InitDbAccess__16LabelTabTwoValueFUi19e_TYPE_OF_DB_TARGETT1T2T1T2(((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVteMl))), 18U, ADJUST, 13U, COMPUTE, 20U, ADJUST);
#line 1185
Init__16LabelTabTwoValueF8e_SYMBOLPPUcUiN43(((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVteMl))), FREE_SQUARE, ((UBYTE **)cMSG_VteMl), 93U, 4U, 30U, 500U, 2000U);
#line 1193
InitDefaultFlag__20LabelTabTwoValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETiT1T2T3T4((&this->LOVVteMl), ((UBYTE **)cMSG_No), 19U, ADJUST, 1, ((UBYTE **)cMSG_No), 21U, ADJUST, 1);
#line 1202
SetColLabel__5LabelFUi(((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVteMl)))))), 12U);

SetMaxDisplayValue__16LabelTabOneValueFUi(((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVteMl)))), 9999U);

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LOVFrCMin)))))), ((struct DisplayObject *)((struct VFrame *)(&this->FAlarme))));

InitDbAccess__16LabelTabOneValueFUi19e_TYPE_OF_DB_TARGETT1T2(((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LOVFrCMin))), 7U, ADJUST, 24U, COMPUTE);




Init__16LabelTabOneValueF8e_SYMBOLPPUcUiN33(((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LOVFrCMin))), FREE_SQUARE, ((UBYTE **)cMSG_FrCMin), 117U, 4U, 20U, 10U);
#line 1220
InitDefaultFlag__20LabelTabOneValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETi((&this->LOVFrCMin), ((UBYTE **)cMSG_No), 8U, ADJUST, 1);




SetValue1Maxi__16LabelTabOneValueFi(((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LOVFrCMin))), 1);

SetColValue1__16LabelTabOneValueFUi(((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LOVFrCMin))), 161U);

SetColLabel__5LabelFUi(((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LOVFrCMin))))), 11U);

SetMaxDisplayValue__16LabelTabOneValueFUi(((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LOVFrCMin))), 99U);

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVSpO2))))))), ((struct DisplayObject *)((struct VFrame *)(&this->FAlarme))));

InitDbAccess__16LabelTabTwoValueFUi19e_TYPE_OF_DB_TARGETT1T2T1T2(((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVSpO2))), 84U, CONFIG, 36U, COMPUTE, 85U, CONFIG);
#line 1242
Init__16LabelTabTwoValueF8e_SYMBOLPPUcUiN43(((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVSpO2))), FREE_SQUARE, ((UBYTE **)cMSG_SpO2Pc), 167U, 4U, 500U, 750U, 1500U);
#line 1250
InitDefaultFlag__20LabelTabTwoValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETiT1T2T3T4((&this->LTTVSpO2), ((UBYTE **)cMSG_No), 86U, CONFIG, 0, ((UBYTE **)cMSG_No), 87U, CONFIG, 0);
#line 1258
SetColLabel__5LabelFUi(((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVSpO2)))))), 11U);

SetMaxDisplayValue__16LabelTabOneValueFUi(((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVSpO2)))), 999U);



SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVFiO2))))))), ((struct DisplayObject *)((struct VFrame *)(&this->FAlarme))));

InitDbAccess__16LabelTabTwoValueFUi19e_TYPE_OF_DB_TARGETT1T2T1T2(((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVFiO2))), 82U, CONFIG, 17U, COMPUTE, 83U, CONFIG);
#line 1273
Init__16LabelTabTwoValueF8e_SYMBOLPPUcUiN43(((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVFiO2))), FREE_SQUARE, ((UBYTE **)cMSG_FiO2Pc), 167U, 4U, 500U, 750U, 1500U);
#line 1281
InitDefaultFlag__20LabelTabTwoValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETiT1T2T3T4((&this->LTTVFiO2), ((UBYTE **)cMSG_No), 88U, CONFIG, 0, ((UBYTE **)cMSG_No), 89U, CONFIG, 0);
#line 1289
SetColLabel__5LabelFUi(((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVFiO2)))))), 11U);

SetMaxDisplayValue__16LabelTabOneValueFUi(((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVFiO2)))), 999U);


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVTiS))))))), ((struct DisplayObject *)((struct VFrame *)(&this->FAlarme))));

InitDbAccess__16LabelTabTwoValueFUi19e_TYPE_OF_DB_TARGETT1T2T1T2(((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVTiS))), 31U, ADJUST, 22U, COMPUTE, 33U, ADJUST);
#line 1303
Init__16LabelTabTwoValueF8e_SYMBOLPPUcUiN43(((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVTiS))), FREE_SQUARE, ((UBYTE **)cMSG_TiS), 192U, 4U, 500U, 750U, 1500U);
#line 1311
InitDefaultFlag__20LabelTabTwoValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETiT1T2T3T4((&this->LTTVTiS), ((UBYTE **)cMSG_Auto), 32U, ADJUST, 1, ((UBYTE **)cMSG_Auto), 34U, ADJUST, 1);
#line 1319
SetFloatValueRefresh__16LabelTabOneValueFi(((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVTiS)))), 1);

SetFloatValue1__16LabelTabOneValueFi(((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVTiS)))), 1);

SetFloatValue2__16LabelTabTwoValueFi(((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVTiS))), 1);

SetColLabel__5LabelFUi(((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVTiS)))))), 12U);

SetDivider__16LabelTabOneValueFUi(((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVTiS)))), 100U);


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LTOVFuiteLMin)))))), ((struct DisplayObject *)((struct VFrame *)(&this->FAlarme))));

InitDbAccess__16LabelTabOneValueFUi19e_TYPE_OF_DB_TARGETT1T2(((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LTOVFuiteLMin))), 41U, ADJUST, 39U, COMPUTE);

Init__16LabelTabOneValueF8e_SYMBOLPPUcUiN33(((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LTOVFuiteLMin))), FREE_SQUARE, ((UBYTE **)cMSG_FuiteParam), 93U, 4U, 400U, 700U);
#line 1341
InitDefaultFlag__20LabelTabOneValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETi((&this->LTOVFuiteLMin), ((UBYTE **)cMSG_No), 42U, ADJUST, 0);

SetValue1Maxi__16LabelTabOneValueFi(((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LTOVFuiteLMin))), 1);

SetColValue1__16LabelTabOneValueFUi(((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LTOVFuiteLMin))), 161U);

SetColLabel__5LabelFUi(((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LTOVFuiteLMin))))), 11U);

SetMaxDisplayValue__16LabelTabOneValueFUi(((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LTOVFuiteLMin))), 200U);



SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTICalibQExp))))), ((struct DisplayObject *)((struct VFrame *)(&this->FAlarme))));

Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTICalibQExp)))), NO, ((UBYTE **)cMSG_NoneUnit), 118U, 122U);




(__T51869784 = ((((*((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTICalibQExp))))))).__vptr)) + 38)) , (((void (*)(struct LabelValueString *const, e_BOOL))((__T51869784->f)))(((struct LabelValueString *)(((char *)((
#line 1360
struct LabelValueString *)(&this->LSTICalibQExp))) + ((__T51869784->d)))), 1));

SetColLabel__5LabelFUi(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTICalibQExp)))), 0U);

SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LSTICalibQExp)), 0U);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LSTICalibQExp)), 0U);

SetSep__16LabelValueStringFPUc(((struct LabelValueString *)(&this->LSTICalibQExp)), ((UBYTE *)""));

SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LSTICalibQExp), ((UBYTE **)cMSG_No));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LSTICalibQExp), ((UBYTE **)cMSG_Yes));


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTICalibFiO2))))), ((struct DisplayObject *)((struct VFrame *)(&this->FAlarme))));

Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTICalibFiO2)))), NO, ((UBYTE **)cMSG_NoneUnit), 118U, 122U);




(__T51869784 = ((((*((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTICalibFiO2))))))).__vptr)) + 38)) , (((void (*)(struct LabelValueString *const, e_BOOL))((__T51869784->f)))(((struct LabelValueString *)(((char *)((
#line 1382
struct LabelValueString *)(&this->LSTICalibFiO2))) + ((__T51869784->d)))), 1));

SetColLabel__5LabelFUi(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTICalibFiO2)))), 0U);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LSTICalibFiO2)), 0U);

SetSep__16LabelValueStringFPUc(((struct LabelValueString *)(&this->LSTICalibFiO2)), ((UBYTE *)""));

SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LSTICalibFiO2), ((UBYTE **)cMSG_No));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LSTICalibFiO2), ((UBYTE **)cMSG_Yes));



SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LHistoAlarm)), ((struct DisplayObject *)((struct VFrame *)(&this->FAlarme))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LHistoAlarm), FREE_SQUARE, ((UBYTE **)cMSG_HistoAlarm), 233U, 4U);




SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LOVChgtModeA))))), ((struct DisplayObject *)((struct VFrame *)(&this->FAlarme))));

Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LOVChgtModeA)))), FREE_SQUARE, ((UBYTE **)cMSG_switchMode), 233U, 4U);




SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LOVChgtModeA)), 108U);

SetSep__16LabelValueStringFPUc(((struct LabelValueString *)(&this->LOVChgtModeA)), ((UBYTE *)":"));

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LOVChgtModeA)), 115U);

SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LOVChgtModeA), ((UBYTE **)cMSG_NoneUnit));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LOVChgtModeA), ((UBYTE **)cMSG_Yes));



SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LCancelledAlarm)), ((struct DisplayObject *)((struct VFrame *)(&this->FHistoAlarme))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LCancelledAlarm), FREE_SQUARE, ((UBYTE **)cMSG_CancelledAlarm), 206U, 8U);




SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LRAlarmeA)), ((struct DisplayObject *)((struct VFrame *)(&this->FHistoAlarme))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LRAlarmeA), FREE_SQUARE, ((UBYTE **)cMSG_Back), 226U, 8U);
#line 1437
_line = 35U;
_spacing = 18U;
_colsep = 139U;
_colvalue = 146U;




SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVMachineHrs)))), ((struct DisplayObject *)((struct VFrame *)(&this->FConfiguration))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVMachineHrs))))), 21U, CONTROL);


Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2((&this->LOVMachineHrs), NO, ((UBYTE **)cMSG_CounterMachine), _line, 0U, 24U, ((UBYTE **)cMSG_HourUnit));
#line 1457
SetColLabel__5LabelFUi(((struct Label *)((struct EditableObject *)(&this->LOVMachineHrs))), 8U);

SetColSep__13LabelOneValueFUi((&this->LOVMachineHrs), (_colsep + 8U));

SetColValue1__13LabelOneValueFUi((&this->LOVMachineHrs), (_colvalue + 8U));

SetNbDigitValue1__13LabelOneValueFUi((&this->LOVMachineHrs), 5U);

SetDisplayZeroValue1__13LabelOneValueFi((&this->LOVMachineHrs), 1);


_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSLanguage))))), ((struct DisplayObject *)((struct VFrame *)(&this->FConfiguration))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSLanguage)))))), 0U, CONFIG);


Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSLanguage)))), FREE_SQUARE, ((UBYTE **)cMSG_Language), _line, 8U);




SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSLanguage)), _colsep);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSLanguage)), _colvalue);

SetValue1Name__13LabelLanguageFPPUc((&this->LVSLanguage), ((UBYTE **)cMSG_CountryLanguage));


_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->VDConf)))), ((struct DisplayObject *)((struct VFrame *)(&this->FConfiguration))));

InitDbAccess__5VDateFUi19e_TYPE_OF_DB_TARGETN51T2((&this->VDConf), 4U, RTC, 3U, 5U, 11U, 10U, 12U, RTC);
#line 1500
Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)(&this->VDConf))), FREE_SQUARE, ((UBYTE **)cMSG_Date), _line, 8U);




SetColSep__5VDateFUi((&this->VDConf), _colsep);

SetColDate__5VDateFUi((&this->VDConf), _colvalue);

SetNameMonth__5VDateFPPUc((&this->VDConf), ((UBYTE **)cMSG_Month));


_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->VTConf)))), ((struct DisplayObject *)((struct VFrame *)(&this->FConfiguration))));

InitDbAccess__5VTimeFUi19e_TYPE_OF_DB_TARGETN51((&this->VTConf), 2U, RTC, 1U, 0U, 9U, 8U, 7U);
#line 1523
Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)(&this->VTConf))), FREE_SQUARE, ((UBYTE **)cMSG_Time), _line, 8U);




SetColSep__5VTimeFUi((&this->VTConf), _colsep);

SetColHours__5VTimeFUi((&this->VTConf), _colvalue);


_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSVoluntaryStopAlarm))))), ((struct DisplayObject *)((struct VFrame *)(&this->FConfiguration))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSVoluntaryStopAlarm)))))), 102U, CONFIG);


Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSVoluntaryStopAlarm)))), FREE_SQUARE, ((UBYTE **)cMSG_VoluntaryStopAlarm), _line, 8U);




SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSVoluntaryStopAlarm)), _colsep);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSVoluntaryStopAlarm)), _colvalue);

SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LVSVoluntaryStopAlarm), ((UBYTE **)cMSG_No));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LVSVoluntaryStopAlarm), ((UBYTE **)cMSG_Yes));


_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSPressureUnit))))), ((struct DisplayObject *)((struct VFrame *)(&this->FConfiguration))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSPressureUnit)))))), 90U, CONFIG);

Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSPressureUnit)))), FREE_SQUARE, ((UBYTE **)cMSG_PressureUnitType), _line, 8U);




SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSPressureUnit)), _colsep);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSPressureUnit)), _colvalue);

SetSize__17LabelStringNItemsFUi((&this->LVSPressureUnit), 3U);

SetItem__17LabelStringNItemsFUiPPUc((&this->LVSPressureUnit), 0U, ((UBYTE **)((const UBYTE *const huge *)(cMSG_PressureUnit + 0))));

SetItem__17LabelStringNItemsFUiPPUc((&this->LVSPressureUnit), 1U, ((UBYTE **)((const UBYTE *const huge *)(cMSG_PressureUnit + 1))));

SetItem__17LabelStringNItemsFUiPPUc((&this->LVSPressureUnit), 2U, ((UBYTE **)((const UBYTE *const huge *)(cMSG_PressureUnit + 2))));


_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSAlarmTone))))), ((struct DisplayObject *)((struct VFrame *)(&this->FConfiguration))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSAlarmTone)))))), 103U, CONFIG);

Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSAlarmTone)))), FREE_SQUARE, ((UBYTE **)cMSG_Alarm_Tone), _line, 8U);




SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSAlarmTone)), _colsep);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSAlarmTone)), _colvalue);

SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LVSAlarmTone), ((UBYTE **)cMSG_Original));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LVSAlarmTone), ((UBYTE **)cMSG_Compliant));


_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVPatientHrs))))), ((struct DisplayObject *)((struct VFrame *)(&this->FConfiguration))));

InitDbAccess__13LabelTwoValueFUi19e_TYPE_OF_DB_TARGETT1T2((&this->LOVPatientHrs), 19U, CONTROL, 20U, CONTROL);




Init__13LabelTwoValueF8e_SYMBOLPPUcUiN23T2T3T2((&this->LOVPatientHrs), FREE_SQUARE, ((UBYTE **)cMSG_CounterPatient), _line, 8U, 24U, ((UBYTE **)cMSG_HourUnit), 34U, ((UBYTE **)cMSG_MinuteUnit));
#line 1616
SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVPatientHrs)), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVPatientHrs)), _colvalue);

SetColValue2__13LabelTwoValueFUi((&this->LOVPatientHrs), (_colvalue + 68U));

SetColUnit2__13LabelTwoValueFUi((&this->LOVPatientHrs), (_colvalue + 88U));

SetNbDigitValue1__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVPatientHrs)), 5U);

SetDisplayZeroValue1__13LabelOneValueFi(((struct LabelOneValue *)(&this->LOVPatientHrs)), 1);

SetNbDigitValue2__13LabelTwoValueFUi((&this->LOVPatientHrs), 2U);

SetDisplayZeroValue2__13LabelTwoValueFi((&this->LOVPatientHrs), 1);


_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSSResetPatientHrs))))), ((struct DisplayObject *)((struct VFrame *)(&this->FConfiguration))));

Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSSResetPatientHrs)))), LOS, ((UBYTE **)cMSG_ResetPatientHrs), _line, 20U);




SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LVSSResetPatientHrs), ((UBYTE **)cMSG_No));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LVSSResetPatientHrs), ((UBYTE **)cMSG_Yes));

SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSSResetPatientHrs)), _colsep);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSSResetPatientHrs)), _colvalue);



_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSSRestoreDefaultSettings))))), ((struct DisplayObject *)((struct VFrame *)(&this->FConfiguration))));

Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSSRestoreDefaultSettings)))), FREE_SQUARE, ((UBYTE **)cMSG_RestoreDefaultSetting), _line, 8U);




SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSSRestoreDefaultSettings)), _colsep);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSSRestoreDefaultSettings)), _colvalue);

SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LVSSRestoreDefaultSettings), ((UBYTE **)cMSG_No));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LVSSRestoreDefaultSettings), ((UBYTE **)cMSG_Yes));




_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LMaintenance)), ((struct DisplayObject *)((struct VFrame *)(&this->FConfiguration))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LMaintenance), FREE_SQUARE, ((UBYTE **)cMSG_Maintenance), _line, 8U);
#line 1683
_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LNextPage)), ((struct DisplayObject *)((struct VFrame *)(&this->FConfiguration))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LNextPage), FREE_SQUARE, ((UBYTE **)cMSG_NextPage), _line, 8U);
#line 1693
_line = 35U;
_spacing = 18U;
_colsep = 139U;
_colvalue = 146U;

InitConfiguration__10HMI_Setup1Fv((GetInstance__10HMI_Setup1SFv()));



_line = 32U;
_spacing = 20U;
_colsep = 143U;
_colvalue = 153U;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSScreenSave))))), ((struct DisplayObject *)((struct VFrame *)(&this->FPreference))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSScreenSave)))))), 46U, CONFIG);


Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSScreenSave)))), FREE_SQUARE, ((UBYTE **)cMSG_ScreenSave), _line, 8U);




SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSScreenSave)), _colsep);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSScreenSave)), _colvalue);

SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LVSScreenSave), ((UBYTE **)cMSG_No));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LVSScreenSave), ((UBYTE **)cMSG_Yes));


_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LPBBrightness)))), ((struct DisplayObject *)((struct VFrame *)(&this->FPreference))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LPBBrightness))))), 45U, CONFIG);


Init__16LabelProgressBarF8e_SYMBOLPPUcUiN23((&this->LPBBrightness), FREE_SQUARE, ((UBYTE **)cMSG_Brightness), _line, 8U, 34000U);
#line 1739
SetColSep__16LabelProgressBarFUi((&this->LPBBrightness), _colsep);

SetColValue__16LabelProgressBarFUi((&this->LPBBrightness), _colvalue);

DB_Request__13InterfaceCppCSFPUiUi19e_TYPE_OF_DB_TARGET16e_DATA_OPERATION((&LowLimit), 45U, CONFIG, MIN);



DB_Request__13InterfaceCppCSFPUiUi19e_TYPE_OF_DB_TARGET16e_DATA_OPERATION((&HighLimit), 45U, CONFIG, MAX);



SetLimits__16LabelProgressBarFUiT1((&this->LPBBrightness), LowLimit, HighLimit);



_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LPBSoundLevel)))), ((struct DisplayObject *)((struct VFrame *)(&this->FPreference))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LPBSoundLevel))))), 68U, CONFIG);


Init__16LabelProgressBarF8e_SYMBOLPPUcUiN23((&this->LPBSoundLevel), FREE_SQUARE, ((UBYTE **)cMSG_SoundLevel), _line, 8U, 34000U);
#line 1768
SetColSep__16LabelProgressBarFUi((&this->LPBSoundLevel), _colsep);

SetColValue__16LabelProgressBarFUi((&this->LPBSoundLevel), _colvalue);

DB_Request__13InterfaceCppCSFPUiUi19e_TYPE_OF_DB_TARGET16e_DATA_OPERATION((&LowLimit), 68U, CONFIG, MIN);



DB_Request__13InterfaceCppCSFPUiUi19e_TYPE_OF_DB_TARGET16e_DATA_OPERATION((&HighLimit), 68U, CONFIG, MAX);



SetLimits__16LabelProgressBarFUiT1((&this->LPBSoundLevel), LowLimit, HighLimit);


_line += (_spacing + 2U);

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFDAjustKeyTone)))))), ((struct DisplayObject *)((struct VFrame *)(&this->FPreference))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFDAjustKeyTone))))))), 77U, CONFIG);


Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFDAjustKeyTone))), FREE_SQUARE, ((UBYTE **)cMSG_KeySound), _line, 8U, 24U, ((UBYTE **)cMSG_NoneUnit));
#line 1797
SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFDAjustKeyTone))), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFDAjustKeyTone))), _colvalue);




InitDefaultValue__24LabelOneValueFourDefaultFPPUcUiT1T2T1T2T1T2((&this->LOVFDAjustKeyTone), ((UBYTE **)cMSG_Off), 0U, ((UBYTE **)cMSG_Key), 1U, ((UBYTE **)cMSG_Bip), 2U, ((UBYTE **)cMSG_BipAndKey), 3U);
#line 1814
_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSApneaAlarm))))), ((struct DisplayObject *)((struct VFrame *)(&this->FPreference))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSApneaAlarm)))))), 92U, CONFIG);


Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSApneaAlarm)))), FREE_SQUARE, ((UBYTE **)cMSG_ApneaAlarm), _line, 8U);




SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSApneaAlarm)), _colsep);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSApneaAlarm)), _colvalue);

SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LVSApneaAlarm), ((UBYTE **)cMSG_No));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LVSApneaAlarm), ((UBYTE **)cMSG_Yes));



_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFDisconnectionAlarm)))))), ((struct DisplayObject *)((struct VFrame *)(&this->FPreference))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFDisconnectionAlarm))))))), 54U, ADJUST);


Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFDisconnectionAlarm))), FREE_SQUARE, ((UBYTE **)cMSG_DisconnectionAlarm), _line, 8U, 1000U, ((UBYTE **)cMSG_SecondUnit));
#line 1850
SetDivider__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFDisconnectionAlarm))), 1000U);

SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFDisconnectionAlarm))), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFDisconnectionAlarm))), _colvalue);


InitDefaultFlag__17LabelOneValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETi((&this->LOVFDisconnectionAlarm), ((UBYTE **)cMSG_Auto), 55U, ADJUST, 1);
#line 1876
_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSWaveformDisplay))))), ((struct DisplayObject *)((struct VFrame *)(&this->FPreference))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSWaveformDisplay)))))), 78U, CONFIG);


Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSWaveformDisplay)))), FREE_SQUARE, ((UBYTE **)cMSG_WaveformDisplay), _line, 8U);




SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSWaveformDisplay)), _colsep);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSWaveformDisplay)), _colvalue);

SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LVSWaveformDisplay), ((UBYTE **)cMSG_No));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LVSWaveformDisplay), ((UBYTE **)cMSG_Yes));
#line 1904
_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSPediatricCircuit))))), ((struct DisplayObject *)((struct VFrame *)(&this->FPreference))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSPediatricCircuit)))))), 98U, CONFIG);


Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSPediatricCircuit)))), FREE_SQUARE, ((UBYTE **)cMSG_PediatricCircuit), _line, 8U);




SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSPediatricCircuit)), _colsep);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSPediatricCircuit)), _colvalue);

SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LVSPediatricCircuit), ((UBYTE **)cMSG_No));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LVSPediatricCircuit), ((UBYTE **)cMSG_Yes));


_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LTrendMenu)), ((struct DisplayObject *)((struct VFrame *)(&this->FPreference))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LTrendMenu), FREE_SQUARE, ((UBYTE **)cMSG_RapportVentil), _line, 8U);




SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LRVentilMenu)), ((struct DisplayObject *)((struct VFrame *)(&this->FPreference))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LRVentilMenu), FREE_SQUARE, ((UBYTE **)cMSG_BackVentil), 230U, 8U);
#line 1942
_line = 40U;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LCircuitLeak)), ((struct DisplayObject *)((struct VFrame *)((this->FCircuitCheck)))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LCircuitLeak), FREE_SQUARE, ((UBYTE **)cMSG_CircuitLeak), _line, 8U);
#line 1953
_line = 63U;
_spacing = 16U;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LHistoAnom)), ((struct DisplayObject *)((struct VFrame *)(&this->FMaintenance))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LHistoAnom), FREE_SQUARE, ((UBYTE **)cMSG_HistoAnom), _line, 8U);




_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LVoltCtrl)), ((struct DisplayObject *)((struct VFrame *)(&this->FMaintenance))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LVoltCtrl), FREE_SQUARE, ((UBYTE **)cMSG_VoltCtrl), _line, 8U);




_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LSensorCal)), ((struct DisplayObject *)((struct VFrame *)(&this->FMaintenance))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LSensorCal), FREE_SQUARE, ((UBYTE **)cMSG_SensorCal), _line, 8U);
#line 1982
_spacing = 17U;
_line += _spacing;
_col = 19U;
_colsep = 128U;
_colvalue = 136U;


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)((struct ManualCalibValue *)(&this->LOVPatientPressure))))))), ((struct DisplayObject *)((struct VFrame *)(&this->FMaintenance))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)((struct ManualCalibValue *)(&this->LOVPatientPressure)))))))), 3U, COMPUTE);


SetSignValue__13LabelOneValueFi(((struct LabelOneValue *)((struct AutoCalibValue *)((struct ManualCalibValue *)(&this->LOVPatientPressure)))), 1);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)((struct AutoCalibValue *)((struct ManualCalibValue *)(&this->LOVPatientPressure)))), LOS, ((UBYTE **)cMSG_PatientPressure), _line, _col, 96U, ((UBYTE **)cMSG_PressureUnit));
#line 2003
SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)((struct AutoCalibValue *)((struct ManualCalibValue *)(&this->LOVPatientPressure)))), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)((struct AutoCalibValue *)((struct ManualCalibValue *)(&this->LOVPatientPressure)))), _colvalue);

SetFloatValue1__13LabelOneValueFi(((struct LabelOneValue *)((struct AutoCalibValue *)((struct ManualCalibValue *)(&this->LOVPatientPressure)))), 1);

InitCalibProperties__16ManualCalibValueFUi19e_TYPE_OF_DB_TARGETPCUiPCiN21T2T1T2(((struct ManualCalibValue *)(&this->LOVPatientPressure)), 5U, CONTROL, PATIENT_PRESSURE_CALIB_POINTS, PatientPressureFloatSegmentList, 2U, 14U, CONTROL, 25U, COMPUTE);
#line 2018
(__T51869784 = ((((*((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)((struct ManualCalibValue *)(&this->LOVPatientPressure))))))))).__vptr)) + 49)) , (((void (*)(struct ManualCalibTwoValue *const, UWORD16, 
#line 2018
e_TYPE_OF_DB_TARGET, UBYTE **, UWORD16, UWORD16, UBYTE **, UBYTE **, UWORD16))((__T51869784->f)))(((struct ManualCalibTwoValue *)(((char *)(&this->LOVPatientPressure)) + ((__T51869784->d)))), 5U, COMPUTE, ((UBYTE **)cMSG_NoneUnit), _line, 235U, ((UBYTE **)cMSG_PressureUnit), ((UBYTE **)cMSG_Slash), 1U
#line 2018
));
#line 2027
SetMaxDisplayValue__13LabelOneValueFUi(((struct LabelOneValue *)((struct AutoCalibValue *)((struct ManualCalibValue *)(&this->LOVPatientPressure)))), 999U);

SetMaxDisplayValue2__19ManualCalibTwoValueFUi((&this->LOVPatientPressure), 999U);


_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVValvePressure))))), ((struct DisplayObject *)((struct VFrame *)(&this->FMaintenance))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVValvePressure)))))), 1U, COMPUTE);


SetSignValue__13LabelOneValueFi(((struct LabelOneValue *)(&this->LOVValvePressure)), 1);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)(&this->LOVValvePressure)), LOS, ((UBYTE **)cMSG_ValvePressure), _line, _col, 102U, ((UBYTE **)cMSG_PressureUnit));
#line 2048
SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVValvePressure)), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVValvePressure)), _colvalue);

SetFloatValue1__13LabelOneValueFi(((struct LabelOneValue *)(&this->LOVValvePressure)), 1);

InitCalibProperties__14AutoCalibValueFUi19e_TYPE_OF_DB_TARGETPCUiPCiT1((&this->LOVValvePressure), 9U, CONTROL, VALVE_FAS_PWM_CALIB_POINTS, ValvePressureFloatSegmentList, 0U);
#line 2060
SetMaxDisplayValue__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVValvePressure)), 999U);


_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns)))))), ((struct DisplayObject *)((struct VFrame *)(&this->FMaintenance))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns))))))), 9U, COMPUTE);

SetSignValue__13LabelOneValueFi(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns))), 1);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns))), LOS, ((UBYTE **)cMSG_FlowIns), _line, _col, 1253U, ((UBYTE **)cMSG_StandardFlowUnit));
#line 2078
SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns))), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns))), _colvalue);

SetFloatValue1__13LabelOneValueFi(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns))), 1);

InitCalibProperties__16ManualCalibValueFUi19e_TYPE_OF_DB_TARGETPCUiPCiN21T2T1T2((&this->LOVFlowIns), 6U, CONTROL, FLOW_CALIB_POINTS, FlowFloatSegmentList, 8U, 14U, CONTROL, 25U, COMPUTE);
#line 2095
_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVFlowExp))))), ((struct DisplayObject *)((struct VFrame *)(&this->FMaintenance))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVFlowExp)))))), 12U, COMPUTE);

SetSignValue__13LabelOneValueFi(((struct LabelOneValue *)(&this->LOVFlowExp)), 1);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)(&this->LOVFlowExp)), LOS, ((UBYTE **)cMSG_FlowExp), _line, _col, 126U, ((UBYTE **)cMSG_StandardFlowUnit));
#line 2110
SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVFlowExp)), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVFlowExp)), _colvalue);

SetFloatValue1__13LabelOneValueFi(((struct LabelOneValue *)(&this->LOVFlowExp)), 1);

InitCalibProperties__14AutoCalibValueFUi19e_TYPE_OF_DB_TARGETPCUiPCiT1((&this->LOVFlowExp), 7U, CONTROL, FLOW_CALIB_POINTS, FlowFloatSegmentList, 8U);
#line 2122
UpdateCalibrationPoints__10ControllerFv(this);


_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFiO2Concent)))))), ((struct DisplayObject *)((struct VFrame *)(&this->FMaintenance))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFiO2Concent))))))), 18U, COMPUTE);

SetFloatValue1__13LabelOneValueFi(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFiO2Concent))), 1);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFiO2Concent))), LOS, ((UBYTE **)cMSG_CalibFiO2), _line, _col, 126U, ((UBYTE **)cMSG_PerCentUnit));
#line 2140
SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFiO2Concent))), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFiO2Concent))), _colvalue);


InitCalibProperties__16ManualCalibValueFUi19e_TYPE_OF_DB_TARGETPCUiPCiN21T2T1T2((&this->LOVFiO2Concent), 80U, CONTROL, FIO2_CALIB_POINTS, FiO2FloatSegmentList, 1U, 14U, CONTROL, 25U, COMPUTE);
#line 2157
_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2)))))), ((struct DisplayObject *)((struct VFrame *)(&this->FMaintenance))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2))))))), 58U, COMPUTE);

SetSignValue__13LabelOneValueFi(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2))), 1);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2))), LOS, ((UBYTE **)cMSG_FlowO2), _line, _col, 25U, ((UBYTE **)cMSG_FlowUnit));
#line 2172
SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2))), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2))), _colvalue);

SetFloatValue1__13LabelOneValueFi(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2))), 1);

InitCalibProperties__16ManualCalibValueFUi19e_TYPE_OF_DB_TARGETPCUiPCiN21T2T1T2((&this->LOVFlowO2), 81U, CONTROL, FLOW_O2_CALIB_POINTS, FlowO2FloatSegmentList, 5U, 79U, CONTROL, 82U, CONTROL);
#line 2189
_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVPressO2)))))), ((struct DisplayObject *)((struct VFrame *)(&this->FMaintenance))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVPressO2))))))), 59U, COMPUTE);

SetSignValue__13LabelOneValueFi(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVPressO2))), 1);

SetDivider__13LabelOneValueFUi(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVPressO2))), 100U);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVPressO2))), LOS, ((UBYTE **)cMSG_O2Pressure), _line, _col, 25U, ((UBYTE **)cMSG_PressBarUnit));
#line 2206
SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVPressO2))), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVPressO2))), _colvalue);

SetFloatValue1__13LabelOneValueFi(((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVPressO2))), 1);

InitCalibProperties__16ManualCalibValueFUi19e_TYPE_OF_DB_TARGETPCUiPCiN21T2T1T2((&this->LOVPressO2), 83U, CONTROL, O2_PRESSURE_CALIB_POINTS, O2PressureFloatSegmentList, 1U, 79U, CONTROL, 82U, CONTROL);
#line 2224
_line = 215U;
_spacing = 16U;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVPwmBlower))))), ((struct DisplayObject *)((struct VFrame *)(&this->FMaintenance))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVPwmBlower)))))), 14U, CONTROL);


Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)(&this->LOVPwmBlower)), FREE_SQUARE, ((UBYTE **)cMSG_PwmBlower), _line, 8U, 4000U, ((UBYTE **)cMSG_NoneUnit));
#line 2239
SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVPwmBlower)), 130U);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVPwmBlower)), 138U);

SetColUnit1__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVPwmBlower)), 178U);

(__T51869784 = ((((*((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVPwmBlower))))))).__vptr)) + 20)) , (((void (*)(struct LabelOneValue *const))((__T51869784->f)))(((struct LabelOneValue *)(((char *)((struct LabelOneValue 
#line 2245
*)(&this->LOVPwmBlower))) + ((__T51869784->d))))));

RefreshEnable__13DisplayObjectFi(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVPwmBlower))))), 0);

SetBlowerSpeedLine__16FrameMaintenanceFUi((&this->FMaintenance), _line);

_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LRConfMaint)), ((struct DisplayObject *)((struct VFrame *)(&this->FMaintenance))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LRConfMaint), FREE_SQUARE, ((UBYTE **)cMSG_Back), _line, 8U);
#line 2263
SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LRMaintAno)), ((struct DisplayObject *)((struct VFrame *)(&this->FHistoAno))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LRMaintAno), FREE_SQUARE, ((UBYTE **)cMSG_Back), 226U, 8U);
#line 2272
_line = 149U;
_spacing = 21U;
_colsep = 165U;
_colvalue = 173U;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LRMaintTension)), ((struct DisplayObject *)((struct VFrame *)(&this->FVoltControl))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LRMaintTension), FREE_SQUARE, ((UBYTE **)cMSG_Back), 231U, 8U);
#line 2285
Val = 0U;
WriteValue__14DataBaseAccessSFPUiUi19e_TYPE_OF_DB_TARGET((&Val), 69U, COMPUTE);

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVBuzzerVoltage)))), ((struct DisplayObject *)((struct VFrame *)(&this->FVoltControl))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVBuzzerVoltage))))), 69U, COMPUTE);


Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2((&this->LOVBuzzerVoltage), LOCKS, ((UBYTE **)cMSG_Buzzer), _line, 8U, 252U, ((UBYTE **)cMSG_TensionUnit));
#line 2300
SetFloatValue1__13LabelOneValueFi((&this->LOVBuzzerVoltage), 1);

SetColSep__13LabelOneValueFUi((&this->LOVBuzzerVoltage), _colsep);

SetDivider__13LabelOneValueFUi((&this->LOVBuzzerVoltage), 100U);

SetColValue1__13LabelOneValueFUi((&this->LOVBuzzerVoltage), _colvalue);

SetMaxDisplayValue__13LabelOneValueFUi((&this->LOVBuzzerVoltage), 9999U);

_line += _spacing;


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LBackupBuzzer)), ((struct DisplayObject *)((struct VFrame *)(&this->FVoltControl))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LBackupBuzzer), FREE_SQUARE, ((UBYTE **)cMSG_BuzzerSec), _line, 8U);



_line += _spacing;


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LBatteryMenu)), ((struct DisplayObject *)((struct VFrame *)(&this->FVoltControl))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LBatteryMenu), FREE_SQUARE, ((UBYTE **)cMSG_BatteryMenu), _line, 8U);
#line 2330
_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSBaroCorrector))))), ((struct DisplayObject *)((struct VFrame *)(&this->FConfiguration))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSBaroCorrector)))))), 79U, CONFIG);


Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSBaroCorrector)))), FREE_SQUARE, ((UBYTE **)cMSG_BaroCorrect), _line, 8U);




SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSBaroCorrector)), _colsep);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSBaroCorrector)), _colvalue);

SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LVSBaroCorrector), ((UBYTE **)cMSG_No));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LVSBaroCorrector), ((UBYTE **)cMSG_Yes));
#line 2354
SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LRMaintBattery)), ((struct DisplayObject *)((struct VFrame *)(&this->FBatteryMenu))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LRMaintBattery), FREE_SQUARE, ((UBYTE **)cMSG_Back), 226U, 8U);
#line 2369
_colsep = 127U;
_colvalue = 133U;


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSVisu))))), ((struct DisplayObject *)((struct VFrame *)(&this->FGraphConfig))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSVisu)))))), 70U, CONFIG);


Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSVisu)))), FREE_SQUARE, ((UBYTE **)cMSG_Visualisation), 50U, 8U);




SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSVisu)), _colsep);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSVisu)), _colvalue);

SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LVSVisu), ((UBYTE **)cMSG_CurveVisualisation1));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LVSVisu), ((UBYTE **)cMSG_CurveVisualisation2));

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVPMax))))), ((struct DisplayObject *)((struct VFrame *)(&this->FGraphConfig))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVPMax)))))), 71U, CONFIG);


SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVPMax)), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVPMax)), _colvalue);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)(&this->LOVPMax)), FREE_SQUARE, ((UBYTE **)cMSG_PressionMax), 78U, 8U, 1U, ((UBYTE **)cMSG_PressureUnit));
#line 2407
InitDefaultValue__20LabelOneValueDefaultFPPUcUi((&this->LOVPMax), ((UBYTE **)cMSG_Auto), 0U);


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVQMax))))), ((struct DisplayObject *)((struct VFrame *)(&this->FGraphConfig))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVQMax)))))), 72U, CONFIG);


SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVQMax)), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVQMax)), _colvalue);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)(&this->LOVQMax)), FREE_SQUARE, ((UBYTE **)cMSG_DebitMax), 106U, 8U, 1U, ((UBYTE **)cMSG_FlowUnit));
#line 2426
InitDefaultValue__20LabelOneValueDefaultFPPUcUi((&this->LOVQMax), ((UBYTE **)cMSG_Auto), 0U);

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVVtMax))))), ((struct DisplayObject *)((struct VFrame *)(&this->FGraphConfig))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVVtMax)))))), 73U, CONFIG);


SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVVtMax)), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVVtMax)), _colvalue);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)(&this->LOVVtMax)), FREE_SQUARE, ((UBYTE **)cMSG_VtMax), 132U, 8U, 1U, ((UBYTE **)cMSG_VolumeUnit));
#line 2444
InitDefaultValue__20LabelOneValueDefaultFPPUcUi((&this->LOVVtMax), ((UBYTE **)cMSG_Auto), 0U);


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVTMax))))), ((struct DisplayObject *)((struct VFrame *)(&this->FGraphConfig))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVTMax)))))), 74U, CONFIG);


SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVTMax)), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)(&this->LOVTMax)), _colvalue);

Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)(&this->LOVTMax)), FREE_SQUARE, ((UBYTE **)cMSG_TempsMax), 160U, 8U, 1U, ((UBYTE **)cMSG_SecondUnit));
#line 2463
InitDefaultValue__20LabelOneValueDefaultFPPUcUi((&this->LOVTMax), ((UBYTE **)cMSG_Auto), 0U);


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSRepresentation))))), ((struct DisplayObject *)((struct VFrame *)(&this->FGraphConfig))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSRepresentation)))))), 75U, CONFIG);


Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSRepresentation)))), FREE_SQUARE, ((UBYTE **)cMSG_Representation), 188U, 8U);




SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSRepresentation)), _colsep);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSRepresentation)), _colvalue);

SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LVSRepresentation), ((UBYTE **)cMSG_CurveRepresentation1));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LVSRepresentation), ((UBYTE **)cMSG_CurveRepresentation2));

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LRGraphPref)), ((struct DisplayObject *)((struct VFrame *)(&this->FGraphConfig))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LRGraphPref), FREE_SQUARE, ((UBYTE **)cMSG_Back), 226U, 8U);
#line 2493
_line = 60U;
_spacing = 20U;
_colsep = 175U;


SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSContRecord))))), ((struct DisplayObject *)((struct VFrame *)(&this->FUsb))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSContRecord)))))), 2U, USB);


Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSContRecord)))), FREE_SQUARE, ((UBYTE **)cMSG_ContRecordUSB), _line, 8U);




SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSContRecord)), _colsep);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSContRecord)), (_colsep + 8U));

SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LVSContRecord), ((UBYTE **)cMSG_No));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LVSContRecord), ((UBYTE **)cMSG_Yes));



_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFTransfTrend)))))), ((struct DisplayObject *)((struct VFrame *)(&this->FUsb))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFTransfTrend))))))), 5U, USB);


Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFTransfTrend))), FREE_SQUARE, ((UBYTE **)cMSG_TransferTrendUSB), _line, 8U, 1U, ((UBYTE **)cMSG_MonthUnit));
#line 2532
InitDefaultFlag__17LabelOneValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETi((&this->LOVFTransfTrend), ((UBYTE **)cMSG_No), 6U, USB, 0);


SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFTransfTrend))), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFTransfTrend))), (_colsep + 8U));


_line += (2U * _spacing);

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSEraseKey))))), ((struct DisplayObject *)((struct VFrame *)(&this->FUsb))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSEraseKey)))))), 0U, USB);


Init__5LabelF8e_SYMBOLPPUcUiT3(((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSEraseKey)))), FREE_SQUARE, ((UBYTE **)cMSG_EraseKey), _line, 8U);




SetColSep__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSEraseKey)), _colsep);

SetColValue1__16LabelValueStringFUi(((struct LabelValueString *)(&this->LVSEraseKey)), (_colsep + 8U));

SetItem1Name__19LabelStringTwoItemsFPPUc((&this->LVSEraseKey), ((UBYTE **)cMSG_No));

SetItem2Name__19LabelStringTwoItemsFPPUc((&this->LVSEraseKey), ((UBYTE **)cMSG_Yes));
#line 2566
_line += _spacing;

SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFTransfMonit)))))), ((struct DisplayObject *)((struct VFrame *)(&this->FUsb))));

InitDbAccess__10MenuObjectFUi19e_TYPE_OF_DB_TARGET(((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFTransfMonit))))))), 3U, USB);


Init__13LabelOneValueF8e_SYMBOLPPUcUiN23T2(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFTransfMonit))), FREE_SQUARE, ((UBYTE **)cMSG_TransferMonitUSB), _line, 8U, 4U, ((UBYTE **)cMSG_HourUnit));
#line 2580
InitDefaultFlag__17LabelOneValueFlagFPPUcUi19e_TYPE_OF_DB_TARGETi((&this->LOVFTransfMonit), ((UBYTE **)cMSG_No), 4U, USB, 0);


SetColSep__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFTransfMonit))), _colsep);

SetColValue1__13LabelOneValueFUi(((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFTransfMonit))), (_colsep + 8U));

(__T51869784 = ((((*((struct MenuObject *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFTransfMonit)))))))).__vptr)) + 14)) , (((void (*)(struct DisplayObject *const, e_BOOL))((__T51869784->f)))(((struct 
#line 2587
DisplayObject *)(((char *)((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFTransfMonit))))))) + ((__T51869784->d)))), 0));
#line 2652
SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LStopUsb)), ((struct DisplayObject *)((struct VFrame *)(&this->FUsb))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LStopUsb), FREE_SQUARE, ((UBYTE **)cMSG_Stop), 234U, 8U);
#line 2662
SetParent__13DisplayObjectFP13DisplayObject(((struct DisplayObject *)(&this->LRTendance)), ((struct DisplayObject *)((struct VFrame *)(&this->FTendance))));

Init__5LabelF8e_SYMBOLPPUcUiT3((&this->LRTendance), FREE_SQUARE, ((UBYTE **)cMSG_Back), 232U, 8U); return;




}
#line 2683
void BuildTree__10ControllerFv( struct Controller *const this)
{




Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 0U)), 0, 0, ((struct DisplayObject *)((struct Label *)(&this->LModeVent))), (&EventNodeVentil));
#line 2695
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 1U)), 0, 0, ((struct DisplayObject *)((struct Label *)(&this->LModeVent))), (&EventNodeModifVentil));
#line 2701
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 2U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVVT)))), (&EventNodeVt));
#line 2707
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 3U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVVT)))), (&EventNodeModifVt));
#line 2713
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 4U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPi)))), (&EventNodePi));
#line 2719
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 5U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPi)))), (&EventNodeModifPi));
#line 2725
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 6U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPi2)))), (&EventNodePi2));
#line 2731
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 7U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPi2)))), (&EventNodeModifPi2));
#line 2738
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 8U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPControl)))), (&EventNodePControl));
#line 2744
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 9U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPControl)))), (&EventNodeModifPControl));
#line 2750
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 10U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPSupport)))), (&EventNodePSupport));
#line 2756
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 11U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPSupport)))), (&EventNodeModifPSupport));




Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 12U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVFVaci)))), (&EventNodeFVaci));
#line 2767
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 13U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVFVaci)))), (&EventNodeModifFVaci));
#line 2773
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 14U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVPe)))))), (&EventNodePe));
#line 2779
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 15U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVPe)))))), (&EventNodeModifPe));
#line 2786
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 16U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelSymbol *)(&this->LOVPente))))), (&EventNodePente));
#line 2792
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 17U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelSymbol *)(&this->LOVPente))))), (&EventNodeModifPente));
#line 2799
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 18U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelSymbol *)(&this->LOVRampe))))), (&EventNodeRampe));
#line 2805
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 19U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelSymbol *)(&this->LOVRampe))))), (&EventNodeModifRampe));
#line 2813
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 20U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVFRMini)))), (&EventNodeFrMini));
#line 2819
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 21U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVFRMini)))), (&EventNodeModifFrMini));
#line 2825
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 22U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVInspTime)))), (&EventNodeInspTime));
#line 2831
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 23U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVInspTime)))), (&EventNodeModifInspTime));
#line 2837
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 24U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LOVTrigI))))), (&EventNodeTriggerI));
#line 2843
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 25U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LOVTrigI))))), (&EventNodeModifTriggerI));
#line 2849
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 26U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTVSoupir))))), (&EventNodeSoupirSelect));
#line 2855
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 27U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTVSoupir))))), (&EventNodeModifSoupirSelect));
#line 2861
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 28U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVSVtSoupir))))), (&EventNodeSoupirVtCoeff));
#line 2867
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 29U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVSVtSoupir))))), (&EventNodeModifSoupirVtCoeff));
#line 2873
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 30U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVCptSoupir)))), (&EventNodeSoupirCpt));
#line 2879
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 31U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVCptSoupir)))), (&EventNodeModifSoupirCpt));
#line 2885
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 32U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVTrigE)))))), (&EventNodeTriggerE));
#line 2891
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 33U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVTrigE)))))), (&EventNodeModifTriggerE));
#line 2897
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 34U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFSecu)))))), (&EventNodeFsecu));
#line 2903
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 35U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFSecu)))))), (&EventNodeModifFsecu));
#line 2910
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 36U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVFiO2)))), (&EventNodeFiO2));




Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 37U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVFiO2)))), (&EventNodeModifFiO2));
#line 2922
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 38U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVApnee)))))), (&EventNodeApnee));
#line 2928
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 39U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVApnee)))))), (&EventNodeModifApnee));
#line 2934
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 40U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVVTCible)))))), (&EventNodeVtCible));
#line 2940
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 41U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVVTCible)))))), (&EventNodeModifVtCible));
#line 2946
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 42U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPiMax)))), (&EventNodePiMax));
#line 2952
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 43U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVPiMax)))), (&EventNodeModifPiMax));
#line 2958
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 44U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueSign *)((struct LabelOneValueSignDefault *)(&this->LOVSTrigE))))))), (&
#line 2958
EventNodeTriggerEsigned));
#line 2964
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 45U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueSign *)((struct LabelOneValueSignDefault *)(&this->LOVSTrigE))))))), (&
#line 2964
EventNodeModifTriggerEsigned));
#line 2971
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 46U)), 0, 0, ((struct DisplayObject *)(&this->LPreferences)), (&EventNodePreference));
#line 2977
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 47U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTVChgtModeV))))), (&EventNodeModeChange));
#line 2983
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 48U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTVChgtModeV))))), (&EventNodeModifModeChange));




Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 49U)), 0, 0, (&this->GhostObject), (&EventNodeGhost));
#line 2997
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 50U)), 0, 0, ((struct DisplayObject *)((struct Label *)(&this->LModeAlarm))), (&EventNodeAlarm));
#line 3003
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 51U)), 0, 0, ((struct DisplayObject *)((struct Label *)(&this->LModeAlarm))), (&EventNodeModifAlarm));
#line 3009
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 52U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)(&this->LOVPiMbar)))))), (&EventNodeAlPi));
#line 3015
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 53U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)(&this->LOVPiMbar)))))), (&EventNodeAlPiMin));
#line 3021
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 54U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)(&this->LOVPiMbar)))))), (&EventNodeAlPiMax));
#line 3027
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 55U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVtiMl))))))), (&
#line 3027
EventNodeAlVti));
#line 3033
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 56U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVtiMl))))))), (&
#line 3033
EventNodeAlVtiMin));
#line 3039
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 57U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVtiMl))))))), (&
#line 3039
EventNodeAlVtiMax));
#line 3045
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 58U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVteMl))))))), (&
#line 3045
EventNodeAlVte));
#line 3051
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 59U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVteMl))))))), (&
#line 3051
EventNodeAlVteMin));
#line 3057
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 60U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LOVVteMl))))))), (&
#line 3057
EventNodeAlVteMax));
#line 3063
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 61U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTICalibQExp))))), (&EventNodeAlCalibVte));
#line 3069
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 62U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTICalibQExp))))), (&EventNodeAlCalibVte2));
#line 3075
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 63U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LTOVFuiteLMin)))))), (&EventNodeAlFuite));
#line 3081
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 64U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LTOVFuiteLMin)))))), (&EventNodeAlFuiteMax));
#line 3088
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 65U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVFiO2))))))), (&
#line 3088
EventNodeAlFiO2));
#line 3094
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 66U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVFiO2))))))), (&
#line 3094
EventNodeAlFiO2Min));
#line 3100
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 67U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVFiO2))))))), (&
#line 3100
EventNodeAlFiO2Max));
#line 3106
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 68U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTICalibFiO2))))), (&EventNodeAlCalibFiO2));
#line 3112
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 69U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LSTICalibFiO2))))), (&EventNodeAlCalibFiO2_2));
#line 3118
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 70U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LOVFrCMin)))))), (&EventNodeAlFr));
#line 3124
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 71U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabOneValueDefault *)(&this->LOVFrCMin)))))), (&EventNodeAlFrMax));
#line 3130
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 72U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVSpO2))))))), (&
#line 3130
EventNodeAlSpO2));




Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 73U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVSpO2))))))), (&
#line 3135
EventNodeAlSpO2Min));




Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 74U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVSpO2))))))), (&
#line 3140
EventNodeAlSpO2Max));




Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 75U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVTiS))))))), (&EventNodeAlTi
#line 3145
));
#line 3151
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 76U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVTiS))))))), (&
#line 3151
EventNodeAlTiMin));
#line 3157
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 77U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelTabOneValue *)((struct LabelTabTwoValue *)((struct LabelTabTwoValueDefault *)(&this->LTTVTiS))))))), (&
#line 3157
EventNodeAlTiMax));
#line 3166
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 78U)), 0, 0, ((struct DisplayObject *)(&this->LHistoAlarm)), (&EventNodeAlHisto));
#line 3172
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 79U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LOVChgtModeA))))), (&EventNodeAlModeChange));
#line 3178
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 80U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LOVChgtModeA))))), (&EventNodeModifAlModeChange));
#line 3184
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 81U)), 0, 0, (&this->GhostObject), (&EventNodeAlGhost));
#line 3193
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 82U)), 1, 0, ((struct DisplayObject *)(&this->LRAlarmeA)), (&EventNodeHistAlBack));
#line 3199
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 83U)), 1, 0, ((struct DisplayObject *)(&this->LCancelledAlarm)), (&EventNodeHistAlCancelled));
#line 3207
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 107U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVMachineHrs)))), (&EventNodeConfMachineHour));
#line 3213
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 84U)), 1, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSLanguage))))), (&EventNodeConfLang));
#line 3219
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 85U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSLanguage))))), (&EventNodeModifConfLang));
#line 3225
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 86U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->VDConf)))), (&EventNodeConfDate));
#line 3231
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 87U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->VDConf)))), (&EventNodeConfMonth));
#line 3237
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 88U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->VDConf)))), (&EventNodeConfDay));
#line 3243
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 89U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->VDConf)))), (&EventNodeConfYear));
#line 3249
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 90U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->VTConf)))), (&EventNodeConfTime));
#line 3255
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 91U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->VTConf)))), (&EventNodeConfHour));
#line 3261
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 92U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->VTConf)))), (&EventNodeConfMinute));
#line 3267
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 93U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->VTConf)))), (&EventNodeConfSecond));
#line 3273
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 94U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSVoluntaryStopAlarm))))), (&EventNodePrefVoluntaryStopAlarm));
#line 3279
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 95U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSVoluntaryStopAlarm))))), (&EventNodeModifPrefVoluntaryStopAlarm));




Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 96U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSPressureUnit))))), (&EventNodeConfPressureUnit));
#line 3290
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 97U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSPressureUnit))))), (&EventNodeModifConfPressureUnit));
#line 3296
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 98U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSAlarmTone))))), (&EventNodeConfAlarmTone));




Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 99U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSAlarmTone))))), (&EventNodeModifConfAlarmTone));
#line 3307
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 100U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVPatientHrs))))), (&EventNodeConfPatientCount));
#line 3313
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 101U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVPatientHrs))))), (&EventNodeModifConfPatientCount));
#line 3320
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 102U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSSResetPatientHrs))))), (&EventNodeConfPatientReset));
#line 3326
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 103U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSSResetPatientHrs))))), (&EventNodeModifConfPatientReset));
#line 3333
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 105U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSSRestoreDefaultSettings))))), (&EventNodeConfResetDefaultSetting));




Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 106U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSSRestoreDefaultSettings))))), (&EventNodeModifConfResetDefaultSetting));
#line 3346
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 104U)), 0, 0, ((struct DisplayObject *)(&this->LMaintenance)), (&EventNodeConfMaint));
#line 3352
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 108U)), 0, 0, ((struct DisplayObject *)(&this->LNextPage)), (&EventNodeConfNextPage));
#line 3361
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 109U)), 1, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&(*(GetInstance__10HMI_Setup1SFv())).LVSModeCycl))))), (&EventNodeConfModeCycl));
#line 3367
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 110U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&(*(GetInstance__10HMI_Setup1SFv())).LVSModeCycl))))), (&EventNodeModifConfModeCycl));
#line 3373
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 111U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&(*(GetInstance__10HMI_Setup1SFv())).LVSRelativePressure))))), (&EventNodeConfRelativePress));
#line 3379
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 112U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&(*(GetInstance__10HMI_Setup1SFv())).LVSRelativePressure))))), (&EventNodeModifConfRelativePress));
#line 3386
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 113U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&(*(GetInstance__10HMI_Setup1SFv())).LVSConvTrigE))))), (&EventNodeConfConvTrigE));
#line 3392
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 114U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&(*(GetInstance__10HMI_Setup1SFv())).LVSConvTrigE))))), (&EventNodeModifConfConvTrigE));




Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 115U)), 0, 0, ((struct DisplayObject *)(&(*(GetInstance__10HMI_Setup1SFv())).LVSBack)), (&EventNodeConfig1BackToConfig));
#line 3405
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 116U)), 1, 0, ((struct DisplayObject *)(&this->LCircuitLeak)), (&EventNodeCircuitLeak));
#line 3413
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 117U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSScreenSave))))), (&EventNodePrefScreenSave));
#line 3419
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 118U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSScreenSave))))), (&EventNodeModifPrefScreenSave));
#line 3427
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 119U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LPBBrightness)))), (&EventNodePrefBrightness));
#line 3433
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 120U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LPBBrightness)))), (&EventNodeModifPrefBrightness));




Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 121U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LPBSoundLevel)))), (&EventNodePrefSoundLevel));
#line 3444
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 122U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LPBSoundLevel)))), (&EventNodeModifPrefSoundLevel));
#line 3451
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 123U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFDAjustKeyTone)))))), (&EventNodePrefKeyTone));
#line 3457
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 124U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFDAjustKeyTone)))))), (&EventNodeModifPrefKeyTone));
#line 3463
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 125U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSApneaAlarm))))), (&EventNodePrefApneaAlarm));
#line 3469
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 126U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSApneaAlarm))))), (&EventNodeModifPrefApneaAlarm));
#line 3475
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 127U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFDisconnectionAlarm)))))), (&EventNodePrefDisconnectionAlarm)
#line 3475
);
#line 3481
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 128U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFDisconnectionAlarm)))))), (&
#line 3481
EventNodeModifPrefDisconnectionAlarm));
#line 3498
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 129U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSWaveformDisplay))))), (&EventNodePrefWaveDisplay));
#line 3504
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 130U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSWaveformDisplay))))), (&EventNodeModifPrefWaveDisplay));
#line 3513
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 131U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSPediatricCircuit))))), (&EventNodePrefPediatricCircuit));
#line 3519
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 132U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSPediatricCircuit))))), (&EventNodeModifPrefPediatricCircuit));
#line 3525
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 133U)), 1, 0, ((struct DisplayObject *)(&this->LTrendMenu)), (&EventNodePrefTrend));
#line 3531
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 134U)), 1, 0, ((struct DisplayObject *)(&this->LRVentilMenu)), (&EventNodePrefBackVentil));
#line 3540
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 135U)), 1, 0, ((struct DisplayObject *)(&this->LHistoAnom)), (&EventNodeMaintHistAno));
#line 3546
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 136U)), 0, 0, ((struct DisplayObject *)(&this->LVoltCtrl)), (&EventNodeMaintVoltCtrl));
#line 3552
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 137U)), 0, 0, ((struct DisplayObject *)(&this->LSensorCal)), (&EventNodeMaintSensorCal));
#line 3558
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 139U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)((struct ManualCalibValue *)(&this->LOVPatientPressure))))))), (&
#line 3558
EventNodeMaintPatientPressure));
#line 3564
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 140U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)((struct ManualCalibValue *)(&this->LOVPatientPressure))))))), (&
#line 3564
EventNodeMaintPatientPressure1));
#line 3570
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 141U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)((struct ManualCalibValue *)(&this->LOVPatientPressure))))))), (&
#line 3570
EventNodeMaintPatientPressure2));
#line 3576
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 142U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)((struct ManualCalibValue *)(&this->LOVPatientPressure))))))), (&
#line 3576
EventNodeMaintPatientPressure3));
#line 3582
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 143U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVValvePressure))))), (&EventNoteMaintValvePressure));
#line 3588
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 144U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVValvePressure))))), (&EventNoteMaintValvePressure1));
#line 3594
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 145U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVValvePressure))))), (&EventNoteMaintValvePressure2));
#line 3600
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 146U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVValvePressure))))), (&EventNoteMaintValvePressure3));
#line 3606
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 147U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns)))))), (&EventNodeMaintFlowIns));
#line 3612
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 148U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns)))))), (&EventNodeMaintFlowIns1));
#line 3618
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 149U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns)))))), (&EventNodeMaintFlowIns2));
#line 3624
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 150U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns)))))), (&EventNodeMaintFlowIns3));
#line 3630
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 151U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns)))))), (&EventNodeMaintFlowIns4));
#line 3636
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 152U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns)))))), (&EventNodeMaintFlowIns5));
#line 3642
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 153U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns)))))), (&EventNodeMaintFlowIns6));
#line 3648
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 154U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns)))))), (&EventNodeMaintFlowIns7));
#line 3654
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 155U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns)))))), (&EventNodeMaintFlowIns8));
#line 3660
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 156U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowIns)))))), (&EventNodeMaintFlowIns9));
#line 3667
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 157U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVFlowExp))))), (&EventNodeMaintFlowExp));
#line 3673
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 158U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVFlowExp))))), (&EventNodeMaintFlowExp1));
#line 3679
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 159U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVFlowExp))))), (&EventNodeMaintFlowExp2));
#line 3685
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 160U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVFlowExp))))), (&EventNodeMaintFlowExp3));
#line 3691
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 161U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVFlowExp))))), (&EventNodeMaintFlowExp4));
#line 3697
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 162U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVFlowExp))))), (&EventNodeMaintFlowExp5));
#line 3703
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 163U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVFlowExp))))), (&EventNodeMaintFlowExp6));
#line 3709
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 164U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVFlowExp))))), (&EventNodeMaintFlowExp7));
#line 3715
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 165U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVFlowExp))))), (&EventNodeMaintFlowExp8));
#line 3721
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 166U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVFlowExp))))), (&EventNodeMaintFlowExp9));
#line 3727
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 167U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFiO2Concent)))))), (&EventNodeMaintFiO2Concent));
#line 3733
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 168U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFiO2Concent)))))), (&EventNodeMaintFiO2Concent1));
#line 3739
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 169U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFiO2Concent)))))), (&EventNodeMaintFiO2Concent2));
#line 3746
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 170U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2)))))), (&EventNodeMaintFlowO2));
#line 3752
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 171U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2)))))), (&EventNodeMaintFlowO2_1));
#line 3758
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 172U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2)))))), (&EventNodeMaintFlowO2_2));
#line 3764
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 173U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2)))))), (&EventNodeMaintFlowO2_3));
#line 3770
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 174U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2)))))), (&EventNodeMaintFlowO2_4));
#line 3776
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 175U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2)))))), (&EventNodeMaintFlowO2_5));
#line 3782
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 176U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2)))))), (&EventNodeMaintFlowO2_6));
#line 3788
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 177U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2)))))), (&EventNodeMaintFlowO2_7));
#line 3794
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 178U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2)))))), (&EventNodeMaintFlowO2_8));
#line 3800
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 179U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVFlowO2)))))), (&EventNodeMaintFlowO2_9));
#line 3806
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 180U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVPressO2)))))), (&EventNodeMaintPressO2));
#line 3812
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 181U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVPressO2)))))), (&EventNodeMaintPressO2_1));
#line 3818
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 182U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct AutoCalibValue *)(&this->LOVPressO2)))))), (&EventNodeMaintPressO2_2));
#line 3825
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 184U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVPwmBlower))))), (&EventNodeMaintPwmBlower));
#line 3831
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 185U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVPwmBlower))))), (&EventNodeModifMaintPwmBlower));
#line 3837
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 186U)), 0, 0, ((struct DisplayObject *)(&this->LRConfMaint)), (&EventNodeMaintBackToConfig));
#line 3844
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 138U)), 0, 0, (&this->GhostObject), (&EventNodeMaintGhostStart));
#line 3850
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 183U)), 0, 0, (&this->GhostObject), (&EventNodeMaintGhostEnd));
#line 3859
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 187U)), 1, 0, ((struct DisplayObject *)(&this->LRMaintAno)), (&EventNodeHistAnoBackMaint));
#line 3868
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 188U)), 1, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)(&this->LOVBuzzerVoltage)))), (&EventNodeSupplyBuzVolt));
#line 3874
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 189U)), 0, 0, ((struct DisplayObject *)(&this->LBackupBuzzer)), (&EventNodeSupplyBackUpBuz));
#line 3880
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 190U)), 0, 0, ((struct DisplayObject *)(&this->LBatteryMenu)), (&EventNodeSupplyBatteryMenu));
#line 3886
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 191U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSBaroCorrector))))), (&EventNodeSupplyAltCompens));
#line 3892
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 192U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSBaroCorrector))))), (&EventNodeModifSupplyAltCompens));
#line 3898
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 193U)), 0, 0, ((struct DisplayObject *)(&this->LRMaintTension)), (&EventNodeSupplyBackToMaint));
#line 3906
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 194U)), 0, 0, (&this->GhostObject), (&EventNodeGraphGhost));
#line 3914
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 195U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSVisu))))), (&EventNodeCfgGraphVisu));
#line 3920
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 196U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSVisu))))), (&EventNodeModifCfgGraphVisu));
#line 3926
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 197U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVPMax))))), (&EventNodeCfgGraphPMax));
#line 3932
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 198U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVPMax))))), (&EventNodeModifCfgGraphPMax));
#line 3938
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 199U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVQMax))))), (&EventNodeCfgGraphQMax));
#line 3944
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 200U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVQMax))))), (&EventNodeModifCfgGraphQMax));
#line 3950
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 201U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVVtMax))))), (&EventNodeCfgGraphVtMax));
#line 3956
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 202U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVVtMax))))), (&EventNodeModifCfgGraphVtMax));
#line 3962
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 203U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVTMax))))), (&EventNodeCfgGraphTMax));
#line 3968
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 204U)), 0, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)(&this->LOVTMax))))), (&EventNodeModifCfgGraphTMax));
#line 3974
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 205U)), 1, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSRepresentation))))), (&EventNodeCfgGraphRepresent));
#line 3980
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 206U)), 1, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSRepresentation))))), (&EventNodeModifCfgGraphRepresent));
#line 3986
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 207U)), 1, 0, ((struct DisplayObject *)(&this->LRGraphPref)), (&EventNodeCfgGraphBackPref));
#line 3994
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 208U)), 1, 0, ((struct DisplayObject *)(&this->LRMaintBattery)), (&EventNodeBatteryBackToMaint));
#line 4001
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 209U)), 0, 0, (&this->GhostObject), (&EventNodeUsbGhost));




Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 214U)), 1, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSEraseKey))))), (&EventNodeUsbEraseKey));




Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 215U)), 1, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSEraseKey))))), (&EventNodeModifUsbEraseKey));
#line 4033
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 210U)), 1, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSContRecord))))), (&EventNodeUsbContRecord));




Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 211U)), 1, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelValueString *)(&this->LVSContRecord))))), (&EventNodeModifUsbContRecord));
#line 4044
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 216U)), 1, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFTransfMonit)))))), (&EventNodeUsbTransferMonit));




Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 217U)), 1, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFTransfMonit)))))), (&EventNodeModifUsbTransferMonit));
#line 4055
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 212U)), 1, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFTransfTrend)))))), (&EventNodeUsbTransferTrend));




Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 213U)), 1, 0, ((struct DisplayObject *)((struct Label *)((struct EditableObject *)((struct LabelOneValue *)((struct LabelOneValueDefault *)(&this->LOVFTransfTrend)))))), (&EventNodeModifUsbTransferTrend));
#line 4077
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 218U)), 1, 0, ((struct DisplayObject *)(&this->LStopUsb)), (&EventNodeUsbStop));
#line 4084
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 219U)), 1, 0, ((struct DisplayObject *)(&this->LRTendance)), (&EventNodeTrendBack));
#line 4092
Init__15MenuControlNodeFiT1P13DisplayObjectP9EventNode((GetNodeAt__10ControllerFUi(this, 220U)), 0, 0, (&this->GhostObject), (&EventNodeGhostEnd)); return;




}
