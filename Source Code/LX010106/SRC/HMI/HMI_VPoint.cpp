/******************************************************************************/
/*                                                                            */
/* Project N°  :  RB0505                                                      */
/*                                                                            */
/*----------------------------------------------------------------------------*/
/*                                                                            */
/* Filename  : HMI_VPoint.cpp                            	 	  					*/
/*                                                                            */
/*----------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------*/


/******************************************************************************/
/*%C                     Functionnal description :                            */
/*%C                                                                          */
/*%C   Permet d'afficher un pixel en (X : Y)   					  						*/
/*		                                                                   	 	*/
/******************************************************************************/

/******************************************************************************/
/*                           HEADER INCLUDE FILE		                  		*/
/******************************************************************************/
#include "HMI_VPoint.hpp"

/******************************************************************************/
/*                           CONSTRUCTEUR/DESTRUCTEUR                			*/
/******************************************************************************/
VPoint::VPoint()
{
   Init(0,0);
}

/******************************************************************************/
/*                           ACCESSEURS				                	   		*/
/******************************************************************************/
void VPoint::SetX(SWORD16 _X)
{
   X = _X;
}
/*----------------------------------------------------------------------------*/
SWORD16 VPoint::GetX()
{
   return X;
}
/*----------------------------------------------------------------------------*/
void VPoint::SetY(SWORD16 _Y)
{
   Y = _Y;
}
/*----------------------------------------------------------------------------*/
SWORD16 VPoint::GetY()
{
   return Y;
}

/******************************************************************************/
/*                           OPERATEUR				                	   			*/
/******************************************************************************/
bool VPoint::operator!=(VPoint&  P)
{
   return (this->X != P.GetX()) ||
          (this->Y != P.GetY());
}
/******************************************************************************/
/*                           METHODES                					      		*/
/******************************************************************************/

/******************************************************************************/
/*%C                       Functionnal description :                      		*/
/*%C                                                                          */
/*%C Initialisation																				*/
/*%C                                                                         	*/
/*%I Input Parameter : 																			*/
/*%I 		X : Abscisse													           		   */
/*%I		Y : Ordonnée														            	*/
/*%IO Input/Output : 																			*/
/*%IO		NONE																					  	*/
/*%O Output Parameter : 																	 	*/
/*%O 		NONE  							  														*/
/******************************************************************************/
void VPoint::Init(SWORD16 _X,
						SWORD16 _Y)
{
   SetX(_X);
   SetY(_Y);
}

/******************************************************************************/
/*%C                       Functionnal description :                      		*/
/*%C                                                                          */
/*%C Affectation d'un pixel dans un espace défini										*/
/*%C                                                                         	*/
/*%I Input Parameter : 																			*/
/*%I 		Ex : Abscisse à modifier									           		   */
/*%I		Ey : Ordonnée à modifier										            	*/
/*%IO Input/Output : 																			*/
/*%IO		NONE																					  	*/
/*%O Output Parameter : 																	 	*/
/*%O 		Coordonnées du Pixel dans l'espace défini										*/
/******************************************************************************/
Pixel& VPoint::ToPixel(	Scale *_Ex,
								Scale *_Ey)
{
   static Pixel pix;
   pix.SetX(_Ex->ValToPoint(X));
   pix.SetY(_Ey->ValToPoint(Y));
   return pix;
}
