;;
;; C166/ST10 startup code generated by EDE for project rb0505
;;
;; If modifications are needed, disable generation of the startup code in EDE:
;; In the EDE Project Options dialog select Application, and then Startup. Make
;; sure the checkbox 'Generate system startup code and add it to project' is not
;; checked. Note that changes in EDE will now no longer be reflected in the
;; startup code. Also be aware that the modifications will be overwritten when
;; the checkbox is enabled again.
;;

$EXTEND
$CASE
$GENONLY
$DEBUG
$NOLOCALS
$CHECKCPU16
$CHECKBUS18
$NOMOD166				; disable the internal set of SFRs
$STDNAMES(regf276e.def)		; define SFRs

@SET( BIT_INIT, 0 )			; disable(0)/enable(1) initialization of bit
					; variables at startup
$INCLUDE(head.asm)			; Generic definitions (see product include dir)
$INCLUDE(_c_init.asm)			; Initialize C variables

	NAME	CSTART			; module name

	PUBLIC	__IDLE			; cstart end
	PUBLIC	__EXIT			; address to jump to on 'exit()'
	EXTERN	_main:FAR		; start label user program
	EXTERN __C_INIT:FAR

__CSTART_PR	SECTION CODE WORD PUBLIC 'CPROGRAM'
__CSTART	PROC TASK __CSTART_TASK INTNO __CSTART_INUM = 0

	DISWDT					;  Disable watchdog timer

	EXTR	#1
	MOV	XPERCON, #0x05AC
	BFLDL	SYSCON, #LOW (0xFFFF&~0), #LOW (0x8404&~0)
	BFLDH	SYSCON, #HIGH (0xFFFF&~0), #HIGH (0x8404&~0)
	MOV	ADDRSEL1, #0x1007
	MOV	ADDRSEL2, #0x2007
	MOV	ADDRSEL3, #0x3000
	MOV	ADDRSEL4, #0x4000
	BFLDL	BUSCON0, #LOW (0xF6FF&~0), #LOW (0xC0BC&~0)
	BFLDH	BUSCON0, #HIGH (0xF6FF&~0), #HIGH (0xC0BC&~0)
	BFLDL	BUSCON1, #0xFF, #LOW 0x048D
	BFLDH	BUSCON1, #0xF6, #HIGH 0x048D
	BFLDL	BUSCON2, #0xFF, #LOW 0x04BF
	BFLDH	BUSCON2, #0xF6, #HIGH 0x04BF
	BFLDL	BUSCON3, #0xFF, #LOW 0x043F
	BFLDH	BUSCON3, #0xF6, #HIGH 0x043F
	BFLDL	BUSCON4, #0xFF, #LOW 0xC43A
	BFLDH	BUSCON4, #0xF6, #HIGH 0xC43A
	EXTR	#1
	MOV	XADRS3, #0x800B

	ATOMIC	#3
	MOV	SP,	#?SYSSTACK_TOP		; Set stack pointer.
	MOV	STKOV,	#?SYSSTACK_BOTTOM + 6*2	; Set stack overflow pointer.
	MOV	STKUN,	#?SYSSTACK_TOP		; Set stack underflow pointer.

	MOV	CP,	#CSTART_RBANK		; Set context pointer.
	NOP

	MOV	DPP1, #PAG C166_XGROUP	; set DPP1 to page of user stack / xnear data
	; Set user stack pointer and make sure it is pointed to by DPP1
	MOV	R0, #POF (?USRSTACK_TOP - 1) + 0x4001
	EINIT				; End of initialization

@_CALL(__C_INIT, R1)			; initialization of global/static data

	MOV	R12, #0			; set argc to 0
	MOV	R13, #0			; set argv[] to 0
	MOV	R14, #0			;

@_CALL( _main, R1)

; The exit() function causes normal program termination to occur. First, all 
; functions registered by the atexit() function are called in the reverse 
; order. Next, all open streams with unwritten buffered data are flushed, all 
; open streams are closed and all files created by the tmpfile() function are 
; removed. The status value passed to exit is returned in R4.
__EXIT: LABEL FAR			; the exit() or abort() function jumps
					; to this entry.
__IDLE: IDLE				; Power down CPU until peripheral inter-
					; rupt or external interrupt occurs.
	JMPR	CC_UC, __IDLE		; set idle mode again.
	RETV				; Virtual return.
__CSTART	ENDP
__CSTART_PR	ENDS


C166_US	SECTION	DATA WORD GLBUSRSTACK 'CUSTACK'
	DS	2			; Allocate a user stack of at least 2 bytes
C166_US	ENDS

C166_DGROUP	DGROUP	__DUMMY
__DUMMY	SECTION DATA WORD PUBLIC 'CNEAR'
__DUMMY	ENDS
C166_XGROUP	DGROUP	__XDUMMY,C166_US
__XDUMMY SECTION DATA WORD PUBLIC
__XDUMMY ENDS

CSTART_RBANK	REGDEF R0-R15		; Register usage
		SSKDEF	4	; System stack size

		END
